{
	"id": "142d0abd61081c9d942b3497531a3eeb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"NbaToddlers_flat.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n\n// File: contracts/NbaToddlers.sol\n\n\npragma solidity 0.8.7;\n\n\n\ncontract NbaToddlers is ERC721 {\n    uint256 public constant MAX_SUPPLY = 10;\n    uint256 public tokenSupply;\n\n    constructor() ERC721(\"NBA Toddlers\", \"NBAT\") {}\n\n    function mint() external {\n        require(tokenSupply < MAX_SUPPLY, \"ERC721: all NFTs are minted.\");\n        _mint(msg.sender, tokenSupply);\n        tokenSupply++;\n    }\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"ipfs://QmeqDTHvUoKjiKvRCnvc3fX9b5qPQc1c399JF8sEW5RW4n/\";\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"NbaToddlers_flat.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NbaToddlers_flat.sol\":1113:10077  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NbaToddlers_flat.sol\":1113:10077  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208fe3ebcea1379547080a7ba689e6c4650faf69ac84a4bb9820e7111faa5b4bba64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fe3ebcea1379547080a7ba689e6c4650faf69ac84a4bb9820e7111faa5b4bba64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xE3 0xEB 0xCE LOG1 CALLDATACOPY SWAP6 SELFBALANCE ADDMOD EXP PUSH28 0xA689E6C4650FAF69AC84A4BB9820E7111FAA5B4BBA64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1113:8964:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1113:8964:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fe3ebcea1379547080a7ba689e6c4650faf69ac84a4bb9820e7111faa5b4bba64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xE3 0xEB 0xCE LOG1 CALLDATACOPY SWAP6 SELFBALANCE ADDMOD EXP PUSH28 0xA689E6C4650FAF69AC84A4BB9820E7111FAA5B4BBA64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1113:8964:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 10077,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208fe3ebcea1379547080a7ba689e6c4650faf69ac84a4bb9820e7111faa5b4bba64736f6c63430008070033",
									".code": [
										{
											"begin": 1113,
											"end": 10077,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 10077,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 10077,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 10077,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1113,
											"end": 10077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 10077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 10077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 10077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 10077,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NbaToddlers_flat.sol\":33923:50250  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"NbaToddlers_flat.sol\":34685:34798  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NbaToddlers_flat.sol\":34751:34764  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"NbaToddlers_flat.sol\":34751:34756  _name */\n  0x00\n  swap1\n    /* \"NbaToddlers_flat.sol\":34751:34764  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"NbaToddlers_flat.sol\":34774:34791  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"NbaToddlers_flat.sol\":34774:34781  _symbol */\n  0x01\n  swap1\n    /* \"NbaToddlers_flat.sol\":34774:34791  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"NbaToddlers_flat.sol\":34685:34798  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"NbaToddlers_flat.sol\":33923:50250  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"NbaToddlers_flat.sol\":33923:50250  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NbaToddlers_flat.sol\":33923:50250  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NbaToddlers_flat.sol\":34865:35165  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":5214:5228   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5207:5229   */\n      iszero\n        /* \"#utility.yul\":5189:5230   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5177:5179   */\n      0x20\n        /* \"#utility.yul\":5162:5180   */\n      add\n        /* \"NbaToddlers_flat.sol\":34865:35165  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NbaToddlers_flat.sol\":35766:35864  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37230:37397  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":4478:4520   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4466:4521   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4448:4522   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"#utility.yul\":4421:4439   */\n      add\n        /* \"NbaToddlers_flat.sol\":37230:37397  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_23\n        /* \"#utility.yul\":4302:4528   */\n      jump\n        /* \"NbaToddlers_flat.sol\":36763:37169  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"NbaToddlers_flat.sol\":37907:38233  function transferFrom(... */\n    tag_7:\n      tag_35\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":38299:38478  function safeTransferFrom(... */\n    tag_8:\n      tag_35\n      tag_44\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":35485:35704  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_29\n      tag_47\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":35224:35428  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":9204:9229   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":9192:9194   */\n      0x20\n        /* \"#utility.yul\":9177:9195   */\n      add\n        /* \"NbaToddlers_flat.sol\":35224:35428  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":9058:9235   */\n      jump\n        /* \"NbaToddlers_flat.sol\":35928:36030  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_25\n      tag_57\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37464:37617  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_35\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":38544:38858  function safeTransferFrom(... */\n    tag_13:\n      tag_35\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":36096:36372  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_25\n      tag_68\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37683:37845  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_19\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":37780:37784  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":37803:37821  _operatorApprovals */\n      0x05\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":37803:37838  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"NbaToddlers_flat.sol\":37683:37845  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"NbaToddlers_flat.sol\":34865:35165  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n        /* \"NbaToddlers_flat.sol\":34967:34971  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":35002:35042  interfaceId == type(IERC721).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":35017:35042  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":35002:35042  interfaceId == type(IERC721).interfaceId */\n      eq\n      dup1\n        /* \"NbaToddlers_flat.sol\":35002:35106  interfaceId == type(IERC721).interfaceId ||... */\n      tag_77\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":35058:35106  interfaceId == type(IERC721Metadata).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":35073:35106  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":35058:35106  interfaceId == type(IERC721Metadata).interfaceId */\n      eq\n        /* \"NbaToddlers_flat.sol\":35002:35106  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"NbaToddlers_flat.sol\":35002:35158  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_79\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":12954:12979  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":12939:12979  interfaceId == type(IERC165).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":35122:35158  super.supportsInterface(interfaceId) */\n    tag_79:\n        /* \"NbaToddlers_flat.sol\":34983:35158  return... */\n      swap3\n        /* \"NbaToddlers_flat.sol\":34865:35165  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":35766:35864  function name() public view virtual override returns (string memory) {... */\n    tag_26:\n        /* \"NbaToddlers_flat.sol\":35820:35833  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":35852:35857  _name */\n      0x00\n        /* \"NbaToddlers_flat.sol\":35845:35857  return _name */\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_83\n      jump\t// in\n    tag_84:\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_86\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_85)\n    tag_86:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_87:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_87\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":35766:35864  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":37230:37397  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_32:\n        /* \"NbaToddlers_flat.sol\":37306:37313  address */\n      0x00\n        /* \"NbaToddlers_flat.sol\":37325:37348  _requireMinted(tokenId) */\n      tag_89\n        /* \"NbaToddlers_flat.sol\":37340:37347  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":37325:37339  _requireMinted */\n      tag_90\n        /* \"NbaToddlers_flat.sol\":37325:37348  _requireMinted(tokenId) */\n      jump\t// in\n    tag_89:\n      pop\n        /* \"NbaToddlers_flat.sol\":37366:37390  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":37366:37381  _tokenApprovals */\n      0x04\n        /* \"NbaToddlers_flat.sol\":37366:37390  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"NbaToddlers_flat.sol\":37230:37397  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":36763:37169  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_38:\n        /* \"NbaToddlers_flat.sol\":36843:36856  address owner */\n      0x00\n        /* \"NbaToddlers_flat.sol\":36859:36882  ERC721.ownerOf(tokenId) */\n      tag_92\n        /* \"NbaToddlers_flat.sol\":36874:36881  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":36859:36873  ERC721.ownerOf */\n      tag_48\n        /* \"NbaToddlers_flat.sol\":36859:36882  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_92:\n        /* \"NbaToddlers_flat.sol\":36843:36882  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":36906:36911  owner */\n      dup1\n        /* \"NbaToddlers_flat.sol\":36900:36911  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":36900:36902  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":36900:36911  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NbaToddlers_flat.sol\":36892:36949  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8428:8430   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":36892:36949  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8410:8431   */\n      mstore\n        /* \"#utility.yul\":8467:8469   */\n      0x21\n        /* \"#utility.yul\":8447:8465   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8440:8470   */\n      mstore\n        /* \"#utility.yul\":8506:8540   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":8486:8504   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8479:8541   */\n      mstore\n        /* \"#utility.yul\":8577:8580   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8557:8575   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8550:8581   */\n      mstore\n        /* \"#utility.yul\":8598:8617   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":36892:36949  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":36981:37002  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      eq\n      dup1\n        /* \"NbaToddlers_flat.sol\":36981:37043  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_99\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":37006:37043  isApprovedForAll(owner, _msgSender()) */\n      tag_99\n        /* \"NbaToddlers_flat.sol\":37023:37028  owner */\n      dup2\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":37683:37845  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_72\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37006:37043  isApprovedForAll(owner, _msgSender()) */\n    tag_99:\n        /* \"NbaToddlers_flat.sol\":36960:37130  require(... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8830:8832   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":36960:37130  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8812:8833   */\n      mstore\n        /* \"#utility.yul\":8869:8871   */\n      0x3d\n        /* \"#utility.yul\":8849:8867   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8842:8872   */\n      mstore\n        /* \"#utility.yul\":8908:8942   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":8888:8906   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8881:8943   */\n      mstore\n        /* \"#utility.yul\":8979:9010   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":8959:8977   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8952:9011   */\n      mstore\n        /* \"#utility.yul\":9028:9047   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":36960:37130  require(... */\n      tag_94\n        /* \"#utility.yul\":8628:9053   */\n      jump\n        /* \"NbaToddlers_flat.sol\":36960:37130  require(... */\n    tag_101:\n        /* \"NbaToddlers_flat.sol\":37141:37162  _approve(to, tokenId) */\n      tag_104\n        /* \"NbaToddlers_flat.sol\":37150:37152  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":37154:37161  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":37141:37149  _approve */\n      tag_105\n        /* \"NbaToddlers_flat.sol\":37141:37162  _approve(to, tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"NbaToddlers_flat.sol\":36833:37169  {... */\n      pop\n        /* \"NbaToddlers_flat.sol\":36763:37169  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":37907:38233  function transferFrom(... */\n    tag_42:\n        /* \"NbaToddlers_flat.sol\":38096:38137  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_107\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":38129:38136  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":38096:38114  _isApprovedOrOwner */\n      tag_109\n        /* \"NbaToddlers_flat.sol\":38096:38137  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_107:\n        /* \"NbaToddlers_flat.sol\":38088:38187  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5667:5669   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":38088:38187  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5649:5670   */\n      mstore\n        /* \"#utility.yul\":5706:5708   */\n      0x2d\n        /* \"#utility.yul\":5686:5704   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5679:5709   */\n      mstore\n        /* \"#utility.yul\":5745:5779   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":5725:5743   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5718:5780   */\n      mstore\n        /* \"#utility.yul\":5816:5831   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":5796:5814   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5789:5832   */\n      mstore\n        /* \"#utility.yul\":5849:5868   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":38088:38187  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_94\n        /* \"#utility.yul\":5465:5874   */\n      jump\n        /* \"NbaToddlers_flat.sol\":38088:38187  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n    tag_110:\n        /* \"NbaToddlers_flat.sol\":38198:38226  _transfer(from, to, tokenId) */\n      tag_104\n        /* \"NbaToddlers_flat.sol\":38208:38212  from */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38214:38216  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38218:38225  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38198:38207  _transfer */\n      tag_114\n        /* \"NbaToddlers_flat.sol\":38198:38226  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":38299:38478  function safeTransferFrom(... */\n    tag_45:\n        /* \"NbaToddlers_flat.sol\":38432:38471  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_104\n        /* \"NbaToddlers_flat.sol\":38449:38453  from */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38455:38457  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38459:38466  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38432:38471  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"NbaToddlers_flat.sol\":38432:38448  safeTransferFrom */\n      tag_66\n        /* \"NbaToddlers_flat.sol\":38432:38471  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":35485:35704  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_48:\n        /* \"NbaToddlers_flat.sol\":35557:35564  address */\n      0x00\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":40225:40232  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup1\n        /* \"NbaToddlers_flat.sol\":35619:35675  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8075:8077   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":35619:35675  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8057:8078   */\n      mstore\n        /* \"#utility.yul\":8114:8116   */\n      0x18\n        /* \"#utility.yul\":8094:8112   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8087:8117   */\n      mstore\n        /* \"#utility.yul\":8153:8179   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":8133:8151   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8126:8180   */\n      mstore\n        /* \"#utility.yul\":8197:8215   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":35619:35675  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_94\n        /* \"#utility.yul\":7873:8221   */\n      jump\n        /* \"NbaToddlers_flat.sol\":35224:35428  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_53:\n        /* \"NbaToddlers_flat.sol\":35296:35303  uint256 */\n      0x00\n        /* \"NbaToddlers_flat.sol\":35323:35342  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":35315:35388  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7665:7667   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":35315:35388  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7647:7668   */\n      mstore\n        /* \"#utility.yul\":7704:7706   */\n      0x29\n        /* \"#utility.yul\":7684:7702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7677:7707   */\n      mstore\n        /* \"#utility.yul\":7743:7777   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7723:7741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7716:7778   */\n      mstore\n        /* \"#utility.yul\":7814:7825   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7794:7812   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7787:7826   */\n      mstore\n        /* \"#utility.yul\":7843:7862   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":35315:35388  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_94\n        /* \"#utility.yul\":7463:7868   */\n      jump\n        /* \"NbaToddlers_flat.sol\":35315:35388  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_124:\n      pop\n        /* \"NbaToddlers_flat.sol\":35405:35421  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":35405:35414  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":35405:35421  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"NbaToddlers_flat.sol\":35224:35428  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":35928:36030  function symbol() public view virtual override returns (string memory) {... */\n    tag_57:\n        /* \"NbaToddlers_flat.sol\":35984:35997  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":36016:36023  _symbol */\n      0x01\n        /* \"NbaToddlers_flat.sol\":36009:36023  return _symbol */\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37464:37617  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_62:\n        /* \"NbaToddlers_flat.sol\":37558:37610  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_134\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":37591:37599  operator */\n      dup4\n        /* \"NbaToddlers_flat.sol\":37601:37609  approved */\n      dup4\n        /* \"NbaToddlers_flat.sol\":37558:37576  _setApprovalForAll */\n      tag_136\n        /* \"NbaToddlers_flat.sol\":37558:37610  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_134:\n        /* \"NbaToddlers_flat.sol\":37464:37617  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":38544:38858  function safeTransferFrom(... */\n    tag_66:\n        /* \"NbaToddlers_flat.sol\":38712:38753  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":38745:38752  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38712:38730  _isApprovedOrOwner */\n      tag_109\n        /* \"NbaToddlers_flat.sol\":38712:38753  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"NbaToddlers_flat.sol\":38704:38803  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5667:5669   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":38704:38803  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5649:5670   */\n      mstore\n        /* \"#utility.yul\":5706:5708   */\n      0x2d\n        /* \"#utility.yul\":5686:5704   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5679:5709   */\n      mstore\n        /* \"#utility.yul\":5745:5779   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":5725:5743   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5718:5780   */\n      mstore\n        /* \"#utility.yul\":5816:5831   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":5796:5814   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5789:5832   */\n      mstore\n        /* \"#utility.yul\":5849:5868   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":38704:38803  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_94\n        /* \"#utility.yul\":5465:5874   */\n      jump\n        /* \"NbaToddlers_flat.sol\":38704:38803  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n    tag_140:\n        /* \"NbaToddlers_flat.sol\":38813:38851  _safeTransfer(from, to, tokenId, data) */\n      tag_142\n        /* \"NbaToddlers_flat.sol\":38827:38831  from */\n      dup5\n        /* \"NbaToddlers_flat.sol\":38833:38835  to */\n      dup5\n        /* \"NbaToddlers_flat.sol\":38837:38844  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":38846:38850  data */\n      dup5\n        /* \"NbaToddlers_flat.sol\":38813:38826  _safeTransfer */\n      tag_143\n        /* \"NbaToddlers_flat.sol\":38813:38851  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_142:\n        /* \"NbaToddlers_flat.sol\":38544:38858  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":36096:36372  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_69:\n        /* \"NbaToddlers_flat.sol\":36169:36182  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":36194:36217  _requireMinted(tokenId) */\n      tag_145\n        /* \"NbaToddlers_flat.sol\":36209:36216  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":36194:36208  _requireMinted */\n      tag_90\n        /* \"NbaToddlers_flat.sol\":36194:36217  _requireMinted(tokenId) */\n      jump\t// in\n    tag_145:\n        /* \"NbaToddlers_flat.sol\":36228:36249  string memory baseURI */\n      0x00\n        /* \"NbaToddlers_flat.sol\":36252:36262  _baseURI() */\n      tag_146\n        /* \"NbaToddlers_flat.sol\":36690:36699  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"NbaToddlers_flat.sol\":36614:36706  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"NbaToddlers_flat.sol\":36252:36262  _baseURI() */\n    tag_146:\n        /* \"NbaToddlers_flat.sol\":36228:36262  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":36303:36304  0 */\n      0x00\n        /* \"NbaToddlers_flat.sol\":36285:36292  baseURI */\n      dup2\n        /* \"NbaToddlers_flat.sol\":36279:36300  bytes(baseURI).length */\n      mload\n        /* \"NbaToddlers_flat.sol\":36279:36304  bytes(baseURI).length > 0 */\n      gt\n        /* \"NbaToddlers_flat.sol\":36279:36365  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_148\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_149)\n    tag_148:\n        /* \"NbaToddlers_flat.sol\":36331:36338  baseURI */\n      dup1\n        /* \"NbaToddlers_flat.sol\":36340:36358  tokenId.toString() */\n      tag_150\n        /* \"NbaToddlers_flat.sol\":36340:36347  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":36340:36356  tokenId.toString */\n      tag_151\n        /* \"NbaToddlers_flat.sol\":36340:36358  tokenId.toString() */\n      jump\t// in\n    tag_150:\n        /* \"NbaToddlers_flat.sol\":36314:36359  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"NbaToddlers_flat.sol\":36279:36365  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_149:\n        /* \"NbaToddlers_flat.sol\":36272:36365  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"NbaToddlers_flat.sol\":36096:36372  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":46761:46894  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_90:\n        /* \"NbaToddlers_flat.sol\":40616:40620  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":40225:40232  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":46834:46887  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8075:8077   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":46834:46887  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8057:8078   */\n      mstore\n        /* \"#utility.yul\":8114:8116   */\n      0x18\n        /* \"#utility.yul\":8094:8112   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8087:8117   */\n      mstore\n        /* \"#utility.yul\":8153:8179   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":8133:8151   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8126:8180   */\n      mstore\n        /* \"#utility.yul\":8197:8215   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":46834:46887  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_94\n        /* \"#utility.yul\":7873:8221   */\n      jump\n        /* \"NbaToddlers_flat.sol\":46834:46887  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_159:\n        /* \"NbaToddlers_flat.sol\":46761:46894  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":46063:46234  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_105:\n        /* \"NbaToddlers_flat.sol\":46137:46161  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":46137:46152  _tokenApprovals */\n      0x04\n        /* \"NbaToddlers_flat.sol\":46137:46161  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"NbaToddlers_flat.sol\":46137:46166  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NbaToddlers_flat.sol\":46137:46161  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"NbaToddlers_flat.sol\":46190:46213  ERC721.ownerOf(tokenId) */\n      tag_163\n        /* \"NbaToddlers_flat.sol\":46137:46161  _tokenApprovals[tokenId] */\n      dup3\n        /* \"NbaToddlers_flat.sol\":46190:46204  ERC721.ownerOf */\n      tag_48\n        /* \"NbaToddlers_flat.sol\":46190:46213  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"NbaToddlers_flat.sol\":46181:46227  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NbaToddlers_flat.sol\":46063:46234  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":40835:41096  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_109:\n        /* \"NbaToddlers_flat.sol\":40928:40932  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":40944:40957  address owner */\n      dup1\n        /* \"NbaToddlers_flat.sol\":40960:40983  ERC721.ownerOf(tokenId) */\n      tag_165\n        /* \"NbaToddlers_flat.sol\":40975:40982  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":40960:40974  ERC721.ownerOf */\n      tag_48\n        /* \"NbaToddlers_flat.sol\":40960:40983  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_165:\n        /* \"NbaToddlers_flat.sol\":40944:40983  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":41012:41017  owner */\n      dup1\n        /* \"NbaToddlers_flat.sol\":41001:41017  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":41001:41008  spender */\n      dup5\n        /* \"NbaToddlers_flat.sol\":41001:41017  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":41001:41053  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":37780:37784  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":37803:37821  _operatorApprovals */\n      0x05\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":37803:37838  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"NbaToddlers_flat.sol\":41021:41053  isApprovedForAll(owner, spender) */\n    tag_167:\n        /* \"NbaToddlers_flat.sol\":41001:41088  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_168\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":41081:41088  spender */\n      dup4\n        /* \"NbaToddlers_flat.sol\":41057:41088  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":41057:41077  getApproved(tokenId) */\n      tag_169\n        /* \"NbaToddlers_flat.sol\":41069:41076  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":41057:41068  getApproved */\n      tag_32\n        /* \"NbaToddlers_flat.sol\":41057:41077  getApproved(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"NbaToddlers_flat.sol\":41057:41088  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":41001:41088  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_168:\n        /* \"NbaToddlers_flat.sol\":40993:41089  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"NbaToddlers_flat.sol\":40835:41096  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":44718:45951  function _transfer(... */\n    tag_114:\n        /* \"NbaToddlers_flat.sol\":44872:44876  from */\n      dup3\n        /* \"NbaToddlers_flat.sol\":44845:44876  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":44845:44868  ERC721.ownerOf(tokenId) */\n      tag_171\n        /* \"NbaToddlers_flat.sol\":44860:44867  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":44845:44859  ERC721.ownerOf */\n      tag_48\n        /* \"NbaToddlers_flat.sol\":44845:44868  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_171:\n        /* \"NbaToddlers_flat.sol\":44845:44876  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":44837:44918  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6500:6502   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":44837:44918  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6482:6503   */\n      mstore\n        /* \"#utility.yul\":6539:6541   */\n      0x25\n        /* \"#utility.yul\":6519:6537   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6512:6542   */\n      mstore\n        /* \"#utility.yul\":6578:6612   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":6558:6576   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6551:6613   */\n      mstore\n        /* \"#utility.yul\":6649:6656   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6629:6647   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6622:6657   */\n      mstore\n        /* \"#utility.yul\":6674:6693   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":44837:44918  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_94\n        /* \"#utility.yul\":6298:6699   */\n      jump\n        /* \"NbaToddlers_flat.sol\":44837:44918  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_172:\n        /* \"NbaToddlers_flat.sol\":44936:44952  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":44928:44993  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":44928:44993  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6888:6909   */\n      mstore\n        /* \"#utility.yul\":6945:6947   */\n      0x24\n        /* \"#utility.yul\":6925:6943   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6918:6948   */\n      mstore\n        /* \"#utility.yul\":6984:7018   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":6964:6982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6957:7019   */\n      mstore\n        /* \"#utility.yul\":7055:7061   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7035:7053   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7028:7062   */\n      mstore\n        /* \"#utility.yul\":7079:7098   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":44928:44993  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_94\n        /* \"#utility.yul\":6704:7104   */\n      jump\n        /* \"NbaToddlers_flat.sol\":44928:44993  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_175:\n        /* \"NbaToddlers_flat.sol\":45004:45046  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_178\n        /* \"NbaToddlers_flat.sol\":45025:45029  from */\n      dup4\n        /* \"NbaToddlers_flat.sol\":45031:45033  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":45035:45042  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":45044:45045  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":45004:45024  _beforeTokenTransfer */\n      tag_179\n        /* \"NbaToddlers_flat.sol\":45004:45046  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_178:\n        /* \"NbaToddlers_flat.sol\":45173:45177  from */\n      dup3\n        /* \"NbaToddlers_flat.sol\":45146:45177  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":45146:45169  ERC721.ownerOf(tokenId) */\n      tag_180\n        /* \"NbaToddlers_flat.sol\":45161:45168  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":45146:45160  ERC721.ownerOf */\n      tag_48\n        /* \"NbaToddlers_flat.sol\":45146:45169  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"NbaToddlers_flat.sol\":45146:45177  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":45138:45219  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6500:6502   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":45138:45219  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6482:6503   */\n      mstore\n        /* \"#utility.yul\":6539:6541   */\n      0x25\n        /* \"#utility.yul\":6519:6537   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6512:6542   */\n      mstore\n        /* \"#utility.yul\":6578:6612   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":6558:6576   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6551:6613   */\n      mstore\n        /* \"#utility.yul\":6649:6656   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6629:6647   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6622:6657   */\n      mstore\n        /* \"#utility.yul\":6674:6693   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":45138:45219  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_94\n        /* \"#utility.yul\":6298:6699   */\n      jump\n        /* \"NbaToddlers_flat.sol\":45138:45219  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_181:\n        /* \"NbaToddlers_flat.sol\":45288:45312  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":45288:45303  _tokenApprovals */\n      0x04\n        /* \"NbaToddlers_flat.sol\":45288:45312  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":45281:45312  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"NbaToddlers_flat.sol\":45756:45771  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"NbaToddlers_flat.sol\":45756:45765  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":45756:45771  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"NbaToddlers_flat.sol\":45756:45776  _balances[from] -= 1 */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      sstore\n        /* \"NbaToddlers_flat.sol\":45790:45803  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"NbaToddlers_flat.sol\":45790:45808  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"NbaToddlers_flat.sol\":45281:45312  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"NbaToddlers_flat.sol\":45790:45808  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"NbaToddlers_flat.sol\":45828:45844  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"NbaToddlers_flat.sol\":45828:45835  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":45828:45844  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"NbaToddlers_flat.sol\":45828:45849  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NbaToddlers_flat.sol\":45865:45892  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"NbaToddlers_flat.sol\":45304:45311  tokenId */\n      dup5\n      swap4\n        /* \"NbaToddlers_flat.sol\":45865:45892  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"NbaToddlers_flat.sol\":36833:37169  {... */\n      pop\n        /* \"NbaToddlers_flat.sol\":36763:37169  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":46370:46677  function _setApprovalForAll(... */\n    tag_136:\n        /* \"NbaToddlers_flat.sol\":46520:46528  operator */\n      dup2\n        /* \"NbaToddlers_flat.sol\":46511:46528  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":46511:46516  owner */\n      dup4\n        /* \"NbaToddlers_flat.sol\":46511:46528  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NbaToddlers_flat.sol\":46503:46558  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7311:7313   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":46503:46558  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7293:7314   */\n      mstore\n        /* \"#utility.yul\":7350:7352   */\n      0x19\n        /* \"#utility.yul\":7330:7348   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7323:7353   */\n      mstore\n        /* \"#utility.yul\":7389:7416   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":7369:7387   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7362:7417   */\n      mstore\n        /* \"#utility.yul\":7434:7452   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":46503:46558  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_94\n        /* \"#utility.yul\":7109:7458   */\n      jump\n        /* \"NbaToddlers_flat.sol\":46503:46558  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_187:\n        /* \"NbaToddlers_flat.sol\":46568:46593  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":46568:46586  _operatorApprovals */\n      0x05\n        /* \"NbaToddlers_flat.sol\":46568:46593  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":46568:46603  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"NbaToddlers_flat.sol\":46568:46614  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NbaToddlers_flat.sol\":46629:46670  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":5189:5230   */\n      swap2\n      dup3\n      mstore\n        /* \"NbaToddlers_flat.sol\":46629:46670  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":5162:5180   */\n      add\n        /* \"NbaToddlers_flat.sol\":46629:46670  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NbaToddlers_flat.sol\":46370:46677  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":39719:40024  function _safeTransfer(... */\n    tag_143:\n        /* \"NbaToddlers_flat.sol\":39869:39897  _transfer(from, to, tokenId) */\n      tag_192\n        /* \"NbaToddlers_flat.sol\":39879:39883  from */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39885:39887  to */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39889:39896  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39869:39878  _transfer */\n      tag_114\n        /* \"NbaToddlers_flat.sol\":39869:39897  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_192:\n        /* \"NbaToddlers_flat.sol\":39915:39962  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_193\n        /* \"NbaToddlers_flat.sol\":39938:39942  from */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39944:39946  to */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39948:39955  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39957:39961  data */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39915:39937  _checkOnERC721Received */\n      tag_194\n        /* \"NbaToddlers_flat.sol\":39915:39962  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_193:\n        /* \"NbaToddlers_flat.sol\":39907:40017  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6081:6083   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":39907:40017  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6063:6084   */\n      mstore\n        /* \"#utility.yul\":6120:6122   */\n      0x32\n        /* \"#utility.yul\":6100:6118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6093:6123   */\n      mstore\n        /* \"#utility.yul\":6159:6193   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":6139:6157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6132:6194   */\n      mstore\n        /* \"#utility.yul\":6230:6250   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":6210:6228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6203:6251   */\n      mstore\n        /* \"#utility.yul\":6268:6287   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":39907:40017  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_94\n        /* \"#utility.yul\":5879:6293   */\n      jump\n        /* \"NbaToddlers_flat.sol\":31670:32366  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_151:\n        /* \"NbaToddlers_flat.sol\":31726:31739  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":31775:31789  uint256 length */\n      0x00\n        /* \"NbaToddlers_flat.sol\":31792:31809  Math.log10(value) */\n      tag_200\n        /* \"NbaToddlers_flat.sol\":31803:31808  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":31792:31802  Math.log10 */\n      tag_201\n        /* \"NbaToddlers_flat.sol\":31792:31809  Math.log10(value) */\n      jump\t// in\n    tag_200:\n        /* \"NbaToddlers_flat.sol\":31812:31813  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":31792:31813  Math.log10(value) + 1 */\n      add\n        /* \"NbaToddlers_flat.sol\":31775:31813  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":31827:31847  string memory buffer */\n      0x00\n        /* \"NbaToddlers_flat.sol\":31861:31867  length */\n      dup2\n        /* \"NbaToddlers_flat.sol\":31850:31868  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_203\n      jumpi\n      tag_203\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_205:\n      pop\n        /* \"NbaToddlers_flat.sol\":31827:31868  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":31988:32016  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"NbaToddlers_flat.sol\":32004:32006  32 */\n      0x20\n        /* \"NbaToddlers_flat.sol\":31988:32016  add(buffer, add(32, length)) */\n      add\n        /* \"NbaToddlers_flat.sol\":32043:32323  while (true) {... */\n    tag_206:\n        /* \"NbaToddlers_flat.sol\":32074:32079  ptr-- */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n        /* \"NbaToddlers_flat.sol\":32213:32221  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":32208:32210  10 */\n      0x0a\n        /* \"NbaToddlers_flat.sol\":32197:32211  mod(value, 10) */\n      dup7\n      mod\n        /* \"NbaToddlers_flat.sol\":32192:32222  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"NbaToddlers_flat.sol\":32074:32079  ptr-- */\n      dup2\n        /* \"NbaToddlers_flat.sol\":32179:32223  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"NbaToddlers_flat.sol\":32267:32269  10 */\n      0x0a\n        /* \"NbaToddlers_flat.sol\":32258:32269  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"NbaToddlers_flat.sol\":32291:32301  value == 0 */\n      dup5\n        /* \"NbaToddlers_flat.sol\":32287:32308  if (value == 0) break */\n      tag_211\n      jumpi\n        /* \"NbaToddlers_flat.sol\":32303:32308  break */\n      jump(tag_207)\n        /* \"NbaToddlers_flat.sol\":32287:32308  if (value == 0) break */\n    tag_211:\n        /* \"NbaToddlers_flat.sol\":32043:32323  while (true) {... */\n      jump(tag_206)\n    tag_207:\n      pop\n        /* \"NbaToddlers_flat.sol\":32343:32349  buffer */\n      swap4\n        /* \"NbaToddlers_flat.sol\":31670:32366  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":48993:49389  function _beforeTokenTransfer(... */\n    tag_179:\n        /* \"NbaToddlers_flat.sol\":49177:49178  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":49165:49174  batchSize */\n      dup2\n        /* \"NbaToddlers_flat.sol\":49165:49178  batchSize > 1 */\n      gt\n        /* \"NbaToddlers_flat.sol\":49161:49383  if (batchSize > 1) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"NbaToddlers_flat.sol\":49198:49216  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      iszero\n        /* \"NbaToddlers_flat.sol\":49194:49279  if (from != address(0)) {... */\n      tag_216\n      jumpi\n        /* \"NbaToddlers_flat.sol\":49236:49251  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":49236:49245  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":49236:49251  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NbaToddlers_flat.sol\":49236:49264  _balances[from] -= batchSize */\n      dup1\n      sload\n        /* \"NbaToddlers_flat.sol\":49255:49264  batchSize */\n      dup4\n      swap3\n        /* \"NbaToddlers_flat.sol\":49236:49251  _balances[from] */\n      swap1\n        /* \"NbaToddlers_flat.sol\":49236:49264  _balances[from] -= batchSize */\n      tag_217\n      swap1\n        /* \"NbaToddlers_flat.sol\":49255:49264  batchSize */\n      dup5\n      swap1\n        /* \"NbaToddlers_flat.sol\":49236:49264  _balances[from] -= batchSize */\n      tag_218\n      jump\t// in\n    tag_217:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"NbaToddlers_flat.sol\":49194:49279  if (from != address(0)) {... */\n    tag_216:\n        /* \"NbaToddlers_flat.sol\":49296:49312  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      iszero\n        /* \"NbaToddlers_flat.sol\":49292:49373  if (to != address(0)) {... */\n      tag_142\n      jumpi\n        /* \"NbaToddlers_flat.sol\":49332:49345  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":49332:49341  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":49332:49345  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NbaToddlers_flat.sol\":49332:49358  _balances[to] += batchSize */\n      dup1\n      sload\n        /* \"NbaToddlers_flat.sol\":49349:49358  batchSize */\n      dup4\n      swap3\n        /* \"NbaToddlers_flat.sol\":49332:49345  _balances[to] */\n      swap1\n        /* \"NbaToddlers_flat.sol\":49332:49358  _balances[to] += batchSize */\n      tag_220\n      swap1\n        /* \"NbaToddlers_flat.sol\":49349:49358  batchSize */\n      dup5\n      swap1\n        /* \"NbaToddlers_flat.sol\":49332:49358  _balances[to] += batchSize */\n      tag_221\n      jump\t// in\n    tag_220:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"NbaToddlers_flat.sol\":48993:49389  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":47446:48277  function _checkOnERC721Received(... */\n    tag_194:\n        /* \"NbaToddlers_flat.sol\":47595:47599  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":47615:47628  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"NbaToddlers_flat.sol\":2384:2403  account.code.length */\n      extcodesize\n        /* \"NbaToddlers_flat.sol\":2384:2407  account.code.length > 0 */\n      iszero\n        /* \"NbaToddlers_flat.sol\":47611:48271  if (to.isContract()) {... */\n      tag_226\n      jumpi\n        /* \"NbaToddlers_flat.sol\":47650:47721  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":47650:47686  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"NbaToddlers_flat.sol\":47650:47721  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_228\n      swap1\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n      swap1\n        /* \"NbaToddlers_flat.sol\":47701:47705  from */\n      dup10\n      swap1\n        /* \"NbaToddlers_flat.sol\":47707:47714  tokenId */\n      dup9\n      swap1\n        /* \"NbaToddlers_flat.sol\":47716:47720  data */\n      dup9\n      swap1\n        /* \"NbaToddlers_flat.sol\":47650:47721  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_229\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_232\n      swap2\n      dup2\n      add\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      0x01\n    tag_231:\n        /* \"NbaToddlers_flat.sol\":47646:48219  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_234\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_239\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_238)\n    tag_239:\n      0x60\n      swap2\n      pop\n    tag_238:\n      pop\n        /* \"NbaToddlers_flat.sol\":47888:47901  reason.length */\n      dup1\n      mload\n        /* \"NbaToddlers_flat.sol\":47884:48205  if (reason.length == 0) {... */\n      tag_240\n      jumpi\n        /* \"NbaToddlers_flat.sol\":47930:47990  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6081:6083   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":47930:47990  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6063:6084   */\n      mstore\n        /* \"#utility.yul\":6120:6122   */\n      0x32\n        /* \"#utility.yul\":6100:6118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6093:6123   */\n      mstore\n        /* \"#utility.yul\":6159:6193   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":6139:6157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6132:6194   */\n      mstore\n        /* \"#utility.yul\":6230:6250   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":6210:6228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6203:6251   */\n      mstore\n        /* \"#utility.yul\":6268:6287   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":47930:47990  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_94\n        /* \"#utility.yul\":5879:6293   */\n      jump\n        /* \"NbaToddlers_flat.sol\":47884:48205  if (reason.length == 0) {... */\n    tag_240:\n        /* \"NbaToddlers_flat.sol\":48157:48163  reason */\n      dup1\n        /* \"NbaToddlers_flat.sol\":48151:48164  mload(reason) */\n      mload\n        /* \"NbaToddlers_flat.sol\":48142:48148  reason */\n      dup2\n        /* \"NbaToddlers_flat.sol\":48138:48140  32 */\n      0x20\n        /* \"NbaToddlers_flat.sol\":48134:48149  add(32, reason) */\n      add\n        /* \"NbaToddlers_flat.sol\":48127:48165  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"NbaToddlers_flat.sol\":47646:48219  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_234:\n        /* \"NbaToddlers_flat.sol\":47771:47822  retval == IERC721Receiver.onERC721Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"NbaToddlers_flat.sol\":47781:47822  IERC721Receiver.onERC721Received.selector */\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":47771:47822  retval == IERC721Receiver.onERC721Received.selector */\n      eq\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":47764:47822  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_168)\n        /* \"NbaToddlers_flat.sol\":47611:48271  if (to.isContract()) {... */\n    tag_226:\n      pop\n        /* \"NbaToddlers_flat.sol\":48256:48260  true */\n      0x01\n        /* \"NbaToddlers_flat.sol\":47446:48277  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":28643:29533  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_201:\n        /* \"NbaToddlers_flat.sol\":28696:28703  uint256 */\n      0x00\n      dup1\n        /* \"NbaToddlers_flat.sol\":28780:28786  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"NbaToddlers_flat.sol\":28771:28786  value >= 10**64 */\n      dup4\n      lt\n        /* \"NbaToddlers_flat.sol\":28767:28866  if (value >= 10**64) {... */\n      tag_246\n      jumpi\n        /* \"NbaToddlers_flat.sol\":28815:28821  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"NbaToddlers_flat.sol\":28806:28821  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":28849:28851  64 */\n      0x40\n        /* \"NbaToddlers_flat.sol\":28839:28851  result += 64 */\n      add\n        /* \"NbaToddlers_flat.sol\":28767:28866  if (value >= 10**64) {... */\n    tag_246:\n        /* \"NbaToddlers_flat.sol\":28892:28898  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"NbaToddlers_flat.sol\":28883:28888  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":28883:28898  value >= 10**32 */\n      lt\n        /* \"NbaToddlers_flat.sol\":28879:28978  if (value >= 10**32) {... */\n      tag_249\n      jumpi\n        /* \"NbaToddlers_flat.sol\":28927:28933  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"NbaToddlers_flat.sol\":28918:28933  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":28961:28963  32 */\n      0x20\n        /* \"NbaToddlers_flat.sol\":28951:28963  result += 32 */\n      add\n        /* \"NbaToddlers_flat.sol\":28879:28978  if (value >= 10**32) {... */\n    tag_249:\n        /* \"NbaToddlers_flat.sol\":29004:29010  10**16 */\n      0x2386f26fc10000\n        /* \"NbaToddlers_flat.sol\":28995:29000  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":28995:29010  value >= 10**16 */\n      lt\n        /* \"NbaToddlers_flat.sol\":28991:29090  if (value >= 10**16) {... */\n      tag_252\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29039:29045  10**16 */\n      0x2386f26fc10000\n        /* \"NbaToddlers_flat.sol\":29030:29045  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":29073:29075  16 */\n      0x10\n        /* \"NbaToddlers_flat.sol\":29063:29075  result += 16 */\n      add\n        /* \"NbaToddlers_flat.sol\":28991:29090  if (value >= 10**16) {... */\n    tag_252:\n        /* \"NbaToddlers_flat.sol\":29116:29121  10**8 */\n      0x05f5e100\n        /* \"NbaToddlers_flat.sol\":29107:29112  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":29107:29121  value >= 10**8 */\n      lt\n        /* \"NbaToddlers_flat.sol\":29103:29199  if (value >= 10**8) {... */\n      tag_255\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29150:29155  10**8 */\n      0x05f5e100\n        /* \"NbaToddlers_flat.sol\":29141:29155  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":29183:29184  8 */\n      0x08\n        /* \"NbaToddlers_flat.sol\":29173:29184  result += 8 */\n      add\n        /* \"NbaToddlers_flat.sol\":29103:29199  if (value >= 10**8) {... */\n    tag_255:\n        /* \"NbaToddlers_flat.sol\":29225:29230  10**4 */\n      0x2710\n        /* \"NbaToddlers_flat.sol\":29216:29221  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":29216:29230  value >= 10**4 */\n      lt\n        /* \"NbaToddlers_flat.sol\":29212:29308  if (value >= 10**4) {... */\n      tag_258\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29259:29264  10**4 */\n      0x2710\n        /* \"NbaToddlers_flat.sol\":29250:29264  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":29292:29293  4 */\n      0x04\n        /* \"NbaToddlers_flat.sol\":29282:29293  result += 4 */\n      add\n        /* \"NbaToddlers_flat.sol\":29212:29308  if (value >= 10**4) {... */\n    tag_258:\n        /* \"NbaToddlers_flat.sol\":29334:29339  10**2 */\n      0x64\n        /* \"NbaToddlers_flat.sol\":29325:29330  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":29325:29339  value >= 10**2 */\n      lt\n        /* \"NbaToddlers_flat.sol\":29321:29417  if (value >= 10**2) {... */\n      tag_261\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29368:29373  10**2 */\n      0x64\n        /* \"NbaToddlers_flat.sol\":29359:29373  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":29401:29402  2 */\n      0x02\n        /* \"NbaToddlers_flat.sol\":29391:29402  result += 2 */\n      add\n        /* \"NbaToddlers_flat.sol\":29321:29417  if (value >= 10**2) {... */\n    tag_261:\n        /* \"NbaToddlers_flat.sol\":29443:29448  10**1 */\n      0x0a\n        /* \"NbaToddlers_flat.sol\":29434:29439  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":29434:29448  value >= 10**1 */\n      lt\n        /* \"NbaToddlers_flat.sol\":29430:29494  if (value >= 10**1) {... */\n      tag_79\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29478:29479  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":29468:29479  result += 1 */\n      add\n        /* \"NbaToddlers_flat.sol\":29520:29526  result */\n      swap3\n        /* \"NbaToddlers_flat.sol\":28643:29533  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_267:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_269:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_52:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_271:\n        /* \"#utility.yul\":366:395   */\n      tag_149\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_267\n      jump\t// in\n        /* \"#utility.yul\":406:666   */\n    tag_73:\n        /* \"#utility.yul\":474:480   */\n      0x00\n        /* \"#utility.yul\":482:488   */\n      dup1\n        /* \"#utility.yul\":535:537   */\n      0x40\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":514:521   */\n      dup6\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:555   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":503:555   */\n    tag_274:\n        /* \"#utility.yul\":574:603   */\n      tag_275\n        /* \"#utility.yul\":593:602   */\n      dup4\n        /* \"#utility.yul\":574:603   */\n      tag_267\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":564:603   */\n      swap2\n      pop\n        /* \"#utility.yul\":622:660   */\n      tag_276\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":645:654   */\n      dup5\n        /* \"#utility.yul\":641:659   */\n      add\n        /* \"#utility.yul\":622:660   */\n      tag_267\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":612:660   */\n      swap1\n      pop\n        /* \"#utility.yul\":406:666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":671:999   */\n    tag_41:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x60\n        /* \"#utility.yul\":805:814   */\n      dup5\n        /* \"#utility.yul\":796:803   */\n      dup7\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:837   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":785:837   */\n    tag_278:\n        /* \"#utility.yul\":856:885   */\n      tag_279\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":856:885   */\n      tag_267\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":846:885   */\n      swap3\n      pop\n        /* \"#utility.yul\":904:942   */\n      tag_280\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup6\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":904:942   */\n      tag_267\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":894:942   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:991   */\n      0x40\n        /* \"#utility.yul\":978:987   */\n      dup5\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n        /* \"#utility.yul\":951:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":671:999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1004:2201   */\n    tag_65:\n        /* \"#utility.yul\":1099:1105   */\n      0x00\n        /* \"#utility.yul\":1107:1113   */\n      dup1\n        /* \"#utility.yul\":1115:1121   */\n      0x00\n        /* \"#utility.yul\":1123:1129   */\n      dup1\n        /* \"#utility.yul\":1176:1179   */\n      0x80\n        /* \"#utility.yul\":1164:1173   */\n      dup6\n        /* \"#utility.yul\":1155:1162   */\n      dup8\n        /* \"#utility.yul\":1151:1174   */\n      sub\n        /* \"#utility.yul\":1147:1180   */\n      slt\n        /* \"#utility.yul\":1144:1197   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":1193:1194   */\n      0x00\n        /* \"#utility.yul\":1190:1191   */\n      dup1\n        /* \"#utility.yul\":1183:1195   */\n      revert\n        /* \"#utility.yul\":1144:1197   */\n    tag_282:\n        /* \"#utility.yul\":1216:1245   */\n      tag_283\n        /* \"#utility.yul\":1235:1244   */\n      dup6\n        /* \"#utility.yul\":1216:1245   */\n      tag_267\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1206:1245   */\n      swap4\n      pop\n        /* \"#utility.yul\":1264:1302   */\n      tag_284\n        /* \"#utility.yul\":1298:1300   */\n      0x20\n        /* \"#utility.yul\":1287:1296   */\n      dup7\n        /* \"#utility.yul\":1283:1301   */\n      add\n        /* \"#utility.yul\":1264:1302   */\n      tag_267\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1254:1302   */\n      swap3\n      pop\n        /* \"#utility.yul\":1349:1351   */\n      0x40\n        /* \"#utility.yul\":1338:1347   */\n      dup6\n        /* \"#utility.yul\":1334:1352   */\n      add\n        /* \"#utility.yul\":1321:1353   */\n      calldataload\n        /* \"#utility.yul\":1311:1353   */\n      swap2\n      pop\n        /* \"#utility.yul\":1404:1406   */\n      0x60\n        /* \"#utility.yul\":1393:1402   */\n      dup6\n        /* \"#utility.yul\":1389:1407   */\n      add\n        /* \"#utility.yul\":1376:1408   */\n      calldataload\n        /* \"#utility.yul\":1427:1445   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1468:1470   */\n      dup1\n        /* \"#utility.yul\":1460:1466   */\n      dup3\n        /* \"#utility.yul\":1457:1471   */\n      gt\n        /* \"#utility.yul\":1454:1488   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1484:1485   */\n      0x00\n        /* \"#utility.yul\":1481:1482   */\n      dup1\n        /* \"#utility.yul\":1474:1486   */\n      revert\n        /* \"#utility.yul\":1454:1488   */\n    tag_285:\n        /* \"#utility.yul\":1522:1528   */\n      dup2\n        /* \"#utility.yul\":1511:1520   */\n      dup8\n        /* \"#utility.yul\":1507:1529   */\n      add\n        /* \"#utility.yul\":1497:1529   */\n      swap2\n      pop\n        /* \"#utility.yul\":1567:1574   */\n      dup8\n        /* \"#utility.yul\":1560:1564   */\n      0x1f\n        /* \"#utility.yul\":1556:1558   */\n      dup4\n        /* \"#utility.yul\":1552:1565   */\n      add\n        /* \"#utility.yul\":1548:1575   */\n      slt\n        /* \"#utility.yul\":1538:1593   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1538:1593   */\n    tag_286:\n        /* \"#utility.yul\":1625:1627   */\n      dup2\n        /* \"#utility.yul\":1612:1628   */\n      calldataload\n        /* \"#utility.yul\":1647:1649   */\n      dup2\n        /* \"#utility.yul\":1643:1645   */\n      dup2\n        /* \"#utility.yul\":1640:1650   */\n      gt\n        /* \"#utility.yul\":1637:1673   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1653:1671   */\n      tag_288\n      tag_204\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1787:1789   */\n      0x40\n        /* \"#utility.yul\":1781:1790   */\n      mload\n        /* \"#utility.yul\":1849:1853   */\n      0x1f\n        /* \"#utility.yul\":1841:1854   */\n      dup3\n      add\n        /* \"#utility.yul\":1692:1758   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1837:1859   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1861:1863   */\n      0x3f\n        /* \"#utility.yul\":1833:1864   */\n      add\n        /* \"#utility.yul\":1829:1869   */\n      and\n        /* \"#utility.yul\":1817:1870   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1885:1903   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1905:1927   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1882:1928   */\n      or\n        /* \"#utility.yul\":1879:1951   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":1931:1949   */\n      tag_290\n      tag_204\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1971:1981   */\n      dup2\n        /* \"#utility.yul\":1967:1969   */\n      0x40\n        /* \"#utility.yul\":1960:1982   */\n      mstore\n        /* \"#utility.yul\":2006:2008   */\n      dup3\n        /* \"#utility.yul\":1998:2004   */\n      dup2\n        /* \"#utility.yul\":1991:2009   */\n      mstore\n        /* \"#utility.yul\":2046:2053   */\n      dup11\n        /* \"#utility.yul\":2041:2043   */\n      0x20\n        /* \"#utility.yul\":2036:2038   */\n      dup5\n        /* \"#utility.yul\":2032:2034   */\n      dup8\n        /* \"#utility.yul\":2028:2039   */\n      add\n        /* \"#utility.yul\":2024:2044   */\n      add\n        /* \"#utility.yul\":2021:2054   */\n      gt\n        /* \"#utility.yul\":2018:2071   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":2067:2068   */\n      0x00\n        /* \"#utility.yul\":2064:2065   */\n      dup1\n        /* \"#utility.yul\":2057:2069   */\n      revert\n        /* \"#utility.yul\":2018:2071   */\n    tag_291:\n        /* \"#utility.yul\":2123:2125   */\n      dup3\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2114:2116   */\n      dup7\n        /* \"#utility.yul\":2110:2121   */\n      add\n        /* \"#utility.yul\":2105:2107   */\n      0x20\n        /* \"#utility.yul\":2097:2103   */\n      dup4\n        /* \"#utility.yul\":2093:2108   */\n      add\n        /* \"#utility.yul\":2080:2126   */\n      calldatacopy\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2158:2160   */\n      dup5\n        /* \"#utility.yul\":2150:2156   */\n      dup4\n        /* \"#utility.yul\":2146:2161   */\n      add\n        /* \"#utility.yul\":2142:2166   */\n      add\n        /* \"#utility.yul\":2135:2170   */\n      mstore\n        /* \"#utility.yul\":2189:2195   */\n      dup1\n        /* \"#utility.yul\":2179:2195   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1004:2201   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2553   */\n    tag_61:\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2279:2285   */\n      dup1\n        /* \"#utility.yul\":2332:2334   */\n      0x40\n        /* \"#utility.yul\":2320:2329   */\n      dup4\n        /* \"#utility.yul\":2311:2318   */\n      dup6\n        /* \"#utility.yul\":2307:2330   */\n      sub\n        /* \"#utility.yul\":2303:2335   */\n      slt\n        /* \"#utility.yul\":2300:2352   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2345:2346   */\n      dup1\n        /* \"#utility.yul\":2338:2350   */\n      revert\n        /* \"#utility.yul\":2300:2352   */\n    tag_293:\n        /* \"#utility.yul\":2371:2400   */\n      tag_294\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2371:2400   */\n      tag_267\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2361:2400   */\n      swap2\n      pop\n        /* \"#utility.yul\":2450:2452   */\n      0x20\n        /* \"#utility.yul\":2439:2448   */\n      dup4\n        /* \"#utility.yul\":2435:2453   */\n      add\n        /* \"#utility.yul\":2422:2454   */\n      calldataload\n        /* \"#utility.yul\":2497:2502   */\n      dup1\n        /* \"#utility.yul\":2490:2503   */\n      iszero\n        /* \"#utility.yul\":2483:2504   */\n      iszero\n        /* \"#utility.yul\":2476:2481   */\n      dup2\n        /* \"#utility.yul\":2473:2505   */\n      eq\n        /* \"#utility.yul\":2463:2523   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2519:2520   */\n      0x00\n        /* \"#utility.yul\":2516:2517   */\n      dup1\n        /* \"#utility.yul\":2509:2521   */\n      revert\n        /* \"#utility.yul\":2463:2523   */\n    tag_295:\n        /* \"#utility.yul\":2542:2547   */\n      dup1\n        /* \"#utility.yul\":2532:2547   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2206:2553   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2558:2812   */\n    tag_37:\n        /* \"#utility.yul\":2626:2632   */\n      0x00\n        /* \"#utility.yul\":2634:2640   */\n      dup1\n        /* \"#utility.yul\":2687:2689   */\n      0x40\n        /* \"#utility.yul\":2675:2684   */\n      dup4\n        /* \"#utility.yul\":2666:2673   */\n      dup6\n        /* \"#utility.yul\":2662:2685   */\n      sub\n        /* \"#utility.yul\":2658:2690   */\n      slt\n        /* \"#utility.yul\":2655:2707   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2703:2704   */\n      0x00\n        /* \"#utility.yul\":2700:2701   */\n      dup1\n        /* \"#utility.yul\":2693:2705   */\n      revert\n        /* \"#utility.yul\":2655:2707   */\n    tag_297:\n        /* \"#utility.yul\":2726:2755   */\n      tag_298\n        /* \"#utility.yul\":2745:2754   */\n      dup4\n        /* \"#utility.yul\":2726:2755   */\n      tag_267\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2716:2755   */\n      swap5\n        /* \"#utility.yul\":2802:2804   */\n      0x20\n        /* \"#utility.yul\":2787:2805   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2774:2806   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2558:2812   */\n      jump\t// out\n        /* \"#utility.yul\":2817:3062   */\n    tag_21:\n        /* \"#utility.yul\":2875:2881   */\n      0x00\n        /* \"#utility.yul\":2928:2930   */\n      0x20\n        /* \"#utility.yul\":2916:2925   */\n      dup3\n        /* \"#utility.yul\":2907:2914   */\n      dup5\n        /* \"#utility.yul\":2903:2926   */\n      sub\n        /* \"#utility.yul\":2899:2931   */\n      slt\n        /* \"#utility.yul\":2896:2948   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2944:2945   */\n      0x00\n        /* \"#utility.yul\":2941:2942   */\n      dup1\n        /* \"#utility.yul\":2934:2946   */\n      revert\n        /* \"#utility.yul\":2896:2948   */\n    tag_300:\n        /* \"#utility.yul\":2983:2992   */\n      dup2\n        /* \"#utility.yul\":2970:2993   */\n      calldataload\n        /* \"#utility.yul\":3002:3032   */\n      tag_149\n        /* \"#utility.yul\":3026:3031   */\n      dup2\n        /* \"#utility.yul\":3002:3032   */\n      tag_302\n      jump\t// in\n        /* \"#utility.yul\":3067:3316   */\n    tag_233:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3189:3191   */\n      0x20\n        /* \"#utility.yul\":3177:3186   */\n      dup3\n        /* \"#utility.yul\":3168:3175   */\n      dup5\n        /* \"#utility.yul\":3164:3187   */\n      sub\n        /* \"#utility.yul\":3160:3192   */\n      slt\n        /* \"#utility.yul\":3157:3209   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":3205:3206   */\n      0x00\n        /* \"#utility.yul\":3202:3203   */\n      dup1\n        /* \"#utility.yul\":3195:3207   */\n      revert\n        /* \"#utility.yul\":3157:3209   */\n    tag_304:\n        /* \"#utility.yul\":3237:3246   */\n      dup2\n        /* \"#utility.yul\":3231:3247   */\n      mload\n        /* \"#utility.yul\":3256:3286   */\n      tag_149\n        /* \"#utility.yul\":3280:3285   */\n      dup2\n        /* \"#utility.yul\":3256:3286   */\n      tag_302\n      jump\t// in\n        /* \"#utility.yul\":3321:3501   */\n    tag_31:\n        /* \"#utility.yul\":3380:3386   */\n      0x00\n        /* \"#utility.yul\":3433:3435   */\n      0x20\n        /* \"#utility.yul\":3421:3430   */\n      dup3\n        /* \"#utility.yul\":3412:3419   */\n      dup5\n        /* \"#utility.yul\":3408:3431   */\n      sub\n        /* \"#utility.yul\":3404:3436   */\n      slt\n        /* \"#utility.yul\":3401:3453   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3449:3450   */\n      0x00\n        /* \"#utility.yul\":3446:3447   */\n      dup1\n        /* \"#utility.yul\":3439:3451   */\n      revert\n        /* \"#utility.yul\":3401:3453   */\n    tag_307:\n      pop\n        /* \"#utility.yul\":3472:3495   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3321:3501   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3506:3822   */\n    tag_308:\n        /* \"#utility.yul\":3547:3550   */\n      0x00\n        /* \"#utility.yul\":3585:3590   */\n      dup2\n        /* \"#utility.yul\":3579:3591   */\n      mload\n        /* \"#utility.yul\":3612:3618   */\n      dup1\n        /* \"#utility.yul\":3607:3610   */\n      dup5\n        /* \"#utility.yul\":3600:3619   */\n      mstore\n        /* \"#utility.yul\":3628:3691   */\n      tag_310\n        /* \"#utility.yul\":3684:3690   */\n      dup2\n        /* \"#utility.yul\":3677:3681   */\n      0x20\n        /* \"#utility.yul\":3672:3675   */\n      dup7\n        /* \"#utility.yul\":3668:3682   */\n      add\n        /* \"#utility.yul\":3661:3665   */\n      0x20\n        /* \"#utility.yul\":3654:3659   */\n      dup7\n        /* \"#utility.yul\":3650:3666   */\n      add\n        /* \"#utility.yul\":3628:3691   */\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3736:3738   */\n      0x1f\n        /* \"#utility.yul\":3724:3739   */\n      add\n        /* \"#utility.yul\":3741:3807   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":3720:3808   */\n      and\n        /* \"#utility.yul\":3711:3809   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3707:3816   */\n      add\n      swap3\n        /* \"#utility.yul\":3506:3822   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3827:4297   */\n    tag_153:\n        /* \"#utility.yul\":4006:4009   */\n      0x00\n        /* \"#utility.yul\":4044:4050   */\n      dup4\n        /* \"#utility.yul\":4038:4051   */\n      mload\n        /* \"#utility.yul\":4060:4113   */\n      tag_313\n        /* \"#utility.yul\":4106:4112   */\n      dup2\n        /* \"#utility.yul\":4101:4104   */\n      dup5\n        /* \"#utility.yul\":4094:4098   */\n      0x20\n        /* \"#utility.yul\":4086:4092   */\n      dup9\n        /* \"#utility.yul\":4082:4099   */\n      add\n        /* \"#utility.yul\":4060:4113   */\n      tag_311\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4176:4189   */\n      dup4\n      mload\n        /* \"#utility.yul\":4135:4151   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4198:4255   */\n      tag_314\n        /* \"#utility.yul\":4176:4189   */\n      dup2\n        /* \"#utility.yul\":4135:4151   */\n      dup4\n        /* \"#utility.yul\":4232:4236   */\n      0x20\n        /* \"#utility.yul\":4220:4237   */\n      dup9\n      add\n        /* \"#utility.yul\":4198:4255   */\n      tag_311\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4271:4291   */\n      add\n      swap5\n        /* \"#utility.yul\":3827:4297   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4533:5044   */\n    tag_229:\n        /* \"#utility.yul\":4727:4731   */\n      0x00\n        /* \"#utility.yul\":4756:4798   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4837:4839   */\n      dup1\n        /* \"#utility.yul\":4829:4835   */\n      dup8\n        /* \"#utility.yul\":4825:4840   */\n      and\n        /* \"#utility.yul\":4814:4823   */\n      dup4\n        /* \"#utility.yul\":4807:4841   */\n      mstore\n        /* \"#utility.yul\":4889:4891   */\n      dup1\n        /* \"#utility.yul\":4881:4887   */\n      dup7\n        /* \"#utility.yul\":4877:4892   */\n      and\n        /* \"#utility.yul\":4872:4874   */\n      0x20\n        /* \"#utility.yul\":4861:4870   */\n      dup5\n        /* \"#utility.yul\":4857:4875   */\n      add\n        /* \"#utility.yul\":4850:4893   */\n      mstore\n      pop\n        /* \"#utility.yul\":4929:4935   */\n      dup4\n        /* \"#utility.yul\":4924:4926   */\n      0x40\n        /* \"#utility.yul\":4913:4922   */\n      dup4\n        /* \"#utility.yul\":4909:4927   */\n      add\n        /* \"#utility.yul\":4902:4936   */\n      mstore\n        /* \"#utility.yul\":4972:4975   */\n      0x80\n        /* \"#utility.yul\":4967:4969   */\n      0x60\n        /* \"#utility.yul\":4956:4965   */\n      dup4\n        /* \"#utility.yul\":4952:4970   */\n      add\n        /* \"#utility.yul\":4945:4976   */\n      mstore\n        /* \"#utility.yul\":4993:5038   */\n      tag_317\n        /* \"#utility.yul\":5033:5036   */\n      0x80\n        /* \"#utility.yul\":5022:5031   */\n      dup4\n        /* \"#utility.yul\":5018:5037   */\n      add\n        /* \"#utility.yul\":5010:5016   */\n      dup5\n        /* \"#utility.yul\":4993:5038   */\n      tag_308\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4985:5038   */\n      swap7\n        /* \"#utility.yul\":4533:5044   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5241:5460   */\n    tag_28:\n        /* \"#utility.yul\":5390:5392   */\n      0x20\n        /* \"#utility.yul\":5379:5388   */\n      dup2\n        /* \"#utility.yul\":5372:5393   */\n      mstore\n        /* \"#utility.yul\":5353:5357   */\n      0x00\n        /* \"#utility.yul\":5410:5454   */\n      tag_149\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup4\n        /* \"#utility.yul\":5435:5453   */\n      add\n        /* \"#utility.yul\":5427:5433   */\n      dup5\n        /* \"#utility.yul\":5410:5454   */\n      tag_308\n      jump\t// in\n        /* \"#utility.yul\":9240:9368   */\n    tag_221:\n        /* \"#utility.yul\":9280:9283   */\n      0x00\n        /* \"#utility.yul\":9311:9312   */\n      dup3\n        /* \"#utility.yul\":9307:9313   */\n      not\n        /* \"#utility.yul\":9304:9305   */\n      dup3\n        /* \"#utility.yul\":9301:9314   */\n      gt\n        /* \"#utility.yul\":9298:9337   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9317:9335   */\n      tag_333\n      tag_334\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":9353:9362   */\n      add\n      swap1\n        /* \"#utility.yul\":9240:9368   */\n      jump\t// out\n        /* \"#utility.yul\":9373:9498   */\n    tag_218:\n        /* \"#utility.yul\":9413:9417   */\n      0x00\n        /* \"#utility.yul\":9441:9442   */\n      dup3\n        /* \"#utility.yul\":9438:9439   */\n      dup3\n        /* \"#utility.yul\":9435:9443   */\n      lt\n        /* \"#utility.yul\":9432:9466   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":9446:9464   */\n      tag_337\n      tag_334\n      jump\t// in\n    tag_337:\n      pop\n        /* \"#utility.yul\":9483:9492   */\n      sub\n      swap1\n        /* \"#utility.yul\":9373:9498   */\n      jump\t// out\n        /* \"#utility.yul\":9503:9761   */\n    tag_311:\n        /* \"#utility.yul\":9575:9576   */\n      0x00\n        /* \"#utility.yul\":9585:9698   */\n    tag_339:\n        /* \"#utility.yul\":9599:9605   */\n      dup4\n        /* \"#utility.yul\":9596:9597   */\n      dup2\n        /* \"#utility.yul\":9593:9606   */\n      lt\n        /* \"#utility.yul\":9585:9698   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":9675:9686   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9669:9687   */\n      mload\n        /* \"#utility.yul\":9656:9667   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9649:9688   */\n      mstore\n        /* \"#utility.yul\":9621:9623   */\n      0x20\n        /* \"#utility.yul\":9614:9624   */\n      add\n        /* \"#utility.yul\":9585:9698   */\n      jump(tag_339)\n    tag_341:\n        /* \"#utility.yul\":9716:9722   */\n      dup4\n        /* \"#utility.yul\":9713:9714   */\n      dup2\n        /* \"#utility.yul\":9710:9723   */\n      gt\n        /* \"#utility.yul\":9707:9755   */\n      iszero\n      tag_142\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":9751:9752   */\n      0x00\n        /* \"#utility.yul\":9733:9749   */\n      swap2\n      add\n        /* \"#utility.yul\":9726:9753   */\n      mstore\n        /* \"#utility.yul\":9503:9761   */\n      jump\t// out\n        /* \"#utility.yul\":9766:10203   */\n    tag_83:\n        /* \"#utility.yul\":9845:9846   */\n      0x01\n        /* \"#utility.yul\":9841:9853   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9888:9900   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9909:9970   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":9963:9967   */\n      0x7f\n        /* \"#utility.yul\":9955:9961   */\n      dup3\n        /* \"#utility.yul\":9951:9968   */\n      and\n        /* \"#utility.yul\":9941:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9909:9970   */\n    tag_344:\n        /* \"#utility.yul\":10016:10018   */\n      0x20\n        /* \"#utility.yul\":10008:10014   */\n      dup3\n        /* \"#utility.yul\":10005:10019   */\n      lt\n        /* \"#utility.yul\":9985:10003   */\n      dup2\n        /* \"#utility.yul\":9982:10020   */\n      eq\n        /* \"#utility.yul\":9979:10197   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":10053:10130   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10050:10051   */\n      0x00\n        /* \"#utility.yul\":10043:10131   */\n      mstore\n        /* \"#utility.yul\":10154:10158   */\n      0x22\n        /* \"#utility.yul\":10151:10152   */\n      0x04\n        /* \"#utility.yul\":10144:10159   */\n      mstore\n        /* \"#utility.yul\":10182:10186   */\n      0x24\n        /* \"#utility.yul\":10179:10180   */\n      0x00\n        /* \"#utility.yul\":10172:10187   */\n      revert\n        /* \"#utility.yul\":9979:10197   */\n    tag_345:\n      pop\n        /* \"#utility.yul\":9766:10203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10208:10392   */\n    tag_334:\n        /* \"#utility.yul\":10260:10337   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10257:10258   */\n      0x00\n        /* \"#utility.yul\":10250:10338   */\n      mstore\n        /* \"#utility.yul\":10357:10361   */\n      0x11\n        /* \"#utility.yul\":10354:10355   */\n      0x04\n        /* \"#utility.yul\":10347:10362   */\n      mstore\n        /* \"#utility.yul\":10381:10385   */\n      0x24\n        /* \"#utility.yul\":10378:10379   */\n      0x00\n        /* \"#utility.yul\":10371:10386   */\n      revert\n        /* \"#utility.yul\":10586:10770   */\n    tag_204:\n        /* \"#utility.yul\":10638:10715   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10635:10636   */\n      0x00\n        /* \"#utility.yul\":10628:10716   */\n      mstore\n        /* \"#utility.yul\":10735:10739   */\n      0x41\n        /* \"#utility.yul\":10732:10733   */\n      0x04\n        /* \"#utility.yul\":10725:10740   */\n      mstore\n        /* \"#utility.yul\":10759:10763   */\n      0x24\n        /* \"#utility.yul\":10756:10757   */\n      0x00\n        /* \"#utility.yul\":10749:10764   */\n      revert\n        /* \"#utility.yul\":10775:10952   */\n    tag_302:\n        /* \"#utility.yul\":10860:10926   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10853:10858   */\n      dup2\n        /* \"#utility.yul\":10849:10927   */\n      and\n        /* \"#utility.yul\":10842:10847   */\n      dup2\n        /* \"#utility.yul\":10839:10928   */\n      eq\n        /* \"#utility.yul\":10829:10946   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":10942:10943   */\n      0x00\n        /* \"#utility.yul\":10939:10940   */\n      dup1\n        /* \"#utility.yul\":10932:10944   */\n      revert\n\n    auxdata: 0xa2646970667358221220da9276bff0ed2a07d5121cf1bc261f556fd402ed3ebd1952f7ebd0108494e7eb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1631": {
									"entryPoint": null,
									"id": 1631,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:1"
															},
															"nodeType": "YulIf",
															"src": "1032:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:1"
															},
															"nodeType": "YulIf",
															"src": "1169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:1"
															},
															"nodeType": "YulIf",
															"src": "1342:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:1",
														"type": ""
													}
												],
												"src": "904:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:1"
															},
															"nodeType": "YulIf",
															"src": "1614:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:1"
															},
															"nodeType": "YulIf",
															"src": "1684:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:1",
														"type": ""
													}
												],
												"src": "1471:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620019f7380380620019f78339810160408190526200003491620001c5565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61176580620002926000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d0578063b88d4fde146101e3578063c87b56dd146101f6578063e985e9c51461020957600080fd5b80636352211e1461019457806370a08231146101a757806395d89b41146101c857600080fd5b8063095ea7b3116100bd578063095ea7b31461015957806323b872dd1461016e57806342842e0e1461018157600080fd5b806301ffc9a7146100e457806306fdde031461010c578063081812fc14610121575b600080fd5b6100f76100f23660046114cc565b610252565b60405190151581526020015b60405180910390f35b610114610337565b60405161010391906115e1565b61013461012f366004611506565b6103c9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610103565b61016c6101673660046114a2565b6103fd565b005b61016c61017c366004611330565b61055b565b61016c61018f366004611330565b6105e2565b6101346101a2366004611506565b6105fd565b6101ba6101b53660046112e2565b61066f565b604051908152602001610103565b610114610723565b61016c6101de366004611466565b610732565b61016c6101f136600461136c565b610741565b610114610204366004611506565b6107cf565b6100f76102173660046112fd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102e557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061033157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546103469061164f565b80601f01602080910402602001604051908101604052809291908181526020018280546103729061164f565b80156103bf5780601f10610394576101008083540402835291602001916103bf565b820191906000526020600020905b8154815290600101906020018083116103a257829003601f168201915b5050505050905090565b60006103d482610843565b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610408826105fd565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821614806104da57506104da8133610217565b61054c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104a8565b61055683836108b7565b505050565b6105653382610957565b6105d75760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104a8565b610556838383610a17565b61055683838360405180602001604052806000815250610741565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806103315760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104a8565b600073ffffffffffffffffffffffffffffffffffffffff82166106fa5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016104a8565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6060600180546103469061164f565b61073d338383610cd1565b5050565b61074b3383610957565b6107bd5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104a8565b6107c984848484610de5565b50505050565b60606107da82610843565b60006107f160408051602081019091526000815290565b90506000815111610811576040518060200160405280600081525061083c565b8061081b84610e6e565b60405160200161082c929190611569565b6040516020818303038152906040525b9392505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff166108b45760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104a8565b50565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610911826105fd565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610963836105fd565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806109d1575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b80610a0f57508373ffffffffffffffffffffffffffffffffffffffff166109f7846103c9565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610a37826105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610ac05760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff8216610b485760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104a8565b610b558383836001610f36565b8273ffffffffffffffffffffffffffffffffffffffff16610b75826105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610bfe5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104a8565b600081815260046020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526003855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d4d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104a8565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610df0848484610a17565b610dfc84848484610ff2565b6107c95760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104a8565b60606000610e7b836111d7565b600101905060008167ffffffffffffffff811115610e9b57610e9b6116d2565b6040519080825280601f01601f191660200182016040528015610ec5576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610f2957610f2e565b610ecf565b509392505050565b60018111156107c95773ffffffffffffffffffffffffffffffffffffffff841615610f965773ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054839290610f9090849061160c565b90915550505b73ffffffffffffffffffffffffffffffffffffffff8316156107c95773ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081208054839290610fe79084906115f4565b909155505050505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b156111cc576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290611069903390899088908890600401611598565b602060405180830381600087803b15801561108357600080fd5b505af19250505080156110d1575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110ce918101906114e9565b60015b611181573d8080156110ff576040519150601f19603f3d011682016040523d82523d6000602084013e611104565b606091505b5080516111795760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104a8565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610a0f565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611220577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061124c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061126a57662386f26fc10000830492506010015b6305f5e1008310611282576305f5e100830492506008015b612710831061129657612710830492506004015b606483106112a8576064830492506002015b600a83106103315760010192915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146112dd57600080fd5b919050565b6000602082840312156112f457600080fd5b61083c826112b9565b6000806040838503121561131057600080fd5b611319836112b9565b9150611327602084016112b9565b90509250929050565b60008060006060848603121561134557600080fd5b61134e846112b9565b925061135c602085016112b9565b9150604084013590509250925092565b6000806000806080858703121561138257600080fd5b61138b856112b9565b9350611399602086016112b9565b925060408501359150606085013567ffffffffffffffff808211156113bd57600080fd5b818701915087601f8301126113d157600080fd5b8135818111156113e3576113e36116d2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611429576114296116d2565b816040528281528a602084870101111561144257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561147957600080fd5b611482836112b9565b91506020830135801515811461149757600080fd5b809150509250929050565b600080604083850312156114b557600080fd5b6114be836112b9565b946020939093013593505050565b6000602082840312156114de57600080fd5b813561083c81611701565b6000602082840312156114fb57600080fd5b815161083c81611701565b60006020828403121561151857600080fd5b5035919050565b60008151808452611537816020860160208601611623565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000835161157b818460208801611623565b83519083019061158f818360208801611623565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526115d7608083018461151f565b9695505050505050565b60208152600061083c602083018461151f565b60008219821115611607576116076116a3565b500190565b60008282101561161e5761161e6116a3565b500390565b60005b8381101561163e578181015183820152602001611626565b838111156107c95750506000910152565b600181811c9082168061166357607f821691505b6020821081141561169d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146108b457600080fdfea2646970667358221220da9276bff0ed2a07d5121cf1bc261f556fd402ed3ebd1952f7ebd0108494e7eb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x19F7 CODESIZE SUB DUP1 PUSH3 0x19F7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1765 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x121 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST PUSH2 0x16C PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E2 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2E5 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x331 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x164F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x164F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x394 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4 DUP3 PUSH2 0x843 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP3 PUSH2 0x5FD JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0x4DA JUMPI POP PUSH2 0x4DA DUP2 CALLER PUSH2 0x217 JUMP JUMPDEST PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x556 DUP4 DUP4 PUSH2 0x8B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x565 CALLER DUP3 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x556 DUP4 DUP4 DUP4 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x556 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x73D CALLER DUP4 DUP4 PUSH2 0xCD1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x74B CALLER DUP4 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x7C9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xDE5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7DA DUP3 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x83C JUMP JUMPDEST DUP1 PUSH2 0x81B DUP5 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82C SWAP3 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x911 DUP3 PUSH2 0x5FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x963 DUP4 PUSH2 0x5FD JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9D1 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xA0F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9F7 DUP5 PUSH2 0x3C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA37 DUP3 PUSH2 0x5FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0xB55 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF36 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB75 DUP3 PUSH2 0x5FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xDF0 DUP5 DUP5 DUP5 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0xDFC DUP5 DUP5 DUP5 DUP5 PUSH2 0xFF2 JUMP JUMPDEST PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE7B DUP4 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xF29 JUMPI PUSH2 0xF2E JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7C9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0xF96 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF90 SWAP1 DUP5 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x7C9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xFE7 SWAP1 DUP5 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1069 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10D1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x10CE SWAP2 DUP2 ADD SWAP1 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1181 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP PUSH2 0xA0F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1220 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x124C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x126A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1282 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1296 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12A8 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x331 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83C DUP3 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1319 DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1327 PUSH1 0x20 DUP5 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134E DUP5 PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x135C PUSH1 0x20 DUP6 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138B DUP6 PUSH2 0x12B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1399 PUSH1 0x20 DUP7 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1429 JUMPI PUSH2 0x1429 PUSH2 0x16D2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1482 DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14BE DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x83C DUP2 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x83C DUP2 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1537 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x157B DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1623 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x158F DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1623 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x15D7 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x151F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x83C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1607 JUMPI PUSH2 0x1607 PUSH2 0x16A3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x161E JUMPI PUSH2 0x161E PUSH2 0x16A3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1626 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7C9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1663 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x169D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP3 PUSH23 0xBFF0ED2A07D5121CF1BC261F556FD402ED3EBD1952F7EB 0xD0 LT DUP5 SWAP5 0xE7 0xEB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "33923:16327:0:-:0;;;34685:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34751:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;34774:17:0;;;;:7;;:17;;;;;:::i;:::-;;34685:113;;33923:16327;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;33923:16327:0;;;-1:-1:-1;33923:16327:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:1;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;33923:16327:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_2512": {
									"entryPoint": null,
									"id": 2512,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2345": {
									"entryPoint": 2231,
									"id": 2345,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_1782": {
									"entryPoint": null,
									"id": 1782,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2499": {
									"entryPoint": 3894,
									"id": 2499,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2453": {
									"entryPoint": 4082,
									"id": 2453,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_2014": {
									"entryPoint": null,
									"id": 2014,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2048": {
									"entryPoint": 2391,
									"id": 2048,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_1996": {
									"entryPoint": null,
									"id": 1996,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_2391": {
									"entryPoint": 2115,
									"id": 2391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_1983": {
									"entryPoint": 3557,
									"id": 1983,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2377": {
									"entryPoint": 3281,
									"id": 2377,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_2321": {
									"entryPoint": 2583,
									"id": 2321,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1825": {
									"entryPoint": 1021,
									"id": 1825,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1686": {
									"entryPoint": 1647,
									"id": 1686,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1843": {
									"entryPoint": 969,
									"id": 1843,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1878": {
									"entryPoint": null,
									"id": 1878,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1240": {
									"entryPoint": 4567,
									"id": 1240,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1724": {
									"entryPoint": 823,
									"id": 1724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1714": {
									"entryPoint": 1533,
									"id": 1714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1924": {
									"entryPoint": 1506,
									"id": 1924,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1954": {
									"entryPoint": 1857,
									"id": 1954,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1860": {
									"entryPoint": 1842,
									"id": 1860,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1662": {
									"entryPoint": 594,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_399": {
									"entryPoint": null,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1734": {
									"entryPoint": 1827,
									"id": 1734,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1459": {
									"entryPoint": 3694,
									"id": 1459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1773": {
									"entryPoint": 1999,
									"id": 1773,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_1905": {
									"entryPoint": 1371,
									"id": 1905,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10954:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:1"
															},
															"nodeType": "YulIf",
															"src": "111:93:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:1"
															},
															"nodeType": "YulIf",
															"src": "295:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:1",
														"type": ""
													}
												],
												"src": "215:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:32:1"
															},
															"nodeType": "YulIf",
															"src": "503:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "574:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "656:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "622:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:1",
														"type": ""
													}
												],
												"src": "406:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:1"
															},
															"nodeType": "YulIf",
															"src": "785:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "875:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "856:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "894:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "904:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "756:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "671:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1134:1067:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1181:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1193:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1183:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1183:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1155:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1164:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1151:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1176:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:33:1"
															},
															"nodeType": "YulIf",
															"src": "1144:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1206:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1216:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1254:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1298:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1283:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1264:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1311:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1338:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1349:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1334:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1321:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1362:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1376:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1366:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1417:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1427:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1421:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1472:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1484:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1474:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1474:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1474:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1468:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1457:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:14:1"
															},
															"nodeType": "YulIf",
															"src": "1454:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1497:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1511:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1522:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1501:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1556:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1560:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1552:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1552:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1567:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1541:35:1"
															},
															"nodeType": "YulIf",
															"src": "1538:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1602:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1625:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1612:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1606:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1651:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1653:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1653:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1653:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1643:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1647:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1640:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:10:1"
															},
															"nodeType": "YulIf",
															"src": "1637:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:76:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1692:66:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1686:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1767:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1787:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1781:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1771:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1799:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1821:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1845:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1849:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1841:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1841:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1856:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1837:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1837:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1861:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1833:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1833:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1866:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1829:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1817:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1803:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1929:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1931:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1931:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1931:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1888:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1900:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1885:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1885:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1908:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1905:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1882:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:46:1"
															},
															"nodeType": "YulIf",
															"src": "1879:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1971:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1960:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2006:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1991:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1991:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2055:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2057:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2057:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2057:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2032:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2036:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2028:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2028:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2041:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2024:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2046:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2021:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:33:1"
															},
															"nodeType": "YulIf",
															"src": "2018:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2097:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2093:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2114:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2123:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2080:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2150:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2158:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2146:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2146:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2142:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2168:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2179:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2189:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1076:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1087:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1099:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1107:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1115:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1123:6:1",
														"type": ""
													}
												],
												"src": "1004:1197:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2290:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2336:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2345:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2348:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2338:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2338:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2338:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2311:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2320:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:32:1"
															},
															"nodeType": "YulIf",
															"src": "2300:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2361:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2390:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2371:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2409:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2450:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2422:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2413:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2507:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2516:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2509:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2509:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2509:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2476:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2497:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2490:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2490:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2483:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2483:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2473:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2473:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:40:1"
															},
															"nodeType": "YulIf",
															"src": "2463:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2532:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2542:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2532:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2248:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2259:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2271:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2279:6:1",
														"type": ""
													}
												],
												"src": "2206:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2691:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2700:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2703:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2693:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2693:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2693:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2666:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2675:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2662:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2687:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:32:1"
															},
															"nodeType": "YulIf",
															"src": "2655:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2716:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2745:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2726:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2764:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2802:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2774:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2764:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2603:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2614:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2626:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2634:6:1",
														"type": ""
													}
												],
												"src": "2558:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2932:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2944:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2934:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2934:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2907:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2916:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2903:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2903:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2928:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2899:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:32:1"
															},
															"nodeType": "YulIf",
															"src": "2896:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2983:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2970:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2961:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3026:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3002:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3002:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3041:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3051:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2875:6:1",
														"type": ""
													}
												],
												"src": "2817:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3147:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3193:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3202:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3205:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3195:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3195:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3195:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3168:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3177:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3160:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3160:32:1"
															},
															"nodeType": "YulIf",
															"src": "3157:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3218:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3231:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3222:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3280:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3256:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3256:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3295:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3305:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3295:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3113:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3124:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3136:6:1",
														"type": ""
													}
												],
												"src": "3067:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3391:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3437:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3446:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3449:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3439:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3439:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3439:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3412:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3433:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:32:1"
															},
															"nodeType": "YulIf",
															"src": "3401:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3462:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3485:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3472:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3357:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3368:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3380:6:1",
														"type": ""
													}
												],
												"src": "3321:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3555:267:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3565:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3585:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3579:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3569:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3607:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3612:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3600:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3654:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3661:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3684:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3628:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3628:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3700:116:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3715:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3728:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3736:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3724:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3724:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3741:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3720:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3711:98:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:109:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3532:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3539:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3547:3:1",
														"type": ""
													}
												],
												"src": "3506:316:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4014:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4024:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4038:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4038:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4028:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4082:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4101:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4106:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4060:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4060:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4122:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4139:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4144:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4135:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "4126:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4160:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4182:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4164:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4224:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4232:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4220:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4239:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4246:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4198:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4198:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4264:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4275:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4282:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:20:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4264:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3982:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3987:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4006:3:1",
														"type": ""
													}
												],
												"src": "3827:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4403:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4413:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4421:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4421:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4413:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4455:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4470:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4478:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4372:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4383:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4394:4:1",
														"type": ""
													}
												],
												"src": "4302:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4736:308:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4746:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4756:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4750:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4814:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4829:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4837:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4825:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4825:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4807:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4807:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4861:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4872:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4857:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4881:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4889:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4877:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4850:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4924:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4929:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4902:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4902:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4967:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4952:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4972:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4945:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4945:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5033:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5018:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4993:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4681:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4692:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4700:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4708:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4716:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4727:4:1",
														"type": ""
													}
												],
												"src": "4533:511:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5144:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5154:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5166:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5177:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5162:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5162:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5154:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5196:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5221:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5214:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5214:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5207:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5207:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5189:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5113:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5124:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5135:4:1",
														"type": ""
													}
												],
												"src": "5049:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5362:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5379:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5390:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5372:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5372:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5402:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5427:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5450:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5435:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5410:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5402:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5331:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5342:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5353:4:1",
														"type": ""
													}
												],
												"src": "5241:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5639:235:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5656:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5649:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5649:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5701:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5706:2:1",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5729:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5740:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5725:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5745:34:1",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5718:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5718:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5800:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5811:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5796:18:1"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5816:15:1",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5789:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5841:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5853:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5864:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5841:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5616:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5630:4:1",
														"type": ""
													}
												],
												"src": "5465:409:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6053:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6070:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6081:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6063:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6104:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6115:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6100:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6120:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6093:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6093:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6154:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6139:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6159:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6132:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6225:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6210:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6230:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6203:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6203:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6260:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6272:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6283:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6260:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6030:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6044:4:1",
														"type": ""
													}
												],
												"src": "5879:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6472:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6489:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6500:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6482:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6523:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6534:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6519:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6512:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6512:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6562:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6573:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6558:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6578:34:1",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6551:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6633:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6644:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6629:18:1"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6649:7:1",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6622:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6622:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6666:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6678:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6689:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6674:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6666:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6449:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6463:4:1",
														"type": ""
													}
												],
												"src": "6298:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6878:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6888:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6888:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6888:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6940:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6925:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6945:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6918:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6979:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6964:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6984:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6957:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7039:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7050:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7055:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7028:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7083:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7079:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7071:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6855:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6869:4:1",
														"type": ""
													}
												],
												"src": "6704:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7283:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7300:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7311:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7293:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7293:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7345:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7330:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7350:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7323:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7323:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7373:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7384:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7369:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7369:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7389:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7362:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7426:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7438:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7449:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7434:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7426:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7260:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7274:4:1",
														"type": ""
													}
												],
												"src": "7109:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7637:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7665:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7647:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7647:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7688:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7699:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7684:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7677:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7677:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7727:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7738:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7743:34:1",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7716:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7716:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:1"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7814:11:1",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7787:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7787:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7835:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7847:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7858:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7835:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7614:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7628:4:1",
														"type": ""
													}
												],
												"src": "7463:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8047:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8064:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8075:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8057:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8057:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8109:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8094:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8114:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8087:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8087:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8137:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8148:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8133:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8153:26:1",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8126:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8126:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8189:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8201:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8212:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8197:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8189:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8024:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8038:4:1",
														"type": ""
													}
												],
												"src": "7873:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8400:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8417:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8428:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8410:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8410:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8410:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8451:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8462:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8447:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8467:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8440:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8440:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8490:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8501:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8486:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8506:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8479:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8479:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8561:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8572:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8557:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8577:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8550:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8550:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8590:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8602:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8598:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8598:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8590:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8377:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8391:4:1",
														"type": ""
													}
												],
												"src": "8226:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:251:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8819:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8830:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8812:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8812:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8864:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8849:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8869:2:1",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8842:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8842:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8892:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8903:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8888:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8908:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8881:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8881:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8963:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8974:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8959:18:1"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8979:31:1",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8952:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9020:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9043:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9028:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9028:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9020:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8779:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8793:4:1",
														"type": ""
													}
												],
												"src": "8628:425:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9159:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9169:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9181:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9192:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9177:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9169:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9211:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9222:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9204:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9204:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9128:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9139:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9150:4:1",
														"type": ""
													}
												],
												"src": "9058:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9288:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9315:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9317:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9317:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9317:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9304:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9311:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9301:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9301:13:1"
															},
															"nodeType": "YulIf",
															"src": "9298:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9346:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9357:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9360:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9346:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9271:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9274:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9280:3:1",
														"type": ""
													}
												],
												"src": "9240:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9422:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9444:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9446:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9446:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9446:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9438:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9441:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9435:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9435:8:1"
															},
															"nodeType": "YulIf",
															"src": "9432:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9475:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9487:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9490:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9483:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9475:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9404:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9407:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9413:4:1",
														"type": ""
													}
												],
												"src": "9373:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9556:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9566:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9575:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9570:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9635:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9660:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9665:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9656:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9656:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9679:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9684:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9675:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9675:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9669:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9669:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9649:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9649:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9649:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9596:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9599:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9593:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9593:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9607:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9609:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9618:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9621:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9614:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9614:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9609:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9589:3:1",
																"statements": []
															},
															"src": "9585:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9724:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9737:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9742:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9733:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9733:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9751:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9726:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9726:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9713:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9716:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9710:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:13:1"
															},
															"nodeType": "YulIf",
															"src": "9707:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9534:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9539:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9544:6:1",
														"type": ""
													}
												],
												"src": "9503:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9821:382:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9831:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9845:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9848:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9831:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9862:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9892:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9898:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9888:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9888:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9866:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9939:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9941:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9955:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9963:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9951:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9951:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9941:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9919:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9912:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9912:26:1"
															},
															"nodeType": "YulIf",
															"src": "9909:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10029:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10050:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10053:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10043:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10043:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10043:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10151:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10154:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10144:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10144:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10144:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10179:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10182:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10172:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10172:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10172:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9985:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10008:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10016:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10005:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10005:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9982:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9982:38:1"
															},
															"nodeType": "YulIf",
															"src": "9979:218:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9801:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9810:6:1",
														"type": ""
													}
												],
												"src": "9766:437:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10240:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10257:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10260:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10250:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10250:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10354:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10357:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10347:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10347:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10378:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10381:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10371:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10371:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10208:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10429:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10446:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10449:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10439:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10543:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10546:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10536:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10567:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10570:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10560:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10560:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10397:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10618:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10635:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10638:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10628:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10628:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10732:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10735:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10725:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10756:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10759:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10586:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10819:133:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10930:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10939:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10942:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10932:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10932:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10932:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10842:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10853:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10860:66:1",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10849:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10849:78:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10839:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10839:89:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:97:1"
															},
															"nodeType": "YulIf",
															"src": "10829:117:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10808:5:1",
														"type": ""
													}
												],
												"src": "10775:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d0578063b88d4fde146101e3578063c87b56dd146101f6578063e985e9c51461020957600080fd5b80636352211e1461019457806370a08231146101a757806395d89b41146101c857600080fd5b8063095ea7b3116100bd578063095ea7b31461015957806323b872dd1461016e57806342842e0e1461018157600080fd5b806301ffc9a7146100e457806306fdde031461010c578063081812fc14610121575b600080fd5b6100f76100f23660046114cc565b610252565b60405190151581526020015b60405180910390f35b610114610337565b60405161010391906115e1565b61013461012f366004611506565b6103c9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610103565b61016c6101673660046114a2565b6103fd565b005b61016c61017c366004611330565b61055b565b61016c61018f366004611330565b6105e2565b6101346101a2366004611506565b6105fd565b6101ba6101b53660046112e2565b61066f565b604051908152602001610103565b610114610723565b61016c6101de366004611466565b610732565b61016c6101f136600461136c565b610741565b610114610204366004611506565b6107cf565b6100f76102173660046112fd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102e557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061033157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546103469061164f565b80601f01602080910402602001604051908101604052809291908181526020018280546103729061164f565b80156103bf5780601f10610394576101008083540402835291602001916103bf565b820191906000526020600020905b8154815290600101906020018083116103a257829003601f168201915b5050505050905090565b60006103d482610843565b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610408826105fd565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821614806104da57506104da8133610217565b61054c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104a8565b61055683836108b7565b505050565b6105653382610957565b6105d75760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104a8565b610556838383610a17565b61055683838360405180602001604052806000815250610741565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806103315760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104a8565b600073ffffffffffffffffffffffffffffffffffffffff82166106fa5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016104a8565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6060600180546103469061164f565b61073d338383610cd1565b5050565b61074b3383610957565b6107bd5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104a8565b6107c984848484610de5565b50505050565b60606107da82610843565b60006107f160408051602081019091526000815290565b90506000815111610811576040518060200160405280600081525061083c565b8061081b84610e6e565b60405160200161082c929190611569565b6040516020818303038152906040525b9392505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff166108b45760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104a8565b50565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610911826105fd565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610963836105fd565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806109d1575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b80610a0f57508373ffffffffffffffffffffffffffffffffffffffff166109f7846103c9565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610a37826105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610ac05760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff8216610b485760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104a8565b610b558383836001610f36565b8273ffffffffffffffffffffffffffffffffffffffff16610b75826105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610bfe5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104a8565b600081815260046020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526003855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d4d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104a8565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610df0848484610a17565b610dfc84848484610ff2565b6107c95760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104a8565b60606000610e7b836111d7565b600101905060008167ffffffffffffffff811115610e9b57610e9b6116d2565b6040519080825280601f01601f191660200182016040528015610ec5576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610f2957610f2e565b610ecf565b509392505050565b60018111156107c95773ffffffffffffffffffffffffffffffffffffffff841615610f965773ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054839290610f9090849061160c565b90915550505b73ffffffffffffffffffffffffffffffffffffffff8316156107c95773ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081208054839290610fe79084906115f4565b909155505050505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b156111cc576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290611069903390899088908890600401611598565b602060405180830381600087803b15801561108357600080fd5b505af19250505080156110d1575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110ce918101906114e9565b60015b611181573d8080156110ff576040519150601f19603f3d011682016040523d82523d6000602084013e611104565b606091505b5080516111795760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104a8565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610a0f565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611220577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061124c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061126a57662386f26fc10000830492506010015b6305f5e1008310611282576305f5e100830492506008015b612710831061129657612710830492506004015b606483106112a8576064830492506002015b600a83106103315760010192915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146112dd57600080fd5b919050565b6000602082840312156112f457600080fd5b61083c826112b9565b6000806040838503121561131057600080fd5b611319836112b9565b9150611327602084016112b9565b90509250929050565b60008060006060848603121561134557600080fd5b61134e846112b9565b925061135c602085016112b9565b9150604084013590509250925092565b6000806000806080858703121561138257600080fd5b61138b856112b9565b9350611399602086016112b9565b925060408501359150606085013567ffffffffffffffff808211156113bd57600080fd5b818701915087601f8301126113d157600080fd5b8135818111156113e3576113e36116d2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611429576114296116d2565b816040528281528a602084870101111561144257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561147957600080fd5b611482836112b9565b91506020830135801515811461149757600080fd5b809150509250929050565b600080604083850312156114b557600080fd5b6114be836112b9565b946020939093013593505050565b6000602082840312156114de57600080fd5b813561083c81611701565b6000602082840312156114fb57600080fd5b815161083c81611701565b60006020828403121561151857600080fd5b5035919050565b60008151808452611537816020860160208601611623565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000835161157b818460208801611623565b83519083019061158f818360208801611623565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526115d7608083018461151f565b9695505050505050565b60208152600061083c602083018461151f565b60008219821115611607576116076116a3565b500190565b60008282101561161e5761161e6116a3565b500390565b60005b8381101561163e578181015183820152602001611626565b838111156107c95750506000910152565b600181811c9082168061166357607f821691505b6020821081141561169d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146108b457600080fdfea2646970667358221220da9276bff0ed2a07d5121cf1bc261f556fd402ed3ebd1952f7ebd0108494e7eb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x121 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST PUSH2 0x16C PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E2 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2E5 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x331 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x164F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x164F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x394 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4 DUP3 PUSH2 0x843 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP3 PUSH2 0x5FD JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0x4DA JUMPI POP PUSH2 0x4DA DUP2 CALLER PUSH2 0x217 JUMP JUMPDEST PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x556 DUP4 DUP4 PUSH2 0x8B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x565 CALLER DUP3 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x556 DUP4 DUP4 DUP4 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x556 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x73D CALLER DUP4 DUP4 PUSH2 0xCD1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x74B CALLER DUP4 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x7C9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xDE5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7DA DUP3 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x83C JUMP JUMPDEST DUP1 PUSH2 0x81B DUP5 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82C SWAP3 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x911 DUP3 PUSH2 0x5FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x963 DUP4 PUSH2 0x5FD JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9D1 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xA0F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9F7 DUP5 PUSH2 0x3C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA37 DUP3 PUSH2 0x5FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0xB55 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF36 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB75 DUP3 PUSH2 0x5FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xDF0 DUP5 DUP5 DUP5 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0xDFC DUP5 DUP5 DUP5 DUP5 PUSH2 0xFF2 JUMP JUMPDEST PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE7B DUP4 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xF29 JUMPI PUSH2 0xF2E JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7C9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0xF96 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF90 SWAP1 DUP5 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x7C9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xFE7 SWAP1 DUP5 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1069 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10D1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x10CE SWAP2 DUP2 ADD SWAP1 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1181 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP PUSH2 0xA0F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1220 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x124C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x126A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1282 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1296 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12A8 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x331 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83C DUP3 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1319 DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1327 PUSH1 0x20 DUP5 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134E DUP5 PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x135C PUSH1 0x20 DUP6 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138B DUP6 PUSH2 0x12B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1399 PUSH1 0x20 DUP7 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1429 JUMPI PUSH2 0x1429 PUSH2 0x16D2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1482 DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14BE DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x83C DUP2 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x83C DUP2 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1537 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x157B DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1623 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x158F DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1623 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x15D7 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x151F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x83C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1607 JUMPI PUSH2 0x1607 PUSH2 0x16A3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x161E JUMPI PUSH2 0x161E PUSH2 0x16A3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1626 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7C9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1663 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x169D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP3 PUSH23 0xBFF0ED2A07D5121CF1BC261F556FD402ED3EBD1952F7EB 0xD0 LT DUP5 SWAP5 0xE7 0xEB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "33923:16327:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34865:300;;;;;;:::i;:::-;;:::i;:::-;;;5214:14:1;;5207:22;5189:41;;5177:2;5162:18;34865:300:0;;;;;;;;35766:98;;;:::i;:::-;;;;;;;:::i;37230:167::-;;;;;;:::i;:::-;;:::i;:::-;;;4478:42:1;4466:55;;;4448:74;;4436:2;4421:18;37230:167:0;4302:226:1;36763:406:0;;;;;;:::i;:::-;;:::i;:::-;;37907:326;;;;;;:::i;:::-;;:::i;38299:179::-;;;;;;:::i;:::-;;:::i;35485:219::-;;;;;;:::i;:::-;;:::i;35224:204::-;;;;;;:::i;:::-;;:::i;:::-;;;9204:25:1;;;9192:2;9177:18;35224:204:0;9058:177:1;35928:102:0;;;:::i;37464:153::-;;;;;;:::i;:::-;;:::i;38544:314::-;;;;;;:::i;:::-;;:::i;36096:276::-;;;;;;:::i;:::-;;:::i;37683:162::-;;;;;;:::i;:::-;37803:25;;;;37780:4;37803:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;37683:162;34865:300;34967:4;35002:40;;;35017:25;35002:40;;:104;;-1:-1:-1;35058:48:0;;;35073:33;35058:48;35002:104;:156;;;-1:-1:-1;12954:25:0;12939:40;;;;35122:36;34983:175;34865:300;-1:-1:-1;;34865:300:0:o;35766:98::-;35820:13;35852:5;35845:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35766:98;:::o;37230:167::-;37306:7;37325:23;37340:7;37325:14;:23::i;:::-;-1:-1:-1;37366:24:0;;;;:15;:24;;;;;;;;;37230:167::o;36763:406::-;36843:13;36859:23;36874:7;36859:14;:23::i;:::-;36843:39;;36906:5;36900:11;;:2;:11;;;;36892:57;;;;-1:-1:-1;;;36892:57:0;;8428:2:1;36892:57:0;;;8410:21:1;8467:2;8447:18;;;8440:30;8506:34;8486:18;;;8479:62;8577:3;8557:18;;;8550:31;8598:19;;36892:57:0;;;;;;;;;772:10;36981:21;;;;;:62;;-1:-1:-1;37006:37:0;37023:5;772:10;37683:162;:::i;37006:37::-;36960:170;;;;-1:-1:-1;;;36960:170:0;;8830:2:1;36960:170:0;;;8812:21:1;8869:2;8849:18;;;8842:30;8908:34;8888:18;;;8881:62;8979:31;8959:18;;;8952:59;9028:19;;36960:170:0;8628:425:1;36960:170:0;37141:21;37150:2;37154:7;37141:8;:21::i;:::-;36833:336;36763:406;;:::o;37907:326::-;38096:41;772:10;38129:7;38096:18;:41::i;:::-;38088:99;;;;-1:-1:-1;;;38088:99:0;;5667:2:1;38088:99:0;;;5649:21:1;5706:2;5686:18;;;5679:30;5745:34;5725:18;;;5718:62;5816:15;5796:18;;;5789:43;5849:19;;38088:99:0;5465:409:1;38088:99:0;38198:28;38208:4;38214:2;38218:7;38198:9;:28::i;38299:179::-;38432:39;38449:4;38455:2;38459:7;38432:39;;;;;;;;;;;;:16;:39::i;35485:219::-;35557:7;40225:16;;;:7;:16;;;;;;;;;35619:56;;;;-1:-1:-1;;;35619:56:0;;8075:2:1;35619:56:0;;;8057:21:1;8114:2;8094:18;;;8087:30;8153:26;8133:18;;;8126:54;8197:18;;35619:56:0;7873:348:1;35224:204:0;35296:7;35323:19;;;35315:73;;;;-1:-1:-1;;;35315:73:0;;7665:2:1;35315:73:0;;;7647:21:1;7704:2;7684:18;;;7677:30;7743:34;7723:18;;;7716:62;7814:11;7794:18;;;7787:39;7843:19;;35315:73:0;7463:405:1;35315:73:0;-1:-1:-1;35405:16:0;;;;;;:9;:16;;;;;;;35224:204::o;35928:102::-;35984:13;36016:7;36009:14;;;;;:::i;37464:153::-;37558:52;772:10;37591:8;37601;37558:18;:52::i;:::-;37464:153;;:::o;38544:314::-;38712:41;772:10;38745:7;38712:18;:41::i;:::-;38704:99;;;;-1:-1:-1;;;38704:99:0;;5667:2:1;38704:99:0;;;5649:21:1;5706:2;5686:18;;;5679:30;5745:34;5725:18;;;5718:62;5816:15;5796:18;;;5789:43;5849:19;;38704:99:0;5465:409:1;38704:99:0;38813:38;38827:4;38833:2;38837:7;38846:4;38813:13;:38::i;:::-;38544:314;;;;:::o;36096:276::-;36169:13;36194:23;36209:7;36194:14;:23::i;:::-;36228:21;36252:10;36690:9;;;;;;;;;-1:-1:-1;36690:9:0;;;36614:92;36252:10;36228:34;;36303:1;36285:7;36279:21;:25;:86;;;;;;;;;;;;;;;;;36331:7;36340:18;:7;:16;:18::i;:::-;36314:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;36279:86;36272:93;36096:276;-1:-1:-1;;;36096:276:0:o;46761:133::-;40616:4;40225:16;;;:7;:16;;;;;;;;46834:53;;;;-1:-1:-1;;;46834:53:0;;8075:2:1;46834:53:0;;;8057:21:1;8114:2;8094:18;;;8087:30;8153:26;8133:18;;;8126:54;8197:18;;46834:53:0;7873:348:1;46834:53:0;46761:133;:::o;46063:171::-;46137:24;;;;:15;:24;;;;;:29;;;;;;;;;;;;;:24;;46190:23;46137:24;46190:14;:23::i;:::-;46181:46;;;;;;;;;;;;46063:171;;:::o;40835:261::-;40928:4;40944:13;40960:23;40975:7;40960:14;:23::i;:::-;40944:39;;41012:5;41001:16;;:7;:16;;;:52;;;-1:-1:-1;37803:25:0;;;;37780:4;37803:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;41021:32;41001:87;;;;41081:7;41057:31;;:20;41069:7;41057:11;:20::i;:::-;:31;;;41001:87;40993:96;40835:261;-1:-1:-1;;;;40835:261:0:o;44718:1233::-;44872:4;44845:31;;:23;44860:7;44845:14;:23::i;:::-;:31;;;44837:81;;;;-1:-1:-1;;;44837:81:0;;6500:2:1;44837:81:0;;;6482:21:1;6539:2;6519:18;;;6512:30;6578:34;6558:18;;;6551:62;6649:7;6629:18;;;6622:35;6674:19;;44837:81:0;6298:401:1;44837:81:0;44936:16;;;44928:65;;;;-1:-1:-1;;;44928:65:0;;6906:2:1;44928:65:0;;;6888:21:1;6945:2;6925:18;;;6918:30;6984:34;6964:18;;;6957:62;7055:6;7035:18;;;7028:34;7079:19;;44928:65:0;6704:400:1;44928:65:0;45004:42;45025:4;45031:2;45035:7;45044:1;45004:20;:42::i;:::-;45173:4;45146:31;;:23;45161:7;45146:14;:23::i;:::-;:31;;;45138:81;;;;-1:-1:-1;;;45138:81:0;;6500:2:1;45138:81:0;;;6482:21:1;6539:2;6519:18;;;6512:30;6578:34;6558:18;;;6551:62;6649:7;6629:18;;;6622:35;6674:19;;45138:81:0;6298:401:1;45138:81:0;45288:24;;;;:15;:24;;;;;;;;45281:31;;;;;;;;;;45756:15;;;;;;:9;:15;;;;;:20;;;;;;45790:13;;;;;;;;;:18;;45281:31;45790:18;;;45828:16;;;:7;:16;;;;;;:21;;;;;;;;;;45865:27;;45304:7;;45865:27;;;36833:336;36763:406;;:::o;46370:307::-;46520:8;46511:17;;:5;:17;;;;46503:55;;;;-1:-1:-1;;;46503:55:0;;7311:2:1;46503:55:0;;;7293:21:1;7350:2;7330:18;;;7323:30;7389:27;7369:18;;;7362:55;7434:18;;46503:55:0;7109:349:1;46503:55:0;46568:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;46629:41;;5189::1;;;46629::0;;5162:18:1;46629:41:0;;;;;;;46370:307;;;:::o;39719:305::-;39869:28;39879:4;39885:2;39889:7;39869:9;:28::i;:::-;39915:47;39938:4;39944:2;39948:7;39957:4;39915:22;:47::i;:::-;39907:110;;;;-1:-1:-1;;;39907:110:0;;6081:2:1;39907:110:0;;;6063:21:1;6120:2;6100:18;;;6093:30;6159:34;6139:18;;;6132:62;6230:20;6210:18;;;6203:48;6268:19;;39907:110:0;5879:414:1;31670:696:0;31726:13;31775:14;31792:17;31803:5;31792:10;:17::i;:::-;31812:1;31792:21;31775:38;;31827:20;31861:6;31850:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31850:18:0;-1:-1:-1;31827:41:0;-1:-1:-1;31988:28:0;;;32004:2;31988:28;32043:280;32074:5;;32213:8;32208:2;32197:14;;32192:30;32074:5;32179:44;32267:2;32258:11;;;-1:-1:-1;32291:10:0;32287:21;;32303:5;;32287:21;32043:280;;;-1:-1:-1;32343:6:0;31670:696;-1:-1:-1;;;31670:696:0:o;48993:396::-;49177:1;49165:9;:13;49161:222;;;49198:18;;;;49194:85;;49236:15;;;;;;;:9;:15;;;;;:28;;49255:9;;49236:15;:28;;49255:9;;49236:28;:::i;:::-;;;;-1:-1:-1;;49194:85:0;49296:16;;;;49292:81;;49332:13;;;;;;;:9;:13;;;;;:26;;49349:9;;49332:13;:26;;49349:9;;49332:26;:::i;:::-;;;;-1:-1:-1;;48993:396:0;;;;:::o;47446:831::-;47595:4;47615:13;;;2384:19;:23;47611:660;;47650:71;;;;;:36;;;;;;:71;;772:10;;47701:4;;47707:7;;47716:4;;47650:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47650:71:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;47646:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47888:13:0;;47884:321;;47930:60;;-1:-1:-1;;;47930:60:0;;6081:2:1;47930:60:0;;;6063:21:1;6120:2;6100:18;;;6093:30;6159:34;6139:18;;;6132:62;6230:20;6210:18;;;6203:48;6268:19;;47930:60:0;5879:414:1;47884:321:0;48157:6;48151:13;48142:6;48138:2;48134:15;48127:38;47646:573;47771:51;;47781:41;47771:51;;-1:-1:-1;47764:58:0;;47611:660;-1:-1:-1;48256:4:0;47446:831;;;;;;:::o;28643:890::-;28696:7;;28780:6;28771:15;;28767:99;;28815:6;28806:15;;;-1:-1:-1;28849:2:0;28839:12;28767:99;28892:6;28883:5;:15;28879:99;;28927:6;28918:15;;;-1:-1:-1;28961:2:0;28951:12;28879:99;29004:6;28995:5;:15;28991:99;;29039:6;29030:15;;;-1:-1:-1;29073:2:0;29063:12;28991:99;29116:5;29107;:14;29103:96;;29150:5;29141:14;;;-1:-1:-1;29183:1:0;29173:11;29103:96;29225:5;29216;:14;29212:96;;29259:5;29250:14;;;-1:-1:-1;29292:1:0;29282:11;29212:96;29334:5;29325;:14;29321:96;;29368:5;29359:14;;;-1:-1:-1;29401:1:0;29391:11;29321:96;29443:5;29434;:14;29430:64;;29478:1;29468:11;29520:6;28643:890;-1:-1:-1;;28643:890:0:o;14:196:1:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:52;;;551:1;548;541:12;503:52;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;406:260;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;671:328;;;;;:::o;1004:1197::-;1099:6;1107;1115;1123;1176:3;1164:9;1155:7;1151:23;1147:33;1144:53;;;1193:1;1190;1183:12;1144:53;1216:29;1235:9;1216:29;:::i;:::-;1206:39;;1264:38;1298:2;1287:9;1283:18;1264:38;:::i;:::-;1254:48;;1349:2;1338:9;1334:18;1321:32;1311:42;;1404:2;1393:9;1389:18;1376:32;1427:18;1468:2;1460:6;1457:14;1454:34;;;1484:1;1481;1474:12;1454:34;1522:6;1511:9;1507:22;1497:32;;1567:7;1560:4;1556:2;1552:13;1548:27;1538:55;;1589:1;1586;1579:12;1538:55;1625:2;1612:16;1647:2;1643;1640:10;1637:36;;;1653:18;;:::i;:::-;1787:2;1781:9;1849:4;1841:13;;1692:66;1837:22;;;1861:2;1833:31;1829:40;1817:53;;;1885:18;;;1905:22;;;1882:46;1879:72;;;1931:18;;:::i;:::-;1971:10;1967:2;1960:22;2006:2;1998:6;1991:18;2046:7;2041:2;2036;2032;2028:11;2024:20;2021:33;2018:53;;;2067:1;2064;2057:12;2018:53;2123:2;2118;2114;2110:11;2105:2;2097:6;2093:15;2080:46;2168:1;2163:2;2158;2150:6;2146:15;2142:24;2135:35;2189:6;2179:16;;;;;;;1004:1197;;;;;;;:::o;2206:347::-;2271:6;2279;2332:2;2320:9;2311:7;2307:23;2303:32;2300:52;;;2348:1;2345;2338:12;2300:52;2371:29;2390:9;2371:29;:::i;:::-;2361:39;;2450:2;2439:9;2435:18;2422:32;2497:5;2490:13;2483:21;2476:5;2473:32;2463:60;;2519:1;2516;2509:12;2463:60;2542:5;2532:15;;;2206:347;;;;;:::o;2558:254::-;2626:6;2634;2687:2;2675:9;2666:7;2662:23;2658:32;2655:52;;;2703:1;2700;2693:12;2655:52;2726:29;2745:9;2726:29;:::i;:::-;2716:39;2802:2;2787:18;;;;2774:32;;-1:-1:-1;;;2558:254:1:o;2817:245::-;2875:6;2928:2;2916:9;2907:7;2903:23;2899:32;2896:52;;;2944:1;2941;2934:12;2896:52;2983:9;2970:23;3002:30;3026:5;3002:30;:::i;3067:249::-;3136:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:52;;;3205:1;3202;3195:12;3157:52;3237:9;3231:16;3256:30;3280:5;3256:30;:::i;3321:180::-;3380:6;3433:2;3421:9;3412:7;3408:23;3404:32;3401:52;;;3449:1;3446;3439:12;3401:52;-1:-1:-1;3472:23:1;;3321:180;-1:-1:-1;3321:180:1:o;3506:316::-;3547:3;3585:5;3579:12;3612:6;3607:3;3600:19;3628:63;3684:6;3677:4;3672:3;3668:14;3661:4;3654:5;3650:16;3628:63;:::i;:::-;3736:2;3724:15;3741:66;3720:88;3711:98;;;;3811:4;3707:109;;3506:316;-1:-1:-1;;3506:316:1:o;3827:470::-;4006:3;4044:6;4038:13;4060:53;4106:6;4101:3;4094:4;4086:6;4082:17;4060:53;:::i;:::-;4176:13;;4135:16;;;;4198:57;4176:13;4135:16;4232:4;4220:17;;4198:57;:::i;:::-;4271:20;;3827:470;-1:-1:-1;;;;3827:470:1:o;4533:511::-;4727:4;4756:42;4837:2;4829:6;4825:15;4814:9;4807:34;4889:2;4881:6;4877:15;4872:2;4861:9;4857:18;4850:43;;4929:6;4924:2;4913:9;4909:18;4902:34;4972:3;4967:2;4956:9;4952:18;4945:31;4993:45;5033:3;5022:9;5018:19;5010:6;4993:45;:::i;:::-;4985:53;4533:511;-1:-1:-1;;;;;;4533:511:1:o;5241:219::-;5390:2;5379:9;5372:21;5353:4;5410:44;5450:2;5439:9;5435:18;5427:6;5410:44;:::i;9240:128::-;9280:3;9311:1;9307:6;9304:1;9301:13;9298:39;;;9317:18;;:::i;:::-;-1:-1:-1;9353:9:1;;9240:128::o;9373:125::-;9413:4;9441:1;9438;9435:8;9432:34;;;9446:18;;:::i;:::-;-1:-1:-1;9483:9:1;;9373:125::o;9503:258::-;9575:1;9585:113;9599:6;9596:1;9593:13;9585:113;;;9675:11;;;9669:18;9656:11;;;9649:39;9621:2;9614:10;9585:113;;;9716:6;9713:1;9710:13;9707:48;;;-1:-1:-1;;9751:1:1;9733:16;;9726:27;9503:258::o;9766:437::-;9845:1;9841:12;;;;9888;;;9909:61;;9963:4;9955:6;9951:17;9941:27;;9909:61;10016:2;10008:6;10005:14;9985:18;9982:38;9979:218;;;10053:77;10050:1;10043:88;10154:4;10151:1;10144:15;10182:4;10179:1;10172:15;9979:218;;9766:437;;;:::o;10208:184::-;10260:77;10257:1;10250:88;10357:4;10354:1;10347:15;10381:4;10378:1;10371:15;10586:184;10638:77;10635:1;10628:88;10735:4;10732:1;10725:15;10759:4;10756:1;10749:15;10775:177;10860:66;10853:5;10849:78;10842:5;10839:89;10829:117;;10942:1;10939;10932:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1197800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2598",
								"getApproved(uint256)": "4756",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2543",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26657",
								"supportsInterface(bytes4)": "456",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "48842",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34756,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34751,
									"end": 34756,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34781,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34774,
									"end": 34781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33923,
									"end": 50250,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da9276bff0ed2a07d5121cf1bc261f556fd402ed3ebd1952f7ebd0108494e7eb64736f6c63430008070033",
									".code": [
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 50250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 5229,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4466,
											"end": 4521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4302,
											"end": 4528,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9192,
											"end": 9194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9058,
											"end": 9235,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37780,
											"end": 37784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37821,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34967,
											"end": 34971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35017,
											"end": 35042,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 35002,
											"end": 35106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35058,
											"end": 35106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35058,
											"end": 35106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35058,
											"end": 35106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35073,
											"end": 35106,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35058,
											"end": 35106,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35106,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 35002,
											"end": 35106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 35002,
											"end": 35158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12954,
											"end": 12979,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12939,
											"end": 12979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12939,
											"end": 12979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12939,
											"end": 12979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12939,
											"end": 12979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35122,
											"end": 35158,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 35122,
											"end": 35158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34983,
											"end": 35158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35820,
											"end": 35833,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35852,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37306,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 37340,
											"end": 37347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37325,
											"end": 37339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36843,
											"end": 36856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36859,
											"end": 36882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 36874,
											"end": 36881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36859,
											"end": 36873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 36859,
											"end": 36882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36859,
											"end": 36882,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 36859,
											"end": 36882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36843,
											"end": 36882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36843,
											"end": 36882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36906,
											"end": 36911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8467,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 8447,
											"end": 8465,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8447,
											"end": 8465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8506,
											"end": 8540,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8580,
											"name": "PUSH",
											"source": 1,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8550,
											"end": 8581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8617,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8598,
											"end": 8617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 36981,
											"end": 37043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37006,
											"end": 37043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 37023,
											"end": 37028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37006,
											"end": 37043,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 37006,
											"end": 37043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8812,
											"end": 8833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8871,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8942,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9010,
											"name": "PUSH",
											"source": 1,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9028,
											"end": 9047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 8628,
											"end": 9053,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37141,
											"end": 37162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37150,
											"end": 37152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37154,
											"end": 37161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37141,
											"end": 37149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 37141,
											"end": 37162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37141,
											"end": 37162,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37141,
											"end": 37162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36833,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38096,
											"end": 38137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38129,
											"end": 38136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38096,
											"end": 38114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38096,
											"end": 38137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38096,
											"end": 38137,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 38096,
											"end": 38137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "2D"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5465,
											"end": 5874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 38208,
											"end": 38212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38214,
											"end": 38216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38218,
											"end": 38225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 38198,
											"end": 38226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 38449,
											"end": 38453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38455,
											"end": 38457,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38459,
											"end": 38466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35557,
											"end": 35564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8057,
											"end": 8078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8116,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8126,
											"end": 8180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8215,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8197,
											"end": 8215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7873,
											"end": 8221,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35296,
											"end": 35303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35323,
											"end": 35342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35323,
											"end": 35342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7647,
											"end": 7668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7684,
											"end": 7702,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7684,
											"end": 7702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7777,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7716,
											"end": 7778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7825,
											"name": "PUSH",
											"source": 1,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7862,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7843,
											"end": 7862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7463,
											"end": 7868,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35414,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35984,
											"end": 35997,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36016,
											"end": 36023,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37558,
											"end": 37610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37591,
											"end": 37599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37601,
											"end": 37609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37558,
											"end": 37576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 37558,
											"end": 37610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37558,
											"end": 37610,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 37558,
											"end": 37610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38745,
											"end": 38752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38712,
											"end": 38753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38712,
											"end": 38753,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 38712,
											"end": 38753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "2D"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5465,
											"end": 5874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 38851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 38827,
											"end": 38831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38833,
											"end": 38835,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38837,
											"end": 38844,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38846,
											"end": 38850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 38826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 38813,
											"end": 38851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38813,
											"end": 38851,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 38813,
											"end": 38851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36169,
											"end": 36182,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36194,
											"end": 36217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 36209,
											"end": 36216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36194,
											"end": 36208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 36194,
											"end": 36217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36194,
											"end": 36217,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 36194,
											"end": 36217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36228,
											"end": 36249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36252,
											"end": 36262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36614,
											"end": 36706,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36252,
											"end": 36262,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 36252,
											"end": 36262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36228,
											"end": 36262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36228,
											"end": 36262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36303,
											"end": 36304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36285,
											"end": 36292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36340,
											"end": 36358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 36340,
											"end": 36347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36340,
											"end": 36356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 36340,
											"end": 36358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36340,
											"end": 36358,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 36340,
											"end": 36358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46761,
											"end": 46894,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 46761,
											"end": 46894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40616,
											"end": 40620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8057,
											"end": 8078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8116,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8126,
											"end": 8180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8215,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8197,
											"end": 8215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7873,
											"end": 8221,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46761,
											"end": 46894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46761,
											"end": 46894,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46190,
											"end": 46213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46190,
											"end": 46204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 46190,
											"end": 46213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46190,
											"end": 46213,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 46190,
											"end": 46213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40835,
											"end": 41096,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40835,
											"end": 41096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40928,
											"end": 40932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40944,
											"end": 40957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40960,
											"end": 40983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 40975,
											"end": 40982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40960,
											"end": 40974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40960,
											"end": 40983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40960,
											"end": 40983,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 40960,
											"end": 40983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40944,
											"end": 40983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40944,
											"end": 40983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 41001,
											"end": 41053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37780,
											"end": 37784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37821,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41021,
											"end": 41053,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 41021,
											"end": 41053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41081,
											"end": 41088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 41069,
											"end": 41076,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41057,
											"end": 41077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41057,
											"end": 41077,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 41057,
											"end": 41077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40993,
											"end": 41089,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 40835,
											"end": 41096,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40835,
											"end": 41096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44718,
											"end": 45951,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 44718,
											"end": 45951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44872,
											"end": 44876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 44860,
											"end": 44867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 44845,
											"end": 44868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44845,
											"end": 44868,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 44845,
											"end": 44868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6482,
											"end": 6503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6541,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6612,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6656,
											"name": "PUSH",
											"source": 1,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6674,
											"end": 6693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6298,
											"end": 6699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44936,
											"end": 44952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 7019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7061,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7079,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6704,
											"end": 7104,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45004,
											"end": 45046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 45025,
											"end": 45029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45031,
											"end": 45033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45035,
											"end": 45042,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45044,
											"end": 45045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45004,
											"end": 45024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 45004,
											"end": 45046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45004,
											"end": 45046,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 45004,
											"end": 45046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45173,
											"end": 45177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 45161,
											"end": 45168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 45146,
											"end": 45169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45146,
											"end": 45169,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 45146,
											"end": 45169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6482,
											"end": 6503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6541,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6612,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6656,
											"name": "PUSH",
											"source": 1,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6674,
											"end": 6693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6298,
											"end": 6699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45765,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45835,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45304,
											"end": 45311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45304,
											"end": 45311,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 36833,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46520,
											"end": 46528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7311,
											"end": 7313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7293,
											"end": 7314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7323,
											"end": 7353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7109,
											"end": 7458,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39719,
											"end": 40024,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 39719,
											"end": 40024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39869,
											"end": 39897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 39879,
											"end": 39883,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39885,
											"end": 39887,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39889,
											"end": 39896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39869,
											"end": 39878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 39869,
											"end": 39897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39869,
											"end": 39897,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 39869,
											"end": 39897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39915,
											"end": 39962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 39938,
											"end": 39942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39948,
											"end": 39955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39957,
											"end": 39961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39915,
											"end": 39937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 39915,
											"end": 39962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39915,
											"end": 39962,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 39915,
											"end": 39962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6250,
											"name": "PUSH",
											"source": 1,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6203,
											"end": 6251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5879,
											"end": 6293,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31670,
											"end": 32366,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 31670,
											"end": 32366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31739,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31775,
											"end": 31789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31792,
											"end": 31809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31803,
											"end": 31808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31792,
											"end": 31802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 31792,
											"end": 31809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31792,
											"end": 31809,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31792,
											"end": 31809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31792,
											"end": 31813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 31813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 31813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31827,
											"end": 31847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31861,
											"end": 31867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31827,
											"end": 31868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31988,
											"end": 32016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31988,
											"end": 32016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31988,
											"end": 32016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32004,
											"end": 32006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31988,
											"end": 32016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32074,
											"end": 32079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32221,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 32208,
											"end": 32210,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32197,
											"end": 32211,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32197,
											"end": 32211,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 32192,
											"end": 32222,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32179,
											"end": 32223,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32269,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32258,
											"end": 32269,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32269,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32269,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32291,
											"end": 32301,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 32287,
											"end": 32308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32303,
											"end": 32308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 32303,
											"end": 32308,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32308,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 32287,
											"end": 32308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32343,
											"end": 32349,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31670,
											"end": 32366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31670,
											"end": 32366,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49177,
											"end": 49178,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49165,
											"end": 49174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49178,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49161,
											"end": 49383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49161,
											"end": 49383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 49161,
											"end": 49383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49198,
											"end": 49216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49198,
											"end": 49216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49198,
											"end": 49216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49198,
											"end": 49216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 49194,
											"end": 49279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49245,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49194,
											"end": 49279,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 49194,
											"end": 49279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49296,
											"end": 49312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49296,
											"end": 49312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49296,
											"end": 49312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49296,
											"end": 49312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49292,
											"end": 49373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 49292,
											"end": 49373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49341,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49349,
											"end": 49358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49349,
											"end": 49358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49349,
											"end": 49358,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49349,
											"end": 49358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47595,
											"end": 47599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47615,
											"end": 47628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47615,
											"end": 47628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47615,
											"end": 47628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2403,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47611,
											"end": 48271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 47611,
											"end": 48271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47705,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47707,
											"end": 47714,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47707,
											"end": 47714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47720,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47888,
											"end": 47901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47888,
											"end": 47901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47884,
											"end": 48205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 47884,
											"end": 48205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6250,
											"name": "PUSH",
											"source": 1,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6203,
											"end": 6251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5879,
											"end": 6293,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47884,
											"end": 48205,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 47884,
											"end": 48205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48157,
											"end": 48163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48151,
											"end": 48164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48142,
											"end": 48148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48138,
											"end": 48140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48134,
											"end": 48149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48127,
											"end": 48165,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47771,
											"end": 47822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47771,
											"end": 47822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47781,
											"end": 47822,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47771,
											"end": 47822,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47771,
											"end": 47822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47764,
											"end": 47822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 47764,
											"end": 47822,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47611,
											"end": 48271,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 47611,
											"end": 48271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48256,
											"end": 48260,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28643,
											"end": 29533,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28643,
											"end": 29533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28696,
											"end": 28703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28696,
											"end": 28703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28780,
											"end": 28786,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 28771,
											"end": 28786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 28767,
											"end": 28866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28815,
											"end": 28821,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 28806,
											"end": 28821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 28821,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 28821,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28849,
											"end": 28851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28839,
											"end": 28851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28866,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 28767,
											"end": 28866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 28898,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 28883,
											"end": 28888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28883,
											"end": 28898,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28879,
											"end": 28978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 28879,
											"end": 28978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28927,
											"end": 28933,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 28918,
											"end": 28933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28918,
											"end": 28933,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28918,
											"end": 28933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28961,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28951,
											"end": 28963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28879,
											"end": 28978,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 28879,
											"end": 28978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29004,
											"end": 29010,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 28995,
											"end": 29000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28995,
											"end": 29010,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28991,
											"end": 29090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 28991,
											"end": 29090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29039,
											"end": 29045,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 29030,
											"end": 29045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29045,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29073,
											"end": 29075,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29063,
											"end": 29075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28991,
											"end": 29090,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 28991,
											"end": 29090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29121,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 29107,
											"end": 29112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29107,
											"end": 29121,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 29103,
											"end": 29199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29150,
											"end": 29155,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 29141,
											"end": 29155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29141,
											"end": 29155,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29141,
											"end": 29155,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29183,
											"end": 29184,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29173,
											"end": 29184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29199,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 29103,
											"end": 29199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29225,
											"end": 29230,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 29216,
											"end": 29221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29216,
											"end": 29230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29212,
											"end": 29308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 29212,
											"end": 29308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29259,
											"end": 29264,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 29250,
											"end": 29264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29250,
											"end": 29264,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29250,
											"end": 29264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29292,
											"end": 29293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29282,
											"end": 29293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29212,
											"end": 29308,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 29212,
											"end": 29308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29334,
											"end": 29339,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29325,
											"end": 29330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29325,
											"end": 29339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29321,
											"end": 29417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29321,
											"end": 29417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29368,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29359,
											"end": 29373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29359,
											"end": 29373,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29359,
											"end": 29373,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29401,
											"end": 29402,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29391,
											"end": 29402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29321,
											"end": 29417,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29321,
											"end": 29417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29443,
											"end": 29448,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29434,
											"end": 29439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29434,
											"end": 29448,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29430,
											"end": 29494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29430,
											"end": 29494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29478,
											"end": 29479,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29468,
											"end": 29479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29526,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28643,
											"end": 29533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28643,
											"end": 29533,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 474,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 510,
											"end": 533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 506,
											"end": 538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 503,
											"end": 555,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 503,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 503,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 564,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 612,
											"end": 660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 612,
											"end": 660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 894,
											"end": 942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 951,
											"end": 993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 951,
											"end": 993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1164,
											"end": 1173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1180,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1245,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1298,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1353,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1471,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1520,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1574,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1556,
											"end": 1558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1575,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1628,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1650,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1637,
											"end": 1673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1853,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1841,
											"end": 1854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1833,
											"end": 1864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1903,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1927,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1951,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1879,
											"end": 1951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2054,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2069,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2330,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2505,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2463,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2463,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2558,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2558,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2673,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2705,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2745,
											"end": 2754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2755,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2806,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2806,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2558,
											"end": 2812,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2817,
											"end": 3062,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2817,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2931,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2946,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3067,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3067,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3192,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3207,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3280,
											"end": 3285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3256,
											"end": 3286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3321,
											"end": 3501,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3321,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3436,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3451,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3472,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3321,
											"end": 3501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3506,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 3506,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3610,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3659,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3724,
											"end": 3739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3720,
											"end": 3808,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3707,
											"end": 3816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3822,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3827,
											"end": 4297,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3827,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4051,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4106,
											"end": 4112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4094,
											"end": 4098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4092,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4176,
											"end": 4189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4220,
											"end": 4237,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4291,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 4297,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3827,
											"end": 4297,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4533,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4533,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4798,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4837,
											"end": 4839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4835,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4823,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4887,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4861,
											"end": 4870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4967,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 4970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5038,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 5044,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 5044,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5241,
											"end": 5460,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5241,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5410,
											"end": 5454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9240,
											"end": 9368,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 9240,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9280,
											"end": 9283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9304,
											"end": 9305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9314,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9337,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9298,
											"end": 9337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9353,
											"end": 9362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9368,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9373,
											"end": 9498,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9373,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9443,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9466,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9432,
											"end": 9466,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9446,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 9446,
											"end": 9464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9446,
											"end": 9464,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9446,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9498,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9503,
											"end": 9761,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 9503,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9593,
											"end": 9606,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9669,
											"end": 9687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 9667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 9667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 9667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9623,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9614,
											"end": 9624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 9585,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9723,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9755,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 9707,
											"end": 9755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9751,
											"end": 9752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9749,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9726,
											"end": 9753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9761,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9766,
											"end": 10203,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 9766,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9841,
											"end": 9853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 9853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 9853,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 9853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9900,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9909,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 9909,
											"end": 9970,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 9955,
											"end": 9961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9941,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9941,
											"end": 9968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9909,
											"end": 9970,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 9909,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10019,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 10020,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 9979,
											"end": 10197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10053,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10050,
											"end": 10051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10043,
											"end": 10131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10154,
											"end": 10158,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10144,
											"end": 10159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10186,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10179,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10187,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10197,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 9979,
											"end": 10197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 10203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 10203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 10203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 10203,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10208,
											"end": 10392,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 10208,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10337,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10257,
											"end": 10258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10250,
											"end": 10338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10357,
											"end": 10361,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10354,
											"end": 10355,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10347,
											"end": 10362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10381,
											"end": 10385,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10378,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10386,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10586,
											"end": 10770,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10586,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10638,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10635,
											"end": 10636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10628,
											"end": 10716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10739,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10725,
											"end": 10740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10759,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10756,
											"end": 10757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10749,
											"end": 10764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10952,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 10775,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10860,
											"end": 10926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10853,
											"end": 10858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10927,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10928,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10829,
											"end": 10946,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 10943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10939,
											"end": 10940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 10944,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1594,
								"contract": "NbaToddlers_flat.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1596,
								"contract": "NbaToddlers_flat.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1600,
								"contract": "NbaToddlers_flat.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1604,
								"contract": "NbaToddlers_flat.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1608,
								"contract": "NbaToddlers_flat.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1614,
								"contract": "NbaToddlers_flat.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NbaToddlers_flat.sol\":18956:31258  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NbaToddlers_flat.sol\":18956:31258  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a77e73a5925c3cb6583850af3ec2e2e9b00dbf60a0dfc7a415cccbab2ca9da0464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a77e73a5925c3cb6583850af3ec2e2e9b00dbf60a0dfc7a415cccbab2ca9da0464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 PUSH31 0x73A5925C3CB6583850AF3EC2E2E9B00DBF60A0DFC7A415CCCBAB2CA9DA0464 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "18956:12302:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;18956:12302:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a77e73a5925c3cb6583850af3ec2e2e9b00dbf60a0dfc7a415cccbab2ca9da0464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 PUSH31 0x73A5925C3CB6583850AF3EC2E2E9B00DBF60A0DFC7A415CCCBAB2CA9DA0464 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "18956:12302:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18956,
									"end": 31258,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a77e73a5925c3cb6583850af3ec2e2e9b00dbf60a0dfc7a415cccbab2ca9da0464736f6c63430008070033",
									".code": [
										{
											"begin": 18956,
											"end": 31258,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 31258,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 31258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 31258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18956,
											"end": 31258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18956,
											"end": 31258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 31258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18956,
											"end": 31258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 31258,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NbaToddlers": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NbaToddlers_flat.sol\":50315:50808  contract NbaToddlers is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"NbaToddlers_flat.sol\":50430:50477  constructor() ERC721(\"NBA Toddlers\", \"NBAT\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"NbaToddlers_flat.sol\":34685:34798  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0c\n  dup2\n  mstore\n  shl(0xa0, 0x4e424120546f64646c657273)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x04\n  dup5\n  mstore\n  shl(0xe2, 0x13909055)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"NbaToddlers_flat.sol\":34751:34764  _name = name_ */\n  dup2\n  mload\n    /* \"NbaToddlers_flat.sol\":34685:34798  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"NbaToddlers_flat.sol\":34751:34764  _name = name_ */\n  tag_5\n  swap2\n  0x00\n  swap2\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"NbaToddlers_flat.sol\":34774:34791  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"NbaToddlers_flat.sol\":34774:34781  _symbol */\n  0x01\n  swap1\n    /* \"NbaToddlers_flat.sol\":34774:34791  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"NbaToddlers_flat.sol\":34685:34798  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"NbaToddlers_flat.sol\":50315:50808  contract NbaToddlers is ERC721 {... */\n  jump(tag_21)\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:394   */\ntag_11:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_23:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_24:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_21:\n    /* \"NbaToddlers_flat.sol\":50315:50808  contract NbaToddlers is ERC721 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NbaToddlers_flat.sol\":50315:50808  contract NbaToddlers is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7824407f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x1249c58b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NbaToddlers_flat.sol\":34865:35165  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":5214:5228   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5207:5229   */\n      iszero\n        /* \"#utility.yul\":5189:5230   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5177:5179   */\n      0x20\n        /* \"#utility.yul\":5162:5180   */\n      add\n        /* \"NbaToddlers_flat.sol\":34865:35165  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NbaToddlers_flat.sol\":35766:35864  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37230:37397  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":4478:4520   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4466:4521   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4448:4522   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"#utility.yul\":4421:4439   */\n      add\n        /* \"NbaToddlers_flat.sol\":37230:37397  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_26\n        /* \"#utility.yul\":4302:4528   */\n      jump\n        /* \"NbaToddlers_flat.sol\":36763:37169  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"NbaToddlers_flat.sol\":50483:50653  function mint() external {... */\n    tag_7:\n      tag_38\n      tag_43\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37907:38233  function transferFrom(... */\n    tag_8:\n      tag_38\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":50352:50391  uint256 public constant MAX_SUPPLY = 10 */\n    tag_9:\n      tag_48\n        /* \"NbaToddlers_flat.sol\":50389:50391  10 */\n      0x0a\n        /* \"NbaToddlers_flat.sol\":50352:50391  uint256 public constant MAX_SUPPLY = 10 */\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":10279:10304   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10267:10269   */\n      0x20\n        /* \"#utility.yul\":10252:10270   */\n      add\n        /* \"NbaToddlers_flat.sol\":50352:50391  uint256 public constant MAX_SUPPLY = 10 */\n      tag_26\n        /* \"#utility.yul\":10133:10310   */\n      jump\n        /* \"NbaToddlers_flat.sol\":38299:38478  function safeTransferFrom(... */\n    tag_10:\n      tag_38\n      tag_53\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":35485:35704  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_11:\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":35224:35428  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_48\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":50397:50423  uint256 public tokenSupply */\n    tag_13:\n      tag_48\n      sload(0x06)\n      dup2\n      jump\n        /* \"NbaToddlers_flat.sol\":35928:36030  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_28\n      tag_68\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37464:37617  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_15:\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":38544:38858  function safeTransferFrom(... */\n    tag_16:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":36096:36372  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_28\n      tag_79\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37683:37845  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_22\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":37780:37784  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":37803:37821  _operatorApprovals */\n      0x05\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":37803:37838  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"NbaToddlers_flat.sol\":37683:37845  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"NbaToddlers_flat.sol\":34865:35165  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_25:\n        /* \"NbaToddlers_flat.sol\":34967:34971  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":35002:35042  interfaceId == type(IERC721).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":35017:35042  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":35002:35042  interfaceId == type(IERC721).interfaceId */\n      eq\n      dup1\n        /* \"NbaToddlers_flat.sol\":35002:35106  interfaceId == type(IERC721).interfaceId ||... */\n      tag_88\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":35058:35106  interfaceId == type(IERC721Metadata).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":35073:35106  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":35058:35106  interfaceId == type(IERC721Metadata).interfaceId */\n      eq\n        /* \"NbaToddlers_flat.sol\":35002:35106  interfaceId == type(IERC721).interfaceId ||... */\n    tag_88:\n        /* \"NbaToddlers_flat.sol\":35002:35158  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":12954:12979  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":12939:12979  interfaceId == type(IERC165).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":35122:35158  super.supportsInterface(interfaceId) */\n    tag_90:\n        /* \"NbaToddlers_flat.sol\":34983:35158  return... */\n      swap3\n        /* \"NbaToddlers_flat.sol\":34865:35165  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":35766:35864  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"NbaToddlers_flat.sol\":35820:35833  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":35852:35857  _name */\n      0x00\n        /* \"NbaToddlers_flat.sol\":35845:35857  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":35766:35864  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":37230:37397  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"NbaToddlers_flat.sol\":37306:37313  address */\n      0x00\n        /* \"NbaToddlers_flat.sol\":37325:37348  _requireMinted(tokenId) */\n      tag_100\n        /* \"NbaToddlers_flat.sol\":37340:37347  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":37325:37339  _requireMinted */\n      tag_101\n        /* \"NbaToddlers_flat.sol\":37325:37348  _requireMinted(tokenId) */\n      jump\t// in\n    tag_100:\n      pop\n        /* \"NbaToddlers_flat.sol\":37366:37390  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":37366:37381  _tokenApprovals */\n      0x04\n        /* \"NbaToddlers_flat.sol\":37366:37390  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"NbaToddlers_flat.sol\":37230:37397  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":36763:37169  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_41:\n        /* \"NbaToddlers_flat.sol\":36843:36856  address owner */\n      0x00\n        /* \"NbaToddlers_flat.sol\":36859:36882  ERC721.ownerOf(tokenId) */\n      tag_103\n        /* \"NbaToddlers_flat.sol\":36874:36881  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":36859:36873  ERC721.ownerOf */\n      tag_57\n        /* \"NbaToddlers_flat.sol\":36859:36882  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"NbaToddlers_flat.sol\":36843:36882  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":36906:36911  owner */\n      dup1\n        /* \"NbaToddlers_flat.sol\":36900:36911  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":36900:36902  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":36900:36911  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NbaToddlers_flat.sol\":36892:36949  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9503:9505   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":36892:36949  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9485:9506   */\n      mstore\n        /* \"#utility.yul\":9542:9544   */\n      0x21\n        /* \"#utility.yul\":9522:9540   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9515:9545   */\n      mstore\n        /* \"#utility.yul\":9581:9615   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":9561:9579   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9554:9616   */\n      mstore\n        /* \"#utility.yul\":9652:9655   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9632:9650   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9625:9656   */\n      mstore\n        /* \"#utility.yul\":9673:9692   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":36892:36949  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":36981:37002  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      eq\n      dup1\n        /* \"NbaToddlers_flat.sol\":36981:37043  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_110\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":37006:37043  isApprovedForAll(owner, _msgSender()) */\n      tag_110\n        /* \"NbaToddlers_flat.sol\":37023:37028  owner */\n      dup2\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":37683:37845  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_83\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37006:37043  isApprovedForAll(owner, _msgSender()) */\n    tag_110:\n        /* \"NbaToddlers_flat.sol\":36960:37130  require(... */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9905:9907   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":36960:37130  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9887:9908   */\n      mstore\n        /* \"#utility.yul\":9944:9946   */\n      0x3d\n        /* \"#utility.yul\":9924:9942   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9917:9947   */\n      mstore\n        /* \"#utility.yul\":9983:10017   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":9963:9981   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9956:10018   */\n      mstore\n        /* \"#utility.yul\":10054:10085   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":10034:10052   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10027:10086   */\n      mstore\n        /* \"#utility.yul\":10103:10122   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":36960:37130  require(... */\n      tag_105\n        /* \"#utility.yul\":9703:10128   */\n      jump\n        /* \"NbaToddlers_flat.sol\":36960:37130  require(... */\n    tag_112:\n        /* \"NbaToddlers_flat.sol\":37141:37162  _approve(to, tokenId) */\n      tag_115\n        /* \"NbaToddlers_flat.sol\":37150:37152  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":37154:37161  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":37141:37149  _approve */\n      tag_116\n        /* \"NbaToddlers_flat.sol\":37141:37162  _approve(to, tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"NbaToddlers_flat.sol\":36833:37169  {... */\n      pop\n        /* \"NbaToddlers_flat.sol\":36763:37169  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":50483:50653  function mint() external {... */\n    tag_43:\n        /* \"NbaToddlers_flat.sol\":50389:50391  10 */\n      0x0a\n        /* \"NbaToddlers_flat.sol\":50526:50537  tokenSupply */\n      sload(0x06)\n        /* \"NbaToddlers_flat.sol\":50526:50550  tokenSupply < MAX_SUPPLY */\n      lt\n        /* \"NbaToddlers_flat.sol\":50518:50583  require(tokenSupply < MAX_SUPPLY, \"ERC721: all NFTs are minted.\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8432:8434   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":50518:50583  require(tokenSupply < MAX_SUPPLY, \"ERC721: all NFTs are minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8414:8435   */\n      mstore\n        /* \"#utility.yul\":8471:8473   */\n      0x1c\n        /* \"#utility.yul\":8451:8469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8444:8474   */\n      mstore\n        /* \"#utility.yul\":8510:8540   */\n      0x4552433732313a20616c6c204e46547320617265206d696e7465642e00000000\n        /* \"#utility.yul\":8490:8508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8483:8541   */\n      mstore\n        /* \"#utility.yul\":8558:8576   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":50518:50583  require(tokenSupply < MAX_SUPPLY, \"ERC721: all NFTs are minted.\") */\n      tag_105\n        /* \"#utility.yul\":8230:8582   */\n      jump\n        /* \"NbaToddlers_flat.sol\":50518:50583  require(tokenSupply < MAX_SUPPLY, \"ERC721: all NFTs are minted.\") */\n    tag_118:\n        /* \"NbaToddlers_flat.sol\":50593:50623  _mint(msg.sender, tokenSupply) */\n      tag_121\n        /* \"NbaToddlers_flat.sol\":50599:50609  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":50611:50622  tokenSupply */\n      sload(0x06)\n        /* \"NbaToddlers_flat.sol\":50593:50598  _mint */\n      tag_122\n        /* \"NbaToddlers_flat.sol\":50593:50623  _mint(msg.sender, tokenSupply) */\n      jump\t// in\n    tag_121:\n        /* \"NbaToddlers_flat.sol\":50633:50644  tokenSupply */\n      0x06\n        /* \"NbaToddlers_flat.sol\":50633:50646  tokenSupply++ */\n      dup1\n      sload\n      swap1\n        /* \"NbaToddlers_flat.sol\":50633:50644  tokenSupply */\n      0x00\n        /* \"NbaToddlers_flat.sol\":50633:50646  tokenSupply++ */\n      tag_123\n      dup4\n      tag_124\n      jump\t// in\n    tag_123:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"NbaToddlers_flat.sol\":50483:50653  function mint() external {... */\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":37907:38233  function transferFrom(... */\n    tag_47:\n        /* \"NbaToddlers_flat.sol\":38096:38137  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_126\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":38129:38136  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":38096:38114  _isApprovedOrOwner */\n      tag_128\n        /* \"NbaToddlers_flat.sol\":38096:38137  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_126:\n        /* \"NbaToddlers_flat.sol\":38088:38187  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5667:5669   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":38088:38187  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5649:5670   */\n      mstore\n        /* \"#utility.yul\":5706:5708   */\n      0x2d\n        /* \"#utility.yul\":5686:5704   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5679:5709   */\n      mstore\n        /* \"#utility.yul\":5745:5779   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":5725:5743   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5718:5780   */\n      mstore\n        /* \"#utility.yul\":5816:5831   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":5796:5814   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5789:5832   */\n      mstore\n        /* \"#utility.yul\":5849:5868   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":38088:38187  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_105\n        /* \"#utility.yul\":5465:5874   */\n      jump\n        /* \"NbaToddlers_flat.sol\":38088:38187  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n    tag_129:\n        /* \"NbaToddlers_flat.sol\":38198:38226  _transfer(from, to, tokenId) */\n      tag_115\n        /* \"NbaToddlers_flat.sol\":38208:38212  from */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38214:38216  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38218:38225  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38198:38207  _transfer */\n      tag_133\n        /* \"NbaToddlers_flat.sol\":38198:38226  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":38299:38478  function safeTransferFrom(... */\n    tag_54:\n        /* \"NbaToddlers_flat.sol\":38432:38471  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_115\n        /* \"NbaToddlers_flat.sol\":38449:38453  from */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38455:38457  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38459:38466  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38432:38471  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"NbaToddlers_flat.sol\":38432:38448  safeTransferFrom */\n      tag_77\n        /* \"NbaToddlers_flat.sol\":38432:38471  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":35485:35704  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"NbaToddlers_flat.sol\":35557:35564  address */\n      0x00\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":40225:40232  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup1\n        /* \"NbaToddlers_flat.sol\":35619:35675  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9150:9152   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":35619:35675  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9132:9153   */\n      mstore\n        /* \"#utility.yul\":9189:9191   */\n      0x18\n        /* \"#utility.yul\":9169:9187   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9162:9192   */\n      mstore\n        /* \"#utility.yul\":9228:9254   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":9208:9226   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9201:9255   */\n      mstore\n        /* \"#utility.yul\":9272:9290   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":35619:35675  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_105\n        /* \"#utility.yul\":8948:9296   */\n      jump\n        /* \"NbaToddlers_flat.sol\":35224:35428  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_62:\n        /* \"NbaToddlers_flat.sol\":35296:35303  uint256 */\n      0x00\n        /* \"NbaToddlers_flat.sol\":35323:35342  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":35315:35388  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8022:8024   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":35315:35388  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8004:8025   */\n      mstore\n        /* \"#utility.yul\":8061:8063   */\n      0x29\n        /* \"#utility.yul\":8041:8059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8034:8064   */\n      mstore\n        /* \"#utility.yul\":8100:8134   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":8080:8098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8073:8135   */\n      mstore\n        /* \"#utility.yul\":8171:8182   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8151:8169   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8144:8183   */\n      mstore\n        /* \"#utility.yul\":8200:8219   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":35315:35388  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_105\n        /* \"#utility.yul\":7820:8225   */\n      jump\n        /* \"NbaToddlers_flat.sol\":35315:35388  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_143:\n      pop\n        /* \"NbaToddlers_flat.sol\":35405:35421  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":35405:35414  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":35405:35421  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"NbaToddlers_flat.sol\":35224:35428  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":35928:36030  function symbol() public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"NbaToddlers_flat.sol\":35984:35997  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":36016:36023  _symbol */\n      0x01\n        /* \"NbaToddlers_flat.sol\":36009:36023  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"NbaToddlers_flat.sol\":37464:37617  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"NbaToddlers_flat.sol\":37558:37610  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_153\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":37591:37599  operator */\n      dup4\n        /* \"NbaToddlers_flat.sol\":37601:37609  approved */\n      dup4\n        /* \"NbaToddlers_flat.sol\":37558:37576  _setApprovalForAll */\n      tag_155\n        /* \"NbaToddlers_flat.sol\":37558:37610  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_153:\n        /* \"NbaToddlers_flat.sol\":37464:37617  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":38544:38858  function safeTransferFrom(... */\n    tag_77:\n        /* \"NbaToddlers_flat.sol\":38712:38753  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_157\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n        /* \"NbaToddlers_flat.sol\":38745:38752  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":38712:38730  _isApprovedOrOwner */\n      tag_128\n        /* \"NbaToddlers_flat.sol\":38712:38753  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"NbaToddlers_flat.sol\":38704:38803  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5667:5669   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":38704:38803  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5649:5670   */\n      mstore\n        /* \"#utility.yul\":5706:5708   */\n      0x2d\n        /* \"#utility.yul\":5686:5704   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5679:5709   */\n      mstore\n        /* \"#utility.yul\":5745:5779   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":5725:5743   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5718:5780   */\n      mstore\n        /* \"#utility.yul\":5816:5831   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":5796:5814   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5789:5832   */\n      mstore\n        /* \"#utility.yul\":5849:5868   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":38704:38803  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_105\n        /* \"#utility.yul\":5465:5874   */\n      jump\n        /* \"NbaToddlers_flat.sol\":38704:38803  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n    tag_159:\n        /* \"NbaToddlers_flat.sol\":38813:38851  _safeTransfer(from, to, tokenId, data) */\n      tag_161\n        /* \"NbaToddlers_flat.sol\":38827:38831  from */\n      dup5\n        /* \"NbaToddlers_flat.sol\":38833:38835  to */\n      dup5\n        /* \"NbaToddlers_flat.sol\":38837:38844  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":38846:38850  data */\n      dup5\n        /* \"NbaToddlers_flat.sol\":38813:38826  _safeTransfer */\n      tag_162\n        /* \"NbaToddlers_flat.sol\":38813:38851  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_161:\n        /* \"NbaToddlers_flat.sol\":38544:38858  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":36096:36372  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_80:\n        /* \"NbaToddlers_flat.sol\":36169:36182  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":36194:36217  _requireMinted(tokenId) */\n      tag_164\n        /* \"NbaToddlers_flat.sol\":36209:36216  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":36194:36208  _requireMinted */\n      tag_101\n        /* \"NbaToddlers_flat.sol\":36194:36217  _requireMinted(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"NbaToddlers_flat.sol\":36228:36249  string memory baseURI */\n      0x00\n        /* \"NbaToddlers_flat.sol\":36252:36262  _baseURI() */\n      tag_165\n        /* \"NbaToddlers_flat.sol\":36252:36260  _baseURI */\n      tag_166\n        /* \"NbaToddlers_flat.sol\":36252:36262  _baseURI() */\n      jump\t// in\n    tag_165:\n        /* \"NbaToddlers_flat.sol\":36228:36262  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":36303:36304  0 */\n      0x00\n        /* \"NbaToddlers_flat.sol\":36285:36292  baseURI */\n      dup2\n        /* \"NbaToddlers_flat.sol\":36279:36300  bytes(baseURI).length */\n      mload\n        /* \"NbaToddlers_flat.sol\":36279:36304  bytes(baseURI).length > 0 */\n      gt\n        /* \"NbaToddlers_flat.sol\":36279:36365  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \"NbaToddlers_flat.sol\":36331:36338  baseURI */\n      dup1\n        /* \"NbaToddlers_flat.sol\":36340:36358  tokenId.toString() */\n      tag_169\n        /* \"NbaToddlers_flat.sol\":36340:36347  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":36340:36356  tokenId.toString */\n      tag_170\n        /* \"NbaToddlers_flat.sol\":36340:36358  tokenId.toString() */\n      jump\t// in\n    tag_169:\n        /* \"NbaToddlers_flat.sol\":36314:36359  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"NbaToddlers_flat.sol\":36279:36365  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_168:\n        /* \"NbaToddlers_flat.sol\":36272:36365  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"NbaToddlers_flat.sol\":36096:36372  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":46761:46894  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_101:\n        /* \"NbaToddlers_flat.sol\":40616:40620  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":40225:40232  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":46834:46887  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9150:9152   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":46834:46887  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9132:9153   */\n      mstore\n        /* \"#utility.yul\":9189:9191   */\n      0x18\n        /* \"#utility.yul\":9169:9187   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9162:9192   */\n      mstore\n        /* \"#utility.yul\":9228:9254   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":9208:9226   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9201:9255   */\n      mstore\n        /* \"#utility.yul\":9272:9290   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":46834:46887  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_105\n        /* \"#utility.yul\":8948:9296   */\n      jump\n        /* \"NbaToddlers_flat.sol\":46834:46887  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_178:\n        /* \"NbaToddlers_flat.sol\":46761:46894  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":46063:46234  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_116:\n        /* \"NbaToddlers_flat.sol\":46137:46161  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":46137:46152  _tokenApprovals */\n      0x04\n        /* \"NbaToddlers_flat.sol\":46137:46161  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"NbaToddlers_flat.sol\":46137:46166  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NbaToddlers_flat.sol\":46137:46161  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"NbaToddlers_flat.sol\":46190:46213  ERC721.ownerOf(tokenId) */\n      tag_182\n        /* \"NbaToddlers_flat.sol\":46137:46161  _tokenApprovals[tokenId] */\n      dup3\n        /* \"NbaToddlers_flat.sol\":46190:46204  ERC721.ownerOf */\n      tag_57\n        /* \"NbaToddlers_flat.sol\":46190:46213  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"NbaToddlers_flat.sol\":46181:46227  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NbaToddlers_flat.sol\":46063:46234  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":42386:43306  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_122:\n        /* \"NbaToddlers_flat.sol\":42465:42481  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":42457:42518  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8789:8791   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":42457:42518  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8771:8792   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8808:8826   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8801:8831   */\n      mstore\n        /* \"#utility.yul\":8867:8901   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":8847:8865   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8840:8902   */\n      mstore\n        /* \"#utility.yul\":8919:8937   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":42457:42518  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_105\n        /* \"#utility.yul\":8587:8943   */\n      jump\n        /* \"NbaToddlers_flat.sol\":42457:42518  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_184:\n        /* \"NbaToddlers_flat.sol\":40616:40620  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":40225:40232  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":40639:40670  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"NbaToddlers_flat.sol\":42528:42586  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":42528:42586  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6888:6909   */\n      mstore\n        /* \"#utility.yul\":6945:6947   */\n      0x1c\n        /* \"#utility.yul\":6925:6943   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6918:6948   */\n      mstore\n        /* \"#utility.yul\":6984:7014   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":6964:6982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6957:7015   */\n      mstore\n        /* \"#utility.yul\":7032:7050   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":42528:42586  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_105\n        /* \"#utility.yul\":6704:7056   */\n      jump\n        /* \"NbaToddlers_flat.sol\":42528:42586  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_188:\n        /* \"NbaToddlers_flat.sol\":42597:42645  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      tag_191\n        /* \"NbaToddlers_flat.sol\":42626:42627  0 */\n      0x00\n        /* \"NbaToddlers_flat.sol\":42630:42632  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":42634:42641  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":42643:42644  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":42597:42617  _beforeTokenTransfer */\n      tag_192\n        /* \"NbaToddlers_flat.sol\":42597:42645  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      jump\t// in\n    tag_191:\n        /* \"NbaToddlers_flat.sol\":40616:40620  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":40225:40232  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":40225:40241  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":40639:40670  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"NbaToddlers_flat.sol\":42732:42790  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":42732:42790  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6888:6909   */\n      mstore\n        /* \"#utility.yul\":6945:6947   */\n      0x1c\n        /* \"#utility.yul\":6925:6943   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6918:6948   */\n      mstore\n        /* \"#utility.yul\":6984:7014   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":6964:6982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6957:7015   */\n      mstore\n        /* \"#utility.yul\":7032:7050   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":42732:42790  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_105\n        /* \"#utility.yul\":6704:7056   */\n      jump\n        /* \"NbaToddlers_flat.sol\":42732:42790  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_194:\n        /* \"NbaToddlers_flat.sol\":43132:43145  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":43132:43141  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":43132:43145  _balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":43132:43150  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"NbaToddlers_flat.sol\":43149:43150  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":43132:43150  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"NbaToddlers_flat.sol\":43171:43187  _owners[tokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"NbaToddlers_flat.sol\":43171:43178  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":43171:43187  _owners[tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"NbaToddlers_flat.sol\":43171:43192  _owners[tokenId] = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"NbaToddlers_flat.sol\":43208:43241  Transfer(address(0), to, tokenId) */\n      mload\n        /* \"NbaToddlers_flat.sol\":43179:43186  tokenId */\n      dup4\n      swap3\n        /* \"NbaToddlers_flat.sol\":43132:43145  _balances[to] */\n      swap2\n      swap1\n        /* \"NbaToddlers_flat.sol\":43208:43241  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"NbaToddlers_flat.sol\":43132:43145  _balances[to] */\n      dup3\n      swap1\n        /* \"NbaToddlers_flat.sol\":43208:43241  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"NbaToddlers_flat.sol\":37464:37617  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":40835:41096  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_128:\n        /* \"NbaToddlers_flat.sol\":40928:40932  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":40944:40957  address owner */\n      dup1\n        /* \"NbaToddlers_flat.sol\":40960:40983  ERC721.ownerOf(tokenId) */\n      tag_199\n        /* \"NbaToddlers_flat.sol\":40975:40982  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":40960:40974  ERC721.ownerOf */\n      tag_57\n        /* \"NbaToddlers_flat.sol\":40960:40983  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"NbaToddlers_flat.sol\":40944:40983  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":41012:41017  owner */\n      dup1\n        /* \"NbaToddlers_flat.sol\":41001:41017  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":41001:41008  spender */\n      dup5\n        /* \"NbaToddlers_flat.sol\":41001:41017  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":41001:41053  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_201\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":37780:37784  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":37803:37821  _operatorApprovals */\n      0x05\n        /* \"NbaToddlers_flat.sol\":37803:37828  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":37803:37838  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"NbaToddlers_flat.sol\":41021:41053  isApprovedForAll(owner, spender) */\n    tag_201:\n        /* \"NbaToddlers_flat.sol\":41001:41088  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_202\n      jumpi\n      pop\n        /* \"NbaToddlers_flat.sol\":41081:41088  spender */\n      dup4\n        /* \"NbaToddlers_flat.sol\":41057:41088  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":41057:41077  getApproved(tokenId) */\n      tag_203\n        /* \"NbaToddlers_flat.sol\":41069:41076  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":41057:41068  getApproved */\n      tag_35\n        /* \"NbaToddlers_flat.sol\":41057:41077  getApproved(tokenId) */\n      jump\t// in\n    tag_203:\n        /* \"NbaToddlers_flat.sol\":41057:41088  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":41001:41088  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_202:\n        /* \"NbaToddlers_flat.sol\":40993:41089  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"NbaToddlers_flat.sol\":40835:41096  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":44718:45951  function _transfer(... */\n    tag_133:\n        /* \"NbaToddlers_flat.sol\":44872:44876  from */\n      dup3\n        /* \"NbaToddlers_flat.sol\":44845:44876  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":44845:44868  ERC721.ownerOf(tokenId) */\n      tag_205\n        /* \"NbaToddlers_flat.sol\":44860:44867  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":44845:44859  ERC721.ownerOf */\n      tag_57\n        /* \"NbaToddlers_flat.sol\":44845:44868  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_205:\n        /* \"NbaToddlers_flat.sol\":44845:44876  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":44837:44918  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6500:6502   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":44837:44918  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6482:6503   */\n      mstore\n        /* \"#utility.yul\":6539:6541   */\n      0x25\n        /* \"#utility.yul\":6519:6537   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6512:6542   */\n      mstore\n        /* \"#utility.yul\":6578:6612   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":6558:6576   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6551:6613   */\n      mstore\n        /* \"#utility.yul\":6649:6656   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6629:6647   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6622:6657   */\n      mstore\n        /* \"#utility.yul\":6674:6693   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":44837:44918  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_105\n        /* \"#utility.yul\":6298:6699   */\n      jump\n        /* \"NbaToddlers_flat.sol\":44837:44918  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_206:\n        /* \"NbaToddlers_flat.sol\":44936:44952  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"NbaToddlers_flat.sol\":44928:44993  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7263:7265   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":44928:44993  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7245:7266   */\n      mstore\n        /* \"#utility.yul\":7302:7304   */\n      0x24\n        /* \"#utility.yul\":7282:7300   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7275:7305   */\n      mstore\n        /* \"#utility.yul\":7341:7375   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":7321:7339   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7314:7376   */\n      mstore\n        /* \"#utility.yul\":7412:7418   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7392:7410   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7385:7419   */\n      mstore\n        /* \"#utility.yul\":7436:7455   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":44928:44993  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_105\n        /* \"#utility.yul\":7061:7461   */\n      jump\n        /* \"NbaToddlers_flat.sol\":44928:44993  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_209:\n        /* \"NbaToddlers_flat.sol\":45004:45046  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_212\n        /* \"NbaToddlers_flat.sol\":45025:45029  from */\n      dup4\n        /* \"NbaToddlers_flat.sol\":45031:45033  to */\n      dup4\n        /* \"NbaToddlers_flat.sol\":45035:45042  tokenId */\n      dup4\n        /* \"NbaToddlers_flat.sol\":45044:45045  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":45004:45024  _beforeTokenTransfer */\n      tag_192\n        /* \"NbaToddlers_flat.sol\":45004:45046  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_212:\n        /* \"NbaToddlers_flat.sol\":45173:45177  from */\n      dup3\n        /* \"NbaToddlers_flat.sol\":45146:45177  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":45146:45169  ERC721.ownerOf(tokenId) */\n      tag_213\n        /* \"NbaToddlers_flat.sol\":45161:45168  tokenId */\n      dup3\n        /* \"NbaToddlers_flat.sol\":45146:45160  ERC721.ownerOf */\n      tag_57\n        /* \"NbaToddlers_flat.sol\":45146:45169  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_213:\n        /* \"NbaToddlers_flat.sol\":45146:45177  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NbaToddlers_flat.sol\":45138:45219  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6500:6502   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":45138:45219  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6482:6503   */\n      mstore\n        /* \"#utility.yul\":6539:6541   */\n      0x25\n        /* \"#utility.yul\":6519:6537   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6512:6542   */\n      mstore\n        /* \"#utility.yul\":6578:6612   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":6558:6576   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6551:6613   */\n      mstore\n        /* \"#utility.yul\":6649:6656   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6629:6647   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6622:6657   */\n      mstore\n        /* \"#utility.yul\":6674:6693   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":45138:45219  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_105\n        /* \"#utility.yul\":6298:6699   */\n      jump\n        /* \"NbaToddlers_flat.sol\":45138:45219  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_214:\n        /* \"NbaToddlers_flat.sol\":45288:45312  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":45288:45303  _tokenApprovals */\n      0x04\n        /* \"NbaToddlers_flat.sol\":45288:45312  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":45281:45312  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"NbaToddlers_flat.sol\":45756:45771  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"NbaToddlers_flat.sol\":45756:45765  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":45756:45771  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"NbaToddlers_flat.sol\":45756:45776  _balances[from] -= 1 */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      sstore\n        /* \"NbaToddlers_flat.sol\":45790:45803  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"NbaToddlers_flat.sol\":45790:45808  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"NbaToddlers_flat.sol\":45281:45312  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"NbaToddlers_flat.sol\":45790:45808  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"NbaToddlers_flat.sol\":45828:45844  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"NbaToddlers_flat.sol\":45828:45835  _owners */\n      0x02\n        /* \"NbaToddlers_flat.sol\":45828:45844  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"NbaToddlers_flat.sol\":45828:45849  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NbaToddlers_flat.sol\":45865:45892  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"NbaToddlers_flat.sol\":45304:45311  tokenId */\n      dup5\n      swap4\n        /* \"NbaToddlers_flat.sol\":45865:45892  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"NbaToddlers_flat.sol\":36833:37169  {... */\n      pop\n        /* \"NbaToddlers_flat.sol\":36763:37169  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":46370:46677  function _setApprovalForAll(... */\n    tag_155:\n        /* \"NbaToddlers_flat.sol\":46520:46528  operator */\n      dup2\n        /* \"NbaToddlers_flat.sol\":46511:46528  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NbaToddlers_flat.sol\":46511:46516  owner */\n      dup4\n        /* \"NbaToddlers_flat.sol\":46511:46528  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NbaToddlers_flat.sol\":46503:46558  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7668:7670   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":46503:46558  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7650:7671   */\n      mstore\n        /* \"#utility.yul\":7707:7709   */\n      0x19\n        /* \"#utility.yul\":7687:7705   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7680:7710   */\n      mstore\n        /* \"#utility.yul\":7746:7773   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":7726:7744   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7719:7774   */\n      mstore\n        /* \"#utility.yul\":7791:7809   */\n      0x64\n      add\n        /* \"NbaToddlers_flat.sol\":46503:46558  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_105\n        /* \"#utility.yul\":7466:7815   */\n      jump\n        /* \"NbaToddlers_flat.sol\":46503:46558  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_219:\n        /* \"NbaToddlers_flat.sol\":46568:46593  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":46568:46586  _operatorApprovals */\n      0x05\n        /* \"NbaToddlers_flat.sol\":46568:46593  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NbaToddlers_flat.sol\":46568:46603  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"NbaToddlers_flat.sol\":46568:46614  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NbaToddlers_flat.sol\":46629:46670  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":5189:5230   */\n      swap2\n      dup3\n      mstore\n        /* \"NbaToddlers_flat.sol\":46629:46670  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":5162:5180   */\n      add\n        /* \"NbaToddlers_flat.sol\":46629:46670  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NbaToddlers_flat.sol\":46370:46677  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":39719:40024  function _safeTransfer(... */\n    tag_162:\n        /* \"NbaToddlers_flat.sol\":39869:39897  _transfer(from, to, tokenId) */\n      tag_224\n        /* \"NbaToddlers_flat.sol\":39879:39883  from */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39885:39887  to */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39889:39896  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39869:39878  _transfer */\n      tag_133\n        /* \"NbaToddlers_flat.sol\":39869:39897  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_224:\n        /* \"NbaToddlers_flat.sol\":39915:39962  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_225\n        /* \"NbaToddlers_flat.sol\":39938:39942  from */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39944:39946  to */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39948:39955  tokenId */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39957:39961  data */\n      dup5\n        /* \"NbaToddlers_flat.sol\":39915:39937  _checkOnERC721Received */\n      tag_226\n        /* \"NbaToddlers_flat.sol\":39915:39962  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_225:\n        /* \"NbaToddlers_flat.sol\":39907:40017  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6081:6083   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":39907:40017  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6063:6084   */\n      mstore\n        /* \"#utility.yul\":6120:6122   */\n      0x32\n        /* \"#utility.yul\":6100:6118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6093:6123   */\n      mstore\n        /* \"#utility.yul\":6159:6193   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":6139:6157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6132:6194   */\n      mstore\n        /* \"#utility.yul\":6230:6250   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":6210:6228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6203:6251   */\n      mstore\n        /* \"#utility.yul\":6268:6287   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":39907:40017  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_105\n        /* \"#utility.yul\":5879:6293   */\n      jump\n        /* \"NbaToddlers_flat.sol\":50659:50806  function _baseURI() internal pure override returns (string memory) {... */\n    tag_166:\n        /* \"NbaToddlers_flat.sol\":50711:50724  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":50736:50799  return \"ipfs://QmeqDTHvUoKjiKvRCnvc3fX9b5qPQc1c399JF8sEW5RW4n/\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      data_87106076e8bce6de62544573c671674dc843d1e318d288926e15452e9a37f1d2\n      0x36\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":50659:50806  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":31670:32366  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_170:\n        /* \"NbaToddlers_flat.sol\":31726:31739  string memory */\n      0x60\n        /* \"NbaToddlers_flat.sol\":31775:31789  uint256 length */\n      0x00\n        /* \"NbaToddlers_flat.sol\":31792:31809  Math.log10(value) */\n      tag_232\n        /* \"NbaToddlers_flat.sol\":31803:31808  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":31792:31802  Math.log10 */\n      tag_233\n        /* \"NbaToddlers_flat.sol\":31792:31809  Math.log10(value) */\n      jump\t// in\n    tag_232:\n        /* \"NbaToddlers_flat.sol\":31812:31813  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":31792:31813  Math.log10(value) + 1 */\n      add\n        /* \"NbaToddlers_flat.sol\":31775:31813  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":31827:31847  string memory buffer */\n      0x00\n        /* \"NbaToddlers_flat.sol\":31861:31867  length */\n      dup2\n        /* \"NbaToddlers_flat.sol\":31850:31868  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_235\n      jumpi\n      tag_235\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_237:\n      pop\n        /* \"NbaToddlers_flat.sol\":31827:31868  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":31988:32016  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"NbaToddlers_flat.sol\":32004:32006  32 */\n      0x20\n        /* \"NbaToddlers_flat.sol\":31988:32016  add(buffer, add(32, length)) */\n      add\n        /* \"NbaToddlers_flat.sol\":32043:32323  while (true) {... */\n    tag_238:\n        /* \"NbaToddlers_flat.sol\":32074:32079  ptr-- */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n        /* \"NbaToddlers_flat.sol\":32213:32221  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":32208:32210  10 */\n      0x0a\n        /* \"NbaToddlers_flat.sol\":32197:32211  mod(value, 10) */\n      dup7\n      mod\n        /* \"NbaToddlers_flat.sol\":32192:32222  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"NbaToddlers_flat.sol\":32074:32079  ptr-- */\n      dup2\n        /* \"NbaToddlers_flat.sol\":32179:32223  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"NbaToddlers_flat.sol\":32267:32269  10 */\n      0x0a\n        /* \"NbaToddlers_flat.sol\":32258:32269  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"NbaToddlers_flat.sol\":32291:32301  value == 0 */\n      dup5\n        /* \"NbaToddlers_flat.sol\":32287:32308  if (value == 0) break */\n      tag_243\n      jumpi\n        /* \"NbaToddlers_flat.sol\":32303:32308  break */\n      jump(tag_239)\n        /* \"NbaToddlers_flat.sol\":32287:32308  if (value == 0) break */\n    tag_243:\n        /* \"NbaToddlers_flat.sol\":32043:32323  while (true) {... */\n      jump(tag_238)\n    tag_239:\n      pop\n        /* \"NbaToddlers_flat.sol\":32343:32349  buffer */\n      swap4\n        /* \"NbaToddlers_flat.sol\":31670:32366  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":48993:49389  function _beforeTokenTransfer(... */\n    tag_192:\n        /* \"NbaToddlers_flat.sol\":49177:49178  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":49165:49174  batchSize */\n      dup2\n        /* \"NbaToddlers_flat.sol\":49165:49178  batchSize > 1 */\n      gt\n        /* \"NbaToddlers_flat.sol\":49161:49383  if (batchSize > 1) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"NbaToddlers_flat.sol\":49198:49216  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      iszero\n        /* \"NbaToddlers_flat.sol\":49194:49279  if (from != address(0)) {... */\n      tag_248\n      jumpi\n        /* \"NbaToddlers_flat.sol\":49236:49251  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":49236:49245  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":49236:49251  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NbaToddlers_flat.sol\":49236:49264  _balances[from] -= batchSize */\n      dup1\n      sload\n        /* \"NbaToddlers_flat.sol\":49255:49264  batchSize */\n      dup4\n      swap3\n        /* \"NbaToddlers_flat.sol\":49236:49251  _balances[from] */\n      swap1\n        /* \"NbaToddlers_flat.sol\":49236:49264  _balances[from] -= batchSize */\n      tag_249\n      swap1\n        /* \"NbaToddlers_flat.sol\":49255:49264  batchSize */\n      dup5\n      swap1\n        /* \"NbaToddlers_flat.sol\":49236:49264  _balances[from] -= batchSize */\n      tag_250\n      jump\t// in\n    tag_249:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"NbaToddlers_flat.sol\":49194:49279  if (from != address(0)) {... */\n    tag_248:\n        /* \"NbaToddlers_flat.sol\":49296:49312  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      iszero\n        /* \"NbaToddlers_flat.sol\":49292:49373  if (to != address(0)) {... */\n      tag_161\n      jumpi\n        /* \"NbaToddlers_flat.sol\":49332:49345  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":49332:49341  _balances */\n      0x03\n        /* \"NbaToddlers_flat.sol\":49332:49345  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NbaToddlers_flat.sol\":49332:49358  _balances[to] += batchSize */\n      dup1\n      sload\n        /* \"NbaToddlers_flat.sol\":49349:49358  batchSize */\n      dup4\n      swap3\n        /* \"NbaToddlers_flat.sol\":49332:49345  _balances[to] */\n      swap1\n        /* \"NbaToddlers_flat.sol\":49332:49358  _balances[to] += batchSize */\n      tag_252\n      swap1\n        /* \"NbaToddlers_flat.sol\":49349:49358  batchSize */\n      dup5\n      swap1\n        /* \"NbaToddlers_flat.sol\":49332:49358  _balances[to] += batchSize */\n      tag_253\n      jump\t// in\n    tag_252:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"NbaToddlers_flat.sol\":48993:49389  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":47446:48277  function _checkOnERC721Received(... */\n    tag_226:\n        /* \"NbaToddlers_flat.sol\":47595:47599  bool */\n      0x00\n        /* \"NbaToddlers_flat.sol\":47615:47628  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"NbaToddlers_flat.sol\":2384:2403  account.code.length */\n      extcodesize\n        /* \"NbaToddlers_flat.sol\":2384:2407  account.code.length > 0 */\n      iszero\n        /* \"NbaToddlers_flat.sol\":47611:48271  if (to.isContract()) {... */\n      tag_258\n      jumpi\n        /* \"NbaToddlers_flat.sol\":47650:47721  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"NbaToddlers_flat.sol\":47650:47686  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"NbaToddlers_flat.sol\":47650:47721  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_260\n      swap1\n        /* \"NbaToddlers_flat.sol\":772:782  msg.sender */\n      caller\n      swap1\n        /* \"NbaToddlers_flat.sol\":47701:47705  from */\n      dup10\n      swap1\n        /* \"NbaToddlers_flat.sol\":47707:47714  tokenId */\n      dup9\n      swap1\n        /* \"NbaToddlers_flat.sol\":47716:47720  data */\n      dup9\n      swap1\n        /* \"NbaToddlers_flat.sol\":47650:47721  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_261\n      jump\t// in\n    tag_260:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_263\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_264\n      swap2\n      dup2\n      add\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      0x01\n    tag_263:\n        /* \"NbaToddlers_flat.sol\":47646:48219  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_266\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_271\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_270)\n    tag_271:\n      0x60\n      swap2\n      pop\n    tag_270:\n      pop\n        /* \"NbaToddlers_flat.sol\":47888:47901  reason.length */\n      dup1\n      mload\n        /* \"NbaToddlers_flat.sol\":47884:48205  if (reason.length == 0) {... */\n      tag_272\n      jumpi\n        /* \"NbaToddlers_flat.sol\":47930:47990  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6081:6083   */\n      0x20\n        /* \"NbaToddlers_flat.sol\":47930:47990  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6063:6084   */\n      mstore\n        /* \"#utility.yul\":6120:6122   */\n      0x32\n        /* \"#utility.yul\":6100:6118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6093:6123   */\n      mstore\n        /* \"#utility.yul\":6159:6193   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":6139:6157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6132:6194   */\n      mstore\n        /* \"#utility.yul\":6230:6250   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":6210:6228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6203:6251   */\n      mstore\n        /* \"#utility.yul\":6268:6287   */\n      0x84\n      add\n        /* \"NbaToddlers_flat.sol\":47930:47990  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_105\n        /* \"#utility.yul\":5879:6293   */\n      jump\n        /* \"NbaToddlers_flat.sol\":47884:48205  if (reason.length == 0) {... */\n    tag_272:\n        /* \"NbaToddlers_flat.sol\":48157:48163  reason */\n      dup1\n        /* \"NbaToddlers_flat.sol\":48151:48164  mload(reason) */\n      mload\n        /* \"NbaToddlers_flat.sol\":48142:48148  reason */\n      dup2\n        /* \"NbaToddlers_flat.sol\":48138:48140  32 */\n      0x20\n        /* \"NbaToddlers_flat.sol\":48134:48149  add(32, reason) */\n      add\n        /* \"NbaToddlers_flat.sol\":48127:48165  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"NbaToddlers_flat.sol\":47646:48219  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_266:\n        /* \"NbaToddlers_flat.sol\":47771:47822  retval == IERC721Receiver.onERC721Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"NbaToddlers_flat.sol\":47781:47822  IERC721Receiver.onERC721Received.selector */\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n        /* \"NbaToddlers_flat.sol\":47771:47822  retval == IERC721Receiver.onERC721Received.selector */\n      eq\n      swap1\n      pop\n        /* \"NbaToddlers_flat.sol\":47764:47822  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_202)\n        /* \"NbaToddlers_flat.sol\":47611:48271  if (to.isContract()) {... */\n    tag_258:\n      pop\n        /* \"NbaToddlers_flat.sol\":48256:48260  true */\n      0x01\n        /* \"NbaToddlers_flat.sol\":47446:48277  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NbaToddlers_flat.sol\":28643:29533  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_233:\n        /* \"NbaToddlers_flat.sol\":28696:28703  uint256 */\n      0x00\n      dup1\n        /* \"NbaToddlers_flat.sol\":28780:28786  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"NbaToddlers_flat.sol\":28771:28786  value >= 10**64 */\n      dup4\n      lt\n        /* \"NbaToddlers_flat.sol\":28767:28866  if (value >= 10**64) {... */\n      tag_278\n      jumpi\n        /* \"NbaToddlers_flat.sol\":28815:28821  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"NbaToddlers_flat.sol\":28806:28821  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":28849:28851  64 */\n      0x40\n        /* \"NbaToddlers_flat.sol\":28839:28851  result += 64 */\n      add\n        /* \"NbaToddlers_flat.sol\":28767:28866  if (value >= 10**64) {... */\n    tag_278:\n        /* \"NbaToddlers_flat.sol\":28892:28898  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"NbaToddlers_flat.sol\":28883:28888  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":28883:28898  value >= 10**32 */\n      lt\n        /* \"NbaToddlers_flat.sol\":28879:28978  if (value >= 10**32) {... */\n      tag_281\n      jumpi\n        /* \"NbaToddlers_flat.sol\":28927:28933  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"NbaToddlers_flat.sol\":28918:28933  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":28961:28963  32 */\n      0x20\n        /* \"NbaToddlers_flat.sol\":28951:28963  result += 32 */\n      add\n        /* \"NbaToddlers_flat.sol\":28879:28978  if (value >= 10**32) {... */\n    tag_281:\n        /* \"NbaToddlers_flat.sol\":29004:29010  10**16 */\n      0x2386f26fc10000\n        /* \"NbaToddlers_flat.sol\":28995:29000  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":28995:29010  value >= 10**16 */\n      lt\n        /* \"NbaToddlers_flat.sol\":28991:29090  if (value >= 10**16) {... */\n      tag_284\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29039:29045  10**16 */\n      0x2386f26fc10000\n        /* \"NbaToddlers_flat.sol\":29030:29045  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":29073:29075  16 */\n      0x10\n        /* \"NbaToddlers_flat.sol\":29063:29075  result += 16 */\n      add\n        /* \"NbaToddlers_flat.sol\":28991:29090  if (value >= 10**16) {... */\n    tag_284:\n        /* \"NbaToddlers_flat.sol\":29116:29121  10**8 */\n      0x05f5e100\n        /* \"NbaToddlers_flat.sol\":29107:29112  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":29107:29121  value >= 10**8 */\n      lt\n        /* \"NbaToddlers_flat.sol\":29103:29199  if (value >= 10**8) {... */\n      tag_287\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29150:29155  10**8 */\n      0x05f5e100\n        /* \"NbaToddlers_flat.sol\":29141:29155  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":29183:29184  8 */\n      0x08\n        /* \"NbaToddlers_flat.sol\":29173:29184  result += 8 */\n      add\n        /* \"NbaToddlers_flat.sol\":29103:29199  if (value >= 10**8) {... */\n    tag_287:\n        /* \"NbaToddlers_flat.sol\":29225:29230  10**4 */\n      0x2710\n        /* \"NbaToddlers_flat.sol\":29216:29221  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":29216:29230  value >= 10**4 */\n      lt\n        /* \"NbaToddlers_flat.sol\":29212:29308  if (value >= 10**4) {... */\n      tag_290\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29259:29264  10**4 */\n      0x2710\n        /* \"NbaToddlers_flat.sol\":29250:29264  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":29292:29293  4 */\n      0x04\n        /* \"NbaToddlers_flat.sol\":29282:29293  result += 4 */\n      add\n        /* \"NbaToddlers_flat.sol\":29212:29308  if (value >= 10**4) {... */\n    tag_290:\n        /* \"NbaToddlers_flat.sol\":29334:29339  10**2 */\n      0x64\n        /* \"NbaToddlers_flat.sol\":29325:29330  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":29325:29339  value >= 10**2 */\n      lt\n        /* \"NbaToddlers_flat.sol\":29321:29417  if (value >= 10**2) {... */\n      tag_293\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29368:29373  10**2 */\n      0x64\n        /* \"NbaToddlers_flat.sol\":29359:29373  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"NbaToddlers_flat.sol\":29401:29402  2 */\n      0x02\n        /* \"NbaToddlers_flat.sol\":29391:29402  result += 2 */\n      add\n        /* \"NbaToddlers_flat.sol\":29321:29417  if (value >= 10**2) {... */\n    tag_293:\n        /* \"NbaToddlers_flat.sol\":29443:29448  10**1 */\n      0x0a\n        /* \"NbaToddlers_flat.sol\":29434:29439  value */\n      dup4\n        /* \"NbaToddlers_flat.sol\":29434:29448  value >= 10**1 */\n      lt\n        /* \"NbaToddlers_flat.sol\":29430:29494  if (value >= 10**1) {... */\n      tag_90\n      jumpi\n        /* \"NbaToddlers_flat.sol\":29478:29479  1 */\n      0x01\n        /* \"NbaToddlers_flat.sol\":29468:29479  result += 1 */\n      add\n        /* \"NbaToddlers_flat.sol\":29520:29526  result */\n      swap3\n        /* \"NbaToddlers_flat.sol\":28643:29533  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_299:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_301:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_61:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_303:\n        /* \"#utility.yul\":366:395   */\n      tag_168\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":406:666   */\n    tag_84:\n        /* \"#utility.yul\":474:480   */\n      0x00\n        /* \"#utility.yul\":482:488   */\n      dup1\n        /* \"#utility.yul\":535:537   */\n      0x40\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":514:521   */\n      dup6\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:555   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":503:555   */\n    tag_306:\n        /* \"#utility.yul\":574:603   */\n      tag_307\n        /* \"#utility.yul\":593:602   */\n      dup4\n        /* \"#utility.yul\":574:603   */\n      tag_299\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":564:603   */\n      swap2\n      pop\n        /* \"#utility.yul\":622:660   */\n      tag_308\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":645:654   */\n      dup5\n        /* \"#utility.yul\":641:659   */\n      add\n        /* \"#utility.yul\":622:660   */\n      tag_299\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":612:660   */\n      swap1\n      pop\n        /* \"#utility.yul\":406:666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":671:999   */\n    tag_46:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x60\n        /* \"#utility.yul\":805:814   */\n      dup5\n        /* \"#utility.yul\":796:803   */\n      dup7\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:837   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":785:837   */\n    tag_310:\n        /* \"#utility.yul\":856:885   */\n      tag_311\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":856:885   */\n      tag_299\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":846:885   */\n      swap3\n      pop\n        /* \"#utility.yul\":904:942   */\n      tag_312\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup6\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":904:942   */\n      tag_299\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":894:942   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:991   */\n      0x40\n        /* \"#utility.yul\":978:987   */\n      dup5\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n        /* \"#utility.yul\":951:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":671:999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1004:2201   */\n    tag_76:\n        /* \"#utility.yul\":1099:1105   */\n      0x00\n        /* \"#utility.yul\":1107:1113   */\n      dup1\n        /* \"#utility.yul\":1115:1121   */\n      0x00\n        /* \"#utility.yul\":1123:1129   */\n      dup1\n        /* \"#utility.yul\":1176:1179   */\n      0x80\n        /* \"#utility.yul\":1164:1173   */\n      dup6\n        /* \"#utility.yul\":1155:1162   */\n      dup8\n        /* \"#utility.yul\":1151:1174   */\n      sub\n        /* \"#utility.yul\":1147:1180   */\n      slt\n        /* \"#utility.yul\":1144:1197   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":1193:1194   */\n      0x00\n        /* \"#utility.yul\":1190:1191   */\n      dup1\n        /* \"#utility.yul\":1183:1195   */\n      revert\n        /* \"#utility.yul\":1144:1197   */\n    tag_314:\n        /* \"#utility.yul\":1216:1245   */\n      tag_315\n        /* \"#utility.yul\":1235:1244   */\n      dup6\n        /* \"#utility.yul\":1216:1245   */\n      tag_299\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1206:1245   */\n      swap4\n      pop\n        /* \"#utility.yul\":1264:1302   */\n      tag_316\n        /* \"#utility.yul\":1298:1300   */\n      0x20\n        /* \"#utility.yul\":1287:1296   */\n      dup7\n        /* \"#utility.yul\":1283:1301   */\n      add\n        /* \"#utility.yul\":1264:1302   */\n      tag_299\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1254:1302   */\n      swap3\n      pop\n        /* \"#utility.yul\":1349:1351   */\n      0x40\n        /* \"#utility.yul\":1338:1347   */\n      dup6\n        /* \"#utility.yul\":1334:1352   */\n      add\n        /* \"#utility.yul\":1321:1353   */\n      calldataload\n        /* \"#utility.yul\":1311:1353   */\n      swap2\n      pop\n        /* \"#utility.yul\":1404:1406   */\n      0x60\n        /* \"#utility.yul\":1393:1402   */\n      dup6\n        /* \"#utility.yul\":1389:1407   */\n      add\n        /* \"#utility.yul\":1376:1408   */\n      calldataload\n        /* \"#utility.yul\":1427:1445   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1468:1470   */\n      dup1\n        /* \"#utility.yul\":1460:1466   */\n      dup3\n        /* \"#utility.yul\":1457:1471   */\n      gt\n        /* \"#utility.yul\":1454:1488   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":1484:1485   */\n      0x00\n        /* \"#utility.yul\":1481:1482   */\n      dup1\n        /* \"#utility.yul\":1474:1486   */\n      revert\n        /* \"#utility.yul\":1454:1488   */\n    tag_317:\n        /* \"#utility.yul\":1522:1528   */\n      dup2\n        /* \"#utility.yul\":1511:1520   */\n      dup8\n        /* \"#utility.yul\":1507:1529   */\n      add\n        /* \"#utility.yul\":1497:1529   */\n      swap2\n      pop\n        /* \"#utility.yul\":1567:1574   */\n      dup8\n        /* \"#utility.yul\":1560:1564   */\n      0x1f\n        /* \"#utility.yul\":1556:1558   */\n      dup4\n        /* \"#utility.yul\":1552:1565   */\n      add\n        /* \"#utility.yul\":1548:1575   */\n      slt\n        /* \"#utility.yul\":1538:1593   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1538:1593   */\n    tag_318:\n        /* \"#utility.yul\":1625:1627   */\n      dup2\n        /* \"#utility.yul\":1612:1628   */\n      calldataload\n        /* \"#utility.yul\":1647:1649   */\n      dup2\n        /* \"#utility.yul\":1643:1645   */\n      dup2\n        /* \"#utility.yul\":1640:1650   */\n      gt\n        /* \"#utility.yul\":1637:1673   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":1653:1671   */\n      tag_320\n      tag_236\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1787:1789   */\n      0x40\n        /* \"#utility.yul\":1781:1790   */\n      mload\n        /* \"#utility.yul\":1849:1853   */\n      0x1f\n        /* \"#utility.yul\":1841:1854   */\n      dup3\n      add\n        /* \"#utility.yul\":1692:1758   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1837:1859   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1861:1863   */\n      0x3f\n        /* \"#utility.yul\":1833:1864   */\n      add\n        /* \"#utility.yul\":1829:1869   */\n      and\n        /* \"#utility.yul\":1817:1870   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1885:1903   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1905:1927   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1882:1928   */\n      or\n        /* \"#utility.yul\":1879:1951   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":1931:1949   */\n      tag_322\n      tag_236\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1971:1981   */\n      dup2\n        /* \"#utility.yul\":1967:1969   */\n      0x40\n        /* \"#utility.yul\":1960:1982   */\n      mstore\n        /* \"#utility.yul\":2006:2008   */\n      dup3\n        /* \"#utility.yul\":1998:2004   */\n      dup2\n        /* \"#utility.yul\":1991:2009   */\n      mstore\n        /* \"#utility.yul\":2046:2053   */\n      dup11\n        /* \"#utility.yul\":2041:2043   */\n      0x20\n        /* \"#utility.yul\":2036:2038   */\n      dup5\n        /* \"#utility.yul\":2032:2034   */\n      dup8\n        /* \"#utility.yul\":2028:2039   */\n      add\n        /* \"#utility.yul\":2024:2044   */\n      add\n        /* \"#utility.yul\":2021:2054   */\n      gt\n        /* \"#utility.yul\":2018:2071   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2067:2068   */\n      0x00\n        /* \"#utility.yul\":2064:2065   */\n      dup1\n        /* \"#utility.yul\":2057:2069   */\n      revert\n        /* \"#utility.yul\":2018:2071   */\n    tag_323:\n        /* \"#utility.yul\":2123:2125   */\n      dup3\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2114:2116   */\n      dup7\n        /* \"#utility.yul\":2110:2121   */\n      add\n        /* \"#utility.yul\":2105:2107   */\n      0x20\n        /* \"#utility.yul\":2097:2103   */\n      dup4\n        /* \"#utility.yul\":2093:2108   */\n      add\n        /* \"#utility.yul\":2080:2126   */\n      calldatacopy\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2158:2160   */\n      dup5\n        /* \"#utility.yul\":2150:2156   */\n      dup4\n        /* \"#utility.yul\":2146:2161   */\n      add\n        /* \"#utility.yul\":2142:2166   */\n      add\n        /* \"#utility.yul\":2135:2170   */\n      mstore\n        /* \"#utility.yul\":2189:2195   */\n      dup1\n        /* \"#utility.yul\":2179:2195   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1004:2201   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2553   */\n    tag_72:\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2279:2285   */\n      dup1\n        /* \"#utility.yul\":2332:2334   */\n      0x40\n        /* \"#utility.yul\":2320:2329   */\n      dup4\n        /* \"#utility.yul\":2311:2318   */\n      dup6\n        /* \"#utility.yul\":2307:2330   */\n      sub\n        /* \"#utility.yul\":2303:2335   */\n      slt\n        /* \"#utility.yul\":2300:2352   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2345:2346   */\n      dup1\n        /* \"#utility.yul\":2338:2350   */\n      revert\n        /* \"#utility.yul\":2300:2352   */\n    tag_325:\n        /* \"#utility.yul\":2371:2400   */\n      tag_326\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2371:2400   */\n      tag_299\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2361:2400   */\n      swap2\n      pop\n        /* \"#utility.yul\":2450:2452   */\n      0x20\n        /* \"#utility.yul\":2439:2448   */\n      dup4\n        /* \"#utility.yul\":2435:2453   */\n      add\n        /* \"#utility.yul\":2422:2454   */\n      calldataload\n        /* \"#utility.yul\":2497:2502   */\n      dup1\n        /* \"#utility.yul\":2490:2503   */\n      iszero\n        /* \"#utility.yul\":2483:2504   */\n      iszero\n        /* \"#utility.yul\":2476:2481   */\n      dup2\n        /* \"#utility.yul\":2473:2505   */\n      eq\n        /* \"#utility.yul\":2463:2523   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2519:2520   */\n      0x00\n        /* \"#utility.yul\":2516:2517   */\n      dup1\n        /* \"#utility.yul\":2509:2521   */\n      revert\n        /* \"#utility.yul\":2463:2523   */\n    tag_327:\n        /* \"#utility.yul\":2542:2547   */\n      dup1\n        /* \"#utility.yul\":2532:2547   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2206:2553   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2558:2812   */\n    tag_40:\n        /* \"#utility.yul\":2626:2632   */\n      0x00\n        /* \"#utility.yul\":2634:2640   */\n      dup1\n        /* \"#utility.yul\":2687:2689   */\n      0x40\n        /* \"#utility.yul\":2675:2684   */\n      dup4\n        /* \"#utility.yul\":2666:2673   */\n      dup6\n        /* \"#utility.yul\":2662:2685   */\n      sub\n        /* \"#utility.yul\":2658:2690   */\n      slt\n        /* \"#utility.yul\":2655:2707   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2703:2704   */\n      0x00\n        /* \"#utility.yul\":2700:2701   */\n      dup1\n        /* \"#utility.yul\":2693:2705   */\n      revert\n        /* \"#utility.yul\":2655:2707   */\n    tag_329:\n        /* \"#utility.yul\":2726:2755   */\n      tag_330\n        /* \"#utility.yul\":2745:2754   */\n      dup4\n        /* \"#utility.yul\":2726:2755   */\n      tag_299\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2716:2755   */\n      swap5\n        /* \"#utility.yul\":2802:2804   */\n      0x20\n        /* \"#utility.yul\":2787:2805   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2774:2806   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2558:2812   */\n      jump\t// out\n        /* \"#utility.yul\":2817:3062   */\n    tag_24:\n        /* \"#utility.yul\":2875:2881   */\n      0x00\n        /* \"#utility.yul\":2928:2930   */\n      0x20\n        /* \"#utility.yul\":2916:2925   */\n      dup3\n        /* \"#utility.yul\":2907:2914   */\n      dup5\n        /* \"#utility.yul\":2903:2926   */\n      sub\n        /* \"#utility.yul\":2899:2931   */\n      slt\n        /* \"#utility.yul\":2896:2948   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2944:2945   */\n      0x00\n        /* \"#utility.yul\":2941:2942   */\n      dup1\n        /* \"#utility.yul\":2934:2946   */\n      revert\n        /* \"#utility.yul\":2896:2948   */\n    tag_332:\n        /* \"#utility.yul\":2983:2992   */\n      dup2\n        /* \"#utility.yul\":2970:2993   */\n      calldataload\n        /* \"#utility.yul\":3002:3032   */\n      tag_168\n        /* \"#utility.yul\":3026:3031   */\n      dup2\n        /* \"#utility.yul\":3002:3032   */\n      tag_334\n      jump\t// in\n        /* \"#utility.yul\":3067:3316   */\n    tag_265:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3189:3191   */\n      0x20\n        /* \"#utility.yul\":3177:3186   */\n      dup3\n        /* \"#utility.yul\":3168:3175   */\n      dup5\n        /* \"#utility.yul\":3164:3187   */\n      sub\n        /* \"#utility.yul\":3160:3192   */\n      slt\n        /* \"#utility.yul\":3157:3209   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":3205:3206   */\n      0x00\n        /* \"#utility.yul\":3202:3203   */\n      dup1\n        /* \"#utility.yul\":3195:3207   */\n      revert\n        /* \"#utility.yul\":3157:3209   */\n    tag_336:\n        /* \"#utility.yul\":3237:3246   */\n      dup2\n        /* \"#utility.yul\":3231:3247   */\n      mload\n        /* \"#utility.yul\":3256:3286   */\n      tag_168\n        /* \"#utility.yul\":3280:3285   */\n      dup2\n        /* \"#utility.yul\":3256:3286   */\n      tag_334\n      jump\t// in\n        /* \"#utility.yul\":3321:3501   */\n    tag_34:\n        /* \"#utility.yul\":3380:3386   */\n      0x00\n        /* \"#utility.yul\":3433:3435   */\n      0x20\n        /* \"#utility.yul\":3421:3430   */\n      dup3\n        /* \"#utility.yul\":3412:3419   */\n      dup5\n        /* \"#utility.yul\":3408:3431   */\n      sub\n        /* \"#utility.yul\":3404:3436   */\n      slt\n        /* \"#utility.yul\":3401:3453   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3449:3450   */\n      0x00\n        /* \"#utility.yul\":3446:3447   */\n      dup1\n        /* \"#utility.yul\":3439:3451   */\n      revert\n        /* \"#utility.yul\":3401:3453   */\n    tag_339:\n      pop\n        /* \"#utility.yul\":3472:3495   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3321:3501   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3506:3822   */\n    tag_340:\n        /* \"#utility.yul\":3547:3550   */\n      0x00\n        /* \"#utility.yul\":3585:3590   */\n      dup2\n        /* \"#utility.yul\":3579:3591   */\n      mload\n        /* \"#utility.yul\":3612:3618   */\n      dup1\n        /* \"#utility.yul\":3607:3610   */\n      dup5\n        /* \"#utility.yul\":3600:3619   */\n      mstore\n        /* \"#utility.yul\":3628:3691   */\n      tag_342\n        /* \"#utility.yul\":3684:3690   */\n      dup2\n        /* \"#utility.yul\":3677:3681   */\n      0x20\n        /* \"#utility.yul\":3672:3675   */\n      dup7\n        /* \"#utility.yul\":3668:3682   */\n      add\n        /* \"#utility.yul\":3661:3665   */\n      0x20\n        /* \"#utility.yul\":3654:3659   */\n      dup7\n        /* \"#utility.yul\":3650:3666   */\n      add\n        /* \"#utility.yul\":3628:3691   */\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3736:3738   */\n      0x1f\n        /* \"#utility.yul\":3724:3739   */\n      add\n        /* \"#utility.yul\":3741:3807   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":3720:3808   */\n      and\n        /* \"#utility.yul\":3711:3809   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3707:3816   */\n      add\n      swap3\n        /* \"#utility.yul\":3506:3822   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3827:4297   */\n    tag_172:\n        /* \"#utility.yul\":4006:4009   */\n      0x00\n        /* \"#utility.yul\":4044:4050   */\n      dup4\n        /* \"#utility.yul\":4038:4051   */\n      mload\n        /* \"#utility.yul\":4060:4113   */\n      tag_345\n        /* \"#utility.yul\":4106:4112   */\n      dup2\n        /* \"#utility.yul\":4101:4104   */\n      dup5\n        /* \"#utility.yul\":4094:4098   */\n      0x20\n        /* \"#utility.yul\":4086:4092   */\n      dup9\n        /* \"#utility.yul\":4082:4099   */\n      add\n        /* \"#utility.yul\":4060:4113   */\n      tag_343\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4176:4189   */\n      dup4\n      mload\n        /* \"#utility.yul\":4135:4151   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4198:4255   */\n      tag_346\n        /* \"#utility.yul\":4176:4189   */\n      dup2\n        /* \"#utility.yul\":4135:4151   */\n      dup4\n        /* \"#utility.yul\":4232:4236   */\n      0x20\n        /* \"#utility.yul\":4220:4237   */\n      dup9\n      add\n        /* \"#utility.yul\":4198:4255   */\n      tag_343\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4271:4291   */\n      add\n      swap5\n        /* \"#utility.yul\":3827:4297   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4533:5044   */\n    tag_261:\n        /* \"#utility.yul\":4727:4731   */\n      0x00\n        /* \"#utility.yul\":4756:4798   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4837:4839   */\n      dup1\n        /* \"#utility.yul\":4829:4835   */\n      dup8\n        /* \"#utility.yul\":4825:4840   */\n      and\n        /* \"#utility.yul\":4814:4823   */\n      dup4\n        /* \"#utility.yul\":4807:4841   */\n      mstore\n        /* \"#utility.yul\":4889:4891   */\n      dup1\n        /* \"#utility.yul\":4881:4887   */\n      dup7\n        /* \"#utility.yul\":4877:4892   */\n      and\n        /* \"#utility.yul\":4872:4874   */\n      0x20\n        /* \"#utility.yul\":4861:4870   */\n      dup5\n        /* \"#utility.yul\":4857:4875   */\n      add\n        /* \"#utility.yul\":4850:4893   */\n      mstore\n      pop\n        /* \"#utility.yul\":4929:4935   */\n      dup4\n        /* \"#utility.yul\":4924:4926   */\n      0x40\n        /* \"#utility.yul\":4913:4922   */\n      dup4\n        /* \"#utility.yul\":4909:4927   */\n      add\n        /* \"#utility.yul\":4902:4936   */\n      mstore\n        /* \"#utility.yul\":4972:4975   */\n      0x80\n        /* \"#utility.yul\":4967:4969   */\n      0x60\n        /* \"#utility.yul\":4956:4965   */\n      dup4\n        /* \"#utility.yul\":4952:4970   */\n      add\n        /* \"#utility.yul\":4945:4976   */\n      mstore\n        /* \"#utility.yul\":4993:5038   */\n      tag_349\n        /* \"#utility.yul\":5033:5036   */\n      0x80\n        /* \"#utility.yul\":5022:5031   */\n      dup4\n        /* \"#utility.yul\":5018:5037   */\n      add\n        /* \"#utility.yul\":5010:5016   */\n      dup5\n        /* \"#utility.yul\":4993:5038   */\n      tag_340\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4985:5038   */\n      swap7\n        /* \"#utility.yul\":4533:5044   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5241:5460   */\n    tag_31:\n        /* \"#utility.yul\":5390:5392   */\n      0x20\n        /* \"#utility.yul\":5379:5388   */\n      dup2\n        /* \"#utility.yul\":5372:5393   */\n      mstore\n        /* \"#utility.yul\":5353:5357   */\n      0x00\n        /* \"#utility.yul\":5410:5454   */\n      tag_168\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup4\n        /* \"#utility.yul\":5435:5453   */\n      add\n        /* \"#utility.yul\":5427:5433   */\n      dup5\n        /* \"#utility.yul\":5410:5454   */\n      tag_340\n      jump\t// in\n        /* \"#utility.yul\":10315:10443   */\n    tag_253:\n        /* \"#utility.yul\":10355:10358   */\n      0x00\n        /* \"#utility.yul\":10386:10387   */\n      dup3\n        /* \"#utility.yul\":10382:10388   */\n      not\n        /* \"#utility.yul\":10379:10380   */\n      dup3\n        /* \"#utility.yul\":10376:10389   */\n      gt\n        /* \"#utility.yul\":10373:10412   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":10392:10410   */\n      tag_368\n      tag_369\n      jump\t// in\n    tag_368:\n      pop\n        /* \"#utility.yul\":10428:10437   */\n      add\n      swap1\n        /* \"#utility.yul\":10315:10443   */\n      jump\t// out\n        /* \"#utility.yul\":10448:10573   */\n    tag_250:\n        /* \"#utility.yul\":10488:10492   */\n      0x00\n        /* \"#utility.yul\":10516:10517   */\n      dup3\n        /* \"#utility.yul\":10513:10514   */\n      dup3\n        /* \"#utility.yul\":10510:10518   */\n      lt\n        /* \"#utility.yul\":10507:10541   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":10521:10539   */\n      tag_372\n      tag_369\n      jump\t// in\n    tag_372:\n      pop\n        /* \"#utility.yul\":10558:10567   */\n      sub\n      swap1\n        /* \"#utility.yul\":10448:10573   */\n      jump\t// out\n        /* \"#utility.yul\":10578:10836   */\n    tag_343:\n        /* \"#utility.yul\":10650:10651   */\n      0x00\n        /* \"#utility.yul\":10660:10773   */\n    tag_374:\n        /* \"#utility.yul\":10674:10680   */\n      dup4\n        /* \"#utility.yul\":10671:10672   */\n      dup2\n        /* \"#utility.yul\":10668:10681   */\n      lt\n        /* \"#utility.yul\":10660:10773   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":10750:10761   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10744:10762   */\n      mload\n        /* \"#utility.yul\":10731:10742   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10724:10763   */\n      mstore\n        /* \"#utility.yul\":10696:10698   */\n      0x20\n        /* \"#utility.yul\":10689:10699   */\n      add\n        /* \"#utility.yul\":10660:10773   */\n      jump(tag_374)\n    tag_376:\n        /* \"#utility.yul\":10791:10797   */\n      dup4\n        /* \"#utility.yul\":10788:10789   */\n      dup2\n        /* \"#utility.yul\":10785:10798   */\n      gt\n        /* \"#utility.yul\":10782:10830   */\n      iszero\n      tag_161\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":10826:10827   */\n      0x00\n        /* \"#utility.yul\":10808:10824   */\n      swap2\n      add\n        /* \"#utility.yul\":10801:10828   */\n      mstore\n        /* \"#utility.yul\":10578:10836   */\n      jump\t// out\n        /* \"#utility.yul\":10841:11278   */\n    tag_94:\n        /* \"#utility.yul\":10920:10921   */\n      0x01\n        /* \"#utility.yul\":10916:10928   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":10963:10975   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":10984:11045   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":11038:11042   */\n      0x7f\n        /* \"#utility.yul\":11030:11036   */\n      dup3\n        /* \"#utility.yul\":11026:11043   */\n      and\n        /* \"#utility.yul\":11016:11043   */\n      swap2\n      pop\n        /* \"#utility.yul\":10984:11045   */\n    tag_379:\n        /* \"#utility.yul\":11091:11093   */\n      0x20\n        /* \"#utility.yul\":11083:11089   */\n      dup3\n        /* \"#utility.yul\":11080:11094   */\n      lt\n        /* \"#utility.yul\":11060:11078   */\n      dup2\n        /* \"#utility.yul\":11057:11095   */\n      eq\n        /* \"#utility.yul\":11054:11272   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":11128:11205   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11125:11126   */\n      0x00\n        /* \"#utility.yul\":11118:11206   */\n      mstore\n        /* \"#utility.yul\":11229:11233   */\n      0x22\n        /* \"#utility.yul\":11226:11227   */\n      0x04\n        /* \"#utility.yul\":11219:11234   */\n      mstore\n        /* \"#utility.yul\":11257:11261   */\n      0x24\n        /* \"#utility.yul\":11254:11255   */\n      0x00\n        /* \"#utility.yul\":11247:11262   */\n      revert\n        /* \"#utility.yul\":11054:11272   */\n    tag_380:\n      pop\n        /* \"#utility.yul\":10841:11278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11283:11478   */\n    tag_124:\n        /* \"#utility.yul\":11322:11325   */\n      0x00\n        /* \"#utility.yul\":11353:11419   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11346:11351   */\n      dup3\n        /* \"#utility.yul\":11343:11420   */\n      eq\n        /* \"#utility.yul\":11340:11443   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":11423:11441   */\n      tag_383\n      tag_369\n      jump\t// in\n    tag_383:\n      pop\n        /* \"#utility.yul\":11470:11471   */\n      0x01\n        /* \"#utility.yul\":11459:11472   */\n      add\n      swap1\n        /* \"#utility.yul\":11283:11478   */\n      jump\t// out\n        /* \"#utility.yul\":11483:11667   */\n    tag_369:\n        /* \"#utility.yul\":11535:11612   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11532:11533   */\n      0x00\n        /* \"#utility.yul\":11525:11613   */\n      mstore\n        /* \"#utility.yul\":11632:11636   */\n      0x11\n        /* \"#utility.yul\":11629:11630   */\n      0x04\n        /* \"#utility.yul\":11622:11637   */\n      mstore\n        /* \"#utility.yul\":11656:11660   */\n      0x24\n        /* \"#utility.yul\":11653:11654   */\n      0x00\n        /* \"#utility.yul\":11646:11661   */\n      revert\n        /* \"#utility.yul\":11861:12045   */\n    tag_236:\n        /* \"#utility.yul\":11913:11990   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11910:11911   */\n      0x00\n        /* \"#utility.yul\":11903:11991   */\n      mstore\n        /* \"#utility.yul\":12010:12014   */\n      0x41\n        /* \"#utility.yul\":12007:12008   */\n      0x04\n        /* \"#utility.yul\":12000:12015   */\n      mstore\n        /* \"#utility.yul\":12034:12038   */\n      0x24\n        /* \"#utility.yul\":12031:12032   */\n      0x00\n        /* \"#utility.yul\":12024:12039   */\n      revert\n        /* \"#utility.yul\":12050:12227   */\n    tag_334:\n        /* \"#utility.yul\":12135:12201   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12128:12133   */\n      dup2\n        /* \"#utility.yul\":12124:12202   */\n      and\n        /* \"#utility.yul\":12117:12122   */\n      dup2\n        /* \"#utility.yul\":12114:12203   */\n      eq\n        /* \"#utility.yul\":12104:12221   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":12217:12218   */\n      0x00\n        /* \"#utility.yul\":12214:12215   */\n      dup1\n        /* \"#utility.yul\":12207:12219   */\n      revert\n    stop\n    data_87106076e8bce6de62544573c671674dc843d1e318d288926e15452e9a37f1d2 697066733a2f2f516d657144544876556f4b6a694b7652436e76633366583962357150516331633339394a4638734557355257346e2f\n\n    auxdata: 0xa26469706673582212203c9e3b6ca78791149d9f301814749bc2cda9b90402390066f69aebcb354e292064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1631": {
									"entryPoint": null,
									"id": 1631,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2529": {
									"entryPoint": null,
									"id": 2529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:1"
															},
															"nodeType": "YulIf",
															"src": "157:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:1"
															},
															"nodeType": "YulIf",
															"src": "227:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:1",
														"type": ""
													}
												],
												"src": "14:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604080518082018252600c81526b4e424120546f64646c65727360a01b6020808301918252835180850190945260048452631390905560e21b908401528151919291620000629160009162000081565b5080516200007890600190602084019062000081565b50505062000164565b8280546200008f9062000127565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b600181811c908216806200013c57607f821691505b602082108114156200015e57634e487b7160e01b600052602260045260246000fd5b50919050565b611a7b80620001746000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb4651461020a578063b88d4fde1461021d578063c87b56dd14610230578063e985e9c51461024357600080fd5b80636352211e146101d357806370a08231146101e65780637824407f146101f957806395d89b411461020257600080fd5b80631249c58b116100d35780631249c58b1461018f57806323b872dd1461019757806332cb6b0c146101aa57806342842e0e146101c057600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461017a575b600080fd5b610118610113366004611773565b61028c565b60405190151581526020015b60405180910390f35b610135610371565b6040516101249190611888565b6101556101503660046117ad565b610403565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b61018d610188366004611749565b610437565b005b61018d610595565b61018d6101a53660046115d7565b61060a565b6101b2600a81565b604051908152602001610124565b61018d6101ce3660046115d7565b610691565b6101556101e13660046117ad565b6106ac565b6101b26101f4366004611589565b61071e565b6101b260065481565b6101356107d2565b61018d61021836600461170d565b6107e1565b61018d61022b366004611613565b6107f0565b61013561023e3660046117ad565b61087e565b6101186102513660046115a4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061031f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061036b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060008054610380906118f6565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac906118f6565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040e826108e5565b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610442826106ac565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104eb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061051457506105148133610251565b6105865760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104e2565b6105908383610959565b505050565b600a600654106105e75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20616c6c204e46547320617265206d696e7465642e0000000060448201526064016104e2565b6105f3336006546109f9565b600680549060006106038361194a565b9190505550565b6106143382610bde565b6106865760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104e2565b610590838383610c9e565b610590838383604051806020016040528060008152506107f0565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff168061036b5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104e2565b600073ffffffffffffffffffffffffffffffffffffffff82166107a95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016104e2565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b606060018054610380906118f6565b6107ec338383610f58565b5050565b6107fa3383610bde565b61086c5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104e2565b6108788484848461106c565b50505050565b6060610889826108e5565b60006108936110f5565b905060008151116108b357604051806020016040528060008152506108de565b806108bd84611115565b6040516020016108ce929190611810565b6040516020818303038152906040525b9392505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff166109565760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104e2565b50565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841690811790915581906109b3826106ac565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b73ffffffffffffffffffffffffffffffffffffffff8216610a5c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104e2565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610ace5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104e2565b610adc6000838360016111dd565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610b4e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104e2565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600080610bea836106ac565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c58575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b80610c9657508373ffffffffffffffffffffffffffffffffffffffff16610c7e84610403565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610cbe826106ac565b73ffffffffffffffffffffffffffffffffffffffff1614610d475760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104e2565b73ffffffffffffffffffffffffffffffffffffffff8216610dcf5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104e2565b610ddc83838360016111dd565b8273ffffffffffffffffffffffffffffffffffffffff16610dfc826106ac565b73ffffffffffffffffffffffffffffffffffffffff1614610e855760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104e2565b600081815260046020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526003855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fd45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104e2565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611077848484610c9e565b61108384848484611299565b6108785760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104e2565b6060604051806060016040528060368152602001611a1060369139905090565b606060006111228361147e565b600101905060008167ffffffffffffffff811115611142576111426119b2565b6040519080825280601f01601f19166020018201604052801561116c576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846111d0576111d5565b611176565b509392505050565b60018111156108785773ffffffffffffffffffffffffffffffffffffffff84161561123d5773ffffffffffffffffffffffffffffffffffffffff8416600090815260036020526040812080548392906112379084906118b3565b90915550505b73ffffffffffffffffffffffffffffffffffffffff8316156108785773ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805483929061128e90849061189b565b909155505050505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b15611473576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a029061131090339089908890889060040161183f565b602060405180830381600087803b15801561132a57600080fd5b505af1925050508015611378575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261137591810190611790565b60015b611428573d8080156113a6576040519150601f19603f3d011682016040523d82523d6000602084013e6113ab565b606091505b5080516114205760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104e2565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610c96565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114c7577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106114f3576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061151157662386f26fc10000830492506010015b6305f5e1008310611529576305f5e100830492506008015b612710831061153d57612710830492506004015b6064831061154f576064830492506002015b600a831061036b5760010192915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461158457600080fd5b919050565b60006020828403121561159b57600080fd5b6108de82611560565b600080604083850312156115b757600080fd5b6115c083611560565b91506115ce60208401611560565b90509250929050565b6000806000606084860312156115ec57600080fd5b6115f584611560565b925061160360208501611560565b9150604084013590509250925092565b6000806000806080858703121561162957600080fd5b61163285611560565b935061164060208601611560565b925060408501359150606085013567ffffffffffffffff8082111561166457600080fd5b818701915087601f83011261167857600080fd5b81358181111561168a5761168a6119b2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156116d0576116d06119b2565b816040528281528a60208487010111156116e957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561172057600080fd5b61172983611560565b91506020830135801515811461173e57600080fd5b809150509250929050565b6000806040838503121561175c57600080fd5b61176583611560565b946020939093013593505050565b60006020828403121561178557600080fd5b81356108de816119e1565b6000602082840312156117a257600080fd5b81516108de816119e1565b6000602082840312156117bf57600080fd5b5035919050565b600081518084526117de8160208601602086016118ca565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600083516118228184602088016118ca565b8351908301906118368183602088016118ca565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152508360408301526080606083015261187e60808301846117c6565b9695505050505050565b6020815260006108de60208301846117c6565b600082198211156118ae576118ae611983565b500190565b6000828210156118c5576118c5611983565b500390565b60005b838110156118e55781810151838201526020016118cd565b838111156108785750506000910152565b600181811c9082168061190a57607f821691505b60208210811415611944577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561197c5761197c611983565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461095657600080fdfe697066733a2f2f516d657144544876556f4b6a694b7652436e76633366583962357150516331633339394a4638734557355257346e2fa26469706673582212203c9e3b6ca78791149d9f301814749bc2cda9b90402390066f69aebcb354e292064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x4E424120546F64646C657273 PUSH1 0xA0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x13909055 PUSH1 0xE2 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x62 SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x81 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x78 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x81 JUMP JUMPDEST POP POP POP PUSH3 0x164 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x8F SWAP1 PUSH3 0x127 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xB3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xFE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xCE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xFE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xFE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xFE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xE1 JUMP JUMPDEST POP PUSH3 0x10C SWAP3 SWAP2 POP PUSH3 0x110 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x10C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x111 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x13C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x15E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7B DUP1 PUSH3 0x174 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1249C58B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH2 0x595 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x31F JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x36B JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x18F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E DUP3 PUSH2 0x8E5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 DUP3 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0x514 JUMPI POP PUSH2 0x514 DUP2 CALLER PUSH2 0x251 JUMP JUMPDEST PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x590 DUP4 DUP4 PUSH2 0x959 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x6 SLOAD LT PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20616C6C204E46547320617265206D696E7465642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x5F3 CALLER PUSH1 0x6 SLOAD PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x603 DUP4 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0x614 CALLER DUP3 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x590 DUP4 DUP4 DUP4 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x590 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0x7EC CALLER DUP4 DUP4 PUSH2 0xF58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FA CALLER DUP4 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x878 DUP5 DUP5 DUP5 DUP5 PUSH2 0x106C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x889 DUP3 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x893 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8DE JUMP JUMPDEST DUP1 PUSH2 0x8BD DUP5 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8CE SWAP3 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x9B3 DUP3 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xA5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0xADC PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBEA DUP4 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC58 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xC96 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC7E DUP5 PUSH2 0x403 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCBE DUP3 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xDCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0xDDC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11DD JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDFC DUP3 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1077 DUP5 DUP5 DUP5 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x1083 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A10 PUSH1 0x36 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1122 DUP4 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1142 JUMPI PUSH2 0x1142 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x116C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x11D0 JUMPI PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x1176 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x878 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0x123D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1237 SWAP1 DUP5 SWAP1 PUSH2 0x18B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x878 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x128E SWAP1 DUP5 SWAP1 PUSH2 0x189B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1310 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x183F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1378 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1375 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1428 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x13A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP PUSH2 0xC96 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14C7 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14F3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1511 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1529 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x153D JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x154F JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x36B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8DE DUP3 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C0 DUP4 PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CE PUSH1 0x20 DUP5 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F5 DUP5 PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP PUSH2 0x1603 PUSH1 0x20 DUP6 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1632 DUP6 PUSH2 0x1560 JUMP JUMPDEST SWAP4 POP PUSH2 0x1640 PUSH1 0x20 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x168A JUMPI PUSH2 0x168A PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16D0 JUMPI PUSH2 0x16D0 PUSH2 0x19B2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x16E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1729 DUP4 PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x175C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1765 DUP4 PUSH2 0x1560 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8DE DUP2 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8DE DUP2 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x17DE DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1822 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x18CA JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1836 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x18CA JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x187E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x17C6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8DE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18AE JUMPI PUSH2 0x18AE PUSH2 0x1983 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C5 PUSH2 0x1983 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x878 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x190A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1944 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x197C JUMPI PUSH2 0x197C PUSH2 0x1983 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT INVALID PUSH10 0x7066733A2F2F516D6571 DIFFICULTY SLOAD BASEFEE PUSH23 0x556F4B6A694B7652436E76633366583962357150516331 PUSH4 0x3339394A CHAINID CODESIZE PUSH20 0x4557355257346E2FA26469706673582212203C9E EXTCODESIZE PUSH13 0xA78791149D9F301814749BC2CD 0xA9 0xB9 DIV MUL CODECOPY STOP PUSH7 0xF69AEBCB354E29 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "50315:493:0:-:0;;;50430:47;;;;;;;;;-1:-1:-1;34685:113:0;;;;;;;;;;;-1:-1:-1;;;34685:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;34685:113:0;;;;34751:13;;34685:113;;;34751:13;;-1:-1:-1;;34751:13:0;:::i;:::-;-1:-1:-1;34774:17:0;;;;:7;;:17;;;;;:::i;:::-;;34685:113;;50315:493;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;50315:493:0;;;-1:-1:-1;50315:493:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;50315:493:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SUPPLY_2519": {
									"entryPoint": null,
									"id": 2519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_2512": {
									"entryPoint": null,
									"id": 2512,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2345": {
									"entryPoint": 2393,
									"id": 2345,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_2558": {
									"entryPoint": 4341,
									"id": 2558,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2499": {
									"entryPoint": 4573,
									"id": 2499,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2453": {
									"entryPoint": 4761,
									"id": 2453,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_2014": {
									"entryPoint": null,
									"id": 2014,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2048": {
									"entryPoint": 3038,
									"id": 2048,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_2169": {
									"entryPoint": 2553,
									"id": 2169,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_1996": {
									"entryPoint": null,
									"id": 1996,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_2391": {
									"entryPoint": 2277,
									"id": 2391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_1983": {
									"entryPoint": 4204,
									"id": 1983,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2377": {
									"entryPoint": 3928,
									"id": 2377,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_2321": {
									"entryPoint": 3230,
									"id": 2321,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1825": {
									"entryPoint": 1079,
									"id": 1825,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1686": {
									"entryPoint": 1822,
									"id": 1686,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1843": {
									"entryPoint": 1027,
									"id": 1843,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1878": {
									"entryPoint": null,
									"id": 1878,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1240": {
									"entryPoint": 5246,
									"id": 1240,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2549": {
									"entryPoint": 1429,
									"id": 2549,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_1724": {
									"entryPoint": 881,
									"id": 1724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1714": {
									"entryPoint": 1708,
									"id": 1714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1924": {
									"entryPoint": 1681,
									"id": 1924,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1954": {
									"entryPoint": 2032,
									"id": 1954,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1860": {
									"entryPoint": 2017,
									"id": 1860,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1662": {
									"entryPoint": 652,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_399": {
									"entryPoint": null,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1734": {
									"entryPoint": 2002,
									"id": 1734,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1459": {
									"entryPoint": 4373,
									"id": 1459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenSupply_2521": {
									"entryPoint": null,
									"id": 2521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_1773": {
									"entryPoint": 2174,
									"id": 1773,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_1905": {
									"entryPoint": 1546,
									"id": 1905,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81c704de177478ab9a2166dee4b9b1fe3bc1784fbcb22599b3de7421be1b607e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12229:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:1"
															},
															"nodeType": "YulIf",
															"src": "111:93:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:1"
															},
															"nodeType": "YulIf",
															"src": "295:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:1",
														"type": ""
													}
												],
												"src": "215:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:32:1"
															},
															"nodeType": "YulIf",
															"src": "503:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "574:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "656:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "622:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:1",
														"type": ""
													}
												],
												"src": "406:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:1"
															},
															"nodeType": "YulIf",
															"src": "785:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "875:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "856:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "894:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "904:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "756:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "671:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1134:1067:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1181:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1193:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1183:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1183:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1155:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1164:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1151:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1176:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:33:1"
															},
															"nodeType": "YulIf",
															"src": "1144:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1206:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1216:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1254:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1298:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1283:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1264:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1311:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1338:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1349:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1334:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1321:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1362:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1376:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1366:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1417:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1427:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1421:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1472:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1484:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1474:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1474:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1474:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1468:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1457:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:14:1"
															},
															"nodeType": "YulIf",
															"src": "1454:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1497:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1511:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1522:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1501:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1556:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1560:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1552:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1552:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1567:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1541:35:1"
															},
															"nodeType": "YulIf",
															"src": "1538:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1602:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1625:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1612:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1606:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1651:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1653:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1653:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1653:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1643:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1647:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1640:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:10:1"
															},
															"nodeType": "YulIf",
															"src": "1637:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:76:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1692:66:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1686:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1767:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1787:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1781:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1771:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1799:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1821:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1845:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1849:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1841:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1841:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1856:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1837:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1837:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1861:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1833:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1833:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1866:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1829:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1817:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1803:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1929:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1931:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1931:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1931:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1888:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1900:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1885:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1885:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1908:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1905:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1882:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:46:1"
															},
															"nodeType": "YulIf",
															"src": "1879:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1971:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1960:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2006:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1991:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1991:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2055:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2057:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2057:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2057:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2032:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2036:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2028:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2028:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2041:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2024:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2046:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2021:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:33:1"
															},
															"nodeType": "YulIf",
															"src": "2018:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2097:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2093:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2114:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2123:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2080:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2150:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2158:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2146:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2146:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2142:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2168:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2179:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2189:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1076:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1087:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1099:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1107:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1115:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1123:6:1",
														"type": ""
													}
												],
												"src": "1004:1197:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2290:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2336:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2345:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2348:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2338:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2338:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2338:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2311:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2320:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:32:1"
															},
															"nodeType": "YulIf",
															"src": "2300:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2361:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2390:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2371:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2409:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2450:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2422:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2413:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2507:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2516:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2509:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2509:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2509:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2476:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2497:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2490:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2490:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2483:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2483:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2473:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2473:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:40:1"
															},
															"nodeType": "YulIf",
															"src": "2463:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2532:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2542:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2532:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2248:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2259:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2271:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2279:6:1",
														"type": ""
													}
												],
												"src": "2206:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2691:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2700:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2703:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2693:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2693:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2693:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2666:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2675:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2662:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2687:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:32:1"
															},
															"nodeType": "YulIf",
															"src": "2655:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2716:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2745:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2726:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2764:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2802:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2774:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2764:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2603:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2614:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2626:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2634:6:1",
														"type": ""
													}
												],
												"src": "2558:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2932:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2944:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2934:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2934:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2907:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2916:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2903:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2903:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2928:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2899:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:32:1"
															},
															"nodeType": "YulIf",
															"src": "2896:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2983:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2970:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2961:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3026:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3002:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3002:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3041:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3051:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2875:6:1",
														"type": ""
													}
												],
												"src": "2817:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3147:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3193:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3202:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3205:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3195:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3195:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3195:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3168:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3177:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3160:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3160:32:1"
															},
															"nodeType": "YulIf",
															"src": "3157:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3218:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3231:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3222:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3280:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3256:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3256:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3295:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3305:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3295:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3113:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3124:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3136:6:1",
														"type": ""
													}
												],
												"src": "3067:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3391:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3437:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3446:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3449:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3439:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3439:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3439:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3412:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3433:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:32:1"
															},
															"nodeType": "YulIf",
															"src": "3401:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3462:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3485:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3472:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3357:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3368:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3380:6:1",
														"type": ""
													}
												],
												"src": "3321:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3555:267:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3565:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3585:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3579:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3569:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3607:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3612:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3600:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3654:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3661:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3684:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3628:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3628:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3700:116:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3715:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3728:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3736:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3724:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3724:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3741:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3720:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3711:98:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:109:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3532:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3539:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3547:3:1",
														"type": ""
													}
												],
												"src": "3506:316:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4014:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4024:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4038:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4038:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4028:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4082:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4101:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4106:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4060:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4060:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4122:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4139:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4144:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4135:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "4126:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4160:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4182:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4164:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4224:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4232:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4220:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4239:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4246:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4198:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4198:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4264:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4275:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4282:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:20:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4264:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3982:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3987:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4006:3:1",
														"type": ""
													}
												],
												"src": "3827:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4403:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4413:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4421:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4421:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4413:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4455:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4470:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4478:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4372:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4383:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4394:4:1",
														"type": ""
													}
												],
												"src": "4302:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4736:308:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4746:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4756:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4750:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4814:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4829:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4837:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4825:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4825:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4807:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4807:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4861:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4872:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4857:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4881:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4889:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4877:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4850:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4924:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4929:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4902:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4902:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4967:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4952:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4972:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4945:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4945:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5033:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5018:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4993:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4681:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4692:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4700:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4708:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4716:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4727:4:1",
														"type": ""
													}
												],
												"src": "4533:511:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5144:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5154:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5166:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5177:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5162:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5162:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5154:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5196:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5221:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5214:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5214:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5207:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5207:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5189:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5113:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5124:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5135:4:1",
														"type": ""
													}
												],
												"src": "5049:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5362:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5379:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5390:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5372:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5372:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5402:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5427:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5450:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5435:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5410:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5402:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5331:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5342:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5353:4:1",
														"type": ""
													}
												],
												"src": "5241:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5639:235:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5656:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5649:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5649:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5701:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5706:2:1",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5729:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5740:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5725:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5745:34:1",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5718:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5718:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5800:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5811:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5796:18:1"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5816:15:1",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5789:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5841:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5853:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5864:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5841:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5616:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5630:4:1",
														"type": ""
													}
												],
												"src": "5465:409:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6053:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6070:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6081:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6063:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6104:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6115:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6100:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6120:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6093:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6093:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6154:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6139:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6159:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6132:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6225:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6210:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6230:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6203:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6203:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6260:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6272:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6283:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6260:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6030:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6044:4:1",
														"type": ""
													}
												],
												"src": "5879:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6472:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6489:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6500:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6482:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6523:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6534:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6519:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6512:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6512:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6562:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6573:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6558:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6578:34:1",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6551:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6633:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6644:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6629:18:1"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6649:7:1",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6622:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6622:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6666:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6678:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6689:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6674:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6666:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6449:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6463:4:1",
														"type": ""
													}
												],
												"src": "6298:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6878:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6888:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6888:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6888:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6940:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6925:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6945:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6918:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6979:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6964:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6984:30:1",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6957:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7024:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7036:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7047:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7024:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6855:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6869:4:1",
														"type": ""
													}
												],
												"src": "6704:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7235:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7252:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7263:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7245:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7286:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7297:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7282:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7302:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7275:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7275:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7275:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7325:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7336:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7321:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7321:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7341:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7314:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7314:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7396:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7407:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7392:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7392:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7412:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7385:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7385:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7428:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7440:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7451:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7436:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7436:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7428:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7212:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7226:4:1",
														"type": ""
													}
												],
												"src": "7061:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7640:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7657:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7668:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7650:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7691:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7702:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7687:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7707:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7680:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7730:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7741:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7726:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7746:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7719:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7719:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7783:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7795:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7806:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7791:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7783:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7617:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7631:4:1",
														"type": ""
													}
												],
												"src": "7466:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7994:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8011:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8004:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8056:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8041:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8061:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8034:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8084:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8095:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8080:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8100:34:1",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8073:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8155:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8166:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8151:18:1"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8171:11:1",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8144:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8192:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8204:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8215:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8200:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8200:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8192:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7971:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7985:4:1",
														"type": ""
													}
												],
												"src": "7820:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8404:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8421:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8432:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8414:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8455:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8466:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8451:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8471:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8444:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8444:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8444:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8494:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8505:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8490:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8490:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20616c6c204e46547320617265206d696e7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8510:30:1",
																		"type": "",
																		"value": "ERC721: all NFTs are minted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8483:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8483:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8550:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8562:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8558:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8558:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8550:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81c704de177478ab9a2166dee4b9b1fe3bc1784fbcb22599b3de7421be1b607e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8381:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8395:4:1",
														"type": ""
													}
												],
												"src": "8230:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8761:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8778:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8789:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8771:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8812:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8823:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8808:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8828:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8801:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8862:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8867:34:1",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8840:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8840:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8911:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8923:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8934:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8919:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8919:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8911:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8738:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8752:4:1",
														"type": ""
													}
												],
												"src": "8587:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9122:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9139:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9132:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9184:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9169:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9189:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9162:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9162:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9223:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9208:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9228:26:1",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9201:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9201:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9264:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9276:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9287:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9272:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9264:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9099:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9113:4:1",
														"type": ""
													}
												],
												"src": "8948:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9475:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9492:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9503:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9485:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9485:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9526:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9537:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9522:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9522:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9542:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9515:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9565:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9576:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9561:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9581:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9554:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9554:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9647:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9632:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9652:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9625:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9625:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9665:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9677:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9688:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9673:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9665:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9452:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9466:4:1",
														"type": ""
													}
												],
												"src": "9301:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9877:251:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9894:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9905:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9887:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9887:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9928:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9939:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9924:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9944:2:1",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9917:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9917:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9917:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9967:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9978:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9963:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9983:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9956:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9956:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10049:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10034:18:1"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10054:31:1",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10027:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10027:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10095:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10107:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10118:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10103:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10095:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9854:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9868:4:1",
														"type": ""
													}
												],
												"src": "9703:425:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10234:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10244:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10256:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10267:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10252:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10244:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10286:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10297:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10279:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10279:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10203:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10214:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10225:4:1",
														"type": ""
													}
												],
												"src": "10133:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10363:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10390:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10392:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10392:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10392:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10379:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10386:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10382:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10376:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:13:1"
															},
															"nodeType": "YulIf",
															"src": "10373:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10421:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10432:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10435:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10428:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10421:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10346:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10349:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10355:3:1",
														"type": ""
													}
												],
												"src": "10315:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10497:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10519:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10521:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10521:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10521:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10513:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10516:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10510:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10510:8:1"
															},
															"nodeType": "YulIf",
															"src": "10507:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10550:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10562:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10565:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10558:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10558:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10550:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10479:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10482:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10488:4:1",
														"type": ""
													}
												],
												"src": "10448:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10631:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10641:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10650:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10645:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10710:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10735:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10740:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10731:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10731:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10754:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10759:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10750:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10750:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10744:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10744:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10724:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10724:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10724:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10671:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10674:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10668:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10668:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10682:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10684:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10693:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10696:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10689:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10689:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10684:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10664:3:1",
																"statements": []
															},
															"src": "10660:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10799:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10812:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10817:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10808:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10808:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10826:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10801:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10801:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10801:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10788:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10791:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10785:13:1"
															},
															"nodeType": "YulIf",
															"src": "10782:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10609:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10614:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10619:6:1",
														"type": ""
													}
												],
												"src": "10578:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10896:382:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10906:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10920:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10923:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "10916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10916:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10906:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10937:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10967:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10973:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10941:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11014:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11016:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11030:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11038:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11026:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11026:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11016:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10994:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10987:26:1"
															},
															"nodeType": "YulIf",
															"src": "10984:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11104:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11125:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11128:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11118:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11118:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11118:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11226:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11229:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11219:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11219:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11219:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11254:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11257:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11247:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11247:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11247:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11060:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11083:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11091:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11080:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11080:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11057:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11057:38:1"
															},
															"nodeType": "YulIf",
															"src": "11054:218:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10876:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10885:6:1",
														"type": ""
													}
												],
												"src": "10841:437:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11330:148:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11421:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11423:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11423:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11423:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11346:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11353:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11343:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11343:77:1"
															},
															"nodeType": "YulIf",
															"src": "11340:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11452:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11463:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11470:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11459:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11459:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11452:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11312:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11322:3:1",
														"type": ""
													}
												],
												"src": "11283:195:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11515:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11532:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11535:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11629:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11632:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11622:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11622:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11653:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11656:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11646:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11646:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11483:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11704:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11721:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11724:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11714:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11714:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11714:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11818:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11821:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11811:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11811:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11811:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11842:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11845:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11835:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11672:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11893:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11910:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11913:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11903:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11903:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12010:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12000:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12000:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12031:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12034:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12024:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12024:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11861:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12094:133:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12205:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12214:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12217:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12207:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12207:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12207:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12117:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12128:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12135:66:1",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12124:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12124:78:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12114:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12114:89:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:97:1"
															},
															"nodeType": "YulIf",
															"src": "12104:117:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12083:5:1",
														"type": ""
													}
												],
												"src": "12050:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_81c704de177478ab9a2166dee4b9b1fe3bc1784fbcb22599b3de7421be1b607e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: all NFTs are minted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb4651461020a578063b88d4fde1461021d578063c87b56dd14610230578063e985e9c51461024357600080fd5b80636352211e146101d357806370a08231146101e65780637824407f146101f957806395d89b411461020257600080fd5b80631249c58b116100d35780631249c58b1461018f57806323b872dd1461019757806332cb6b0c146101aa57806342842e0e146101c057600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461017a575b600080fd5b610118610113366004611773565b61028c565b60405190151581526020015b60405180910390f35b610135610371565b6040516101249190611888565b6101556101503660046117ad565b610403565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b61018d610188366004611749565b610437565b005b61018d610595565b61018d6101a53660046115d7565b61060a565b6101b2600a81565b604051908152602001610124565b61018d6101ce3660046115d7565b610691565b6101556101e13660046117ad565b6106ac565b6101b26101f4366004611589565b61071e565b6101b260065481565b6101356107d2565b61018d61021836600461170d565b6107e1565b61018d61022b366004611613565b6107f0565b61013561023e3660046117ad565b61087e565b6101186102513660046115a4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061031f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061036b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060008054610380906118f6565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac906118f6565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040e826108e5565b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610442826106ac565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104eb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061051457506105148133610251565b6105865760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104e2565b6105908383610959565b505050565b600a600654106105e75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20616c6c204e46547320617265206d696e7465642e0000000060448201526064016104e2565b6105f3336006546109f9565b600680549060006106038361194a565b9190505550565b6106143382610bde565b6106865760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104e2565b610590838383610c9e565b610590838383604051806020016040528060008152506107f0565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff168061036b5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104e2565b600073ffffffffffffffffffffffffffffffffffffffff82166107a95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016104e2565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b606060018054610380906118f6565b6107ec338383610f58565b5050565b6107fa3383610bde565b61086c5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104e2565b6108788484848461106c565b50505050565b6060610889826108e5565b60006108936110f5565b905060008151116108b357604051806020016040528060008152506108de565b806108bd84611115565b6040516020016108ce929190611810565b6040516020818303038152906040525b9392505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff166109565760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104e2565b50565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841690811790915581906109b3826106ac565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b73ffffffffffffffffffffffffffffffffffffffff8216610a5c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104e2565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610ace5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104e2565b610adc6000838360016111dd565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610b4e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104e2565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600080610bea836106ac565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c58575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b80610c9657508373ffffffffffffffffffffffffffffffffffffffff16610c7e84610403565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610cbe826106ac565b73ffffffffffffffffffffffffffffffffffffffff1614610d475760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104e2565b73ffffffffffffffffffffffffffffffffffffffff8216610dcf5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104e2565b610ddc83838360016111dd565b8273ffffffffffffffffffffffffffffffffffffffff16610dfc826106ac565b73ffffffffffffffffffffffffffffffffffffffff1614610e855760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104e2565b600081815260046020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526003855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fd45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104e2565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611077848484610c9e565b61108384848484611299565b6108785760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104e2565b6060604051806060016040528060368152602001611a1060369139905090565b606060006111228361147e565b600101905060008167ffffffffffffffff811115611142576111426119b2565b6040519080825280601f01601f19166020018201604052801561116c576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846111d0576111d5565b611176565b509392505050565b60018111156108785773ffffffffffffffffffffffffffffffffffffffff84161561123d5773ffffffffffffffffffffffffffffffffffffffff8416600090815260036020526040812080548392906112379084906118b3565b90915550505b73ffffffffffffffffffffffffffffffffffffffff8316156108785773ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805483929061128e90849061189b565b909155505050505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b15611473576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a029061131090339089908890889060040161183f565b602060405180830381600087803b15801561132a57600080fd5b505af1925050508015611378575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261137591810190611790565b60015b611428573d8080156113a6576040519150601f19603f3d011682016040523d82523d6000602084013e6113ab565b606091505b5080516114205760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104e2565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610c96565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114c7577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106114f3576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061151157662386f26fc10000830492506010015b6305f5e1008310611529576305f5e100830492506008015b612710831061153d57612710830492506004015b6064831061154f576064830492506002015b600a831061036b5760010192915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461158457600080fd5b919050565b60006020828403121561159b57600080fd5b6108de82611560565b600080604083850312156115b757600080fd5b6115c083611560565b91506115ce60208401611560565b90509250929050565b6000806000606084860312156115ec57600080fd5b6115f584611560565b925061160360208501611560565b9150604084013590509250925092565b6000806000806080858703121561162957600080fd5b61163285611560565b935061164060208601611560565b925060408501359150606085013567ffffffffffffffff8082111561166457600080fd5b818701915087601f83011261167857600080fd5b81358181111561168a5761168a6119b2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156116d0576116d06119b2565b816040528281528a60208487010111156116e957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561172057600080fd5b61172983611560565b91506020830135801515811461173e57600080fd5b809150509250929050565b6000806040838503121561175c57600080fd5b61176583611560565b946020939093013593505050565b60006020828403121561178557600080fd5b81356108de816119e1565b6000602082840312156117a257600080fd5b81516108de816119e1565b6000602082840312156117bf57600080fd5b5035919050565b600081518084526117de8160208601602086016118ca565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600083516118228184602088016118ca565b8351908301906118368183602088016118ca565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152508360408301526080606083015261187e60808301846117c6565b9695505050505050565b6020815260006108de60208301846117c6565b600082198211156118ae576118ae611983565b500190565b6000828210156118c5576118c5611983565b500390565b60005b838110156118e55781810151838201526020016118cd565b838111156108785750506000910152565b600181811c9082168061190a57607f821691505b60208210811415611944577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561197c5761197c611983565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461095657600080fdfe697066733a2f2f516d657144544876556f4b6a694b7652436e76633366583962357150516331633339394a4638734557355257346e2fa26469706673582212203c9e3b6ca78791149d9f301814749bc2cda9b90402390066f69aebcb354e292064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1249C58B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH2 0x595 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x31F JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x36B JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x18F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E DUP3 PUSH2 0x8E5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 DUP3 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0x514 JUMPI POP PUSH2 0x514 DUP2 CALLER PUSH2 0x251 JUMP JUMPDEST PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x590 DUP4 DUP4 PUSH2 0x959 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x6 SLOAD LT PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20616C6C204E46547320617265206D696E7465642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x5F3 CALLER PUSH1 0x6 SLOAD PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x603 DUP4 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0x614 CALLER DUP3 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x590 DUP4 DUP4 DUP4 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x590 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0x7EC CALLER DUP4 DUP4 PUSH2 0xF58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FA CALLER DUP4 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x878 DUP5 DUP5 DUP5 DUP5 PUSH2 0x106C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x889 DUP3 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x893 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8DE JUMP JUMPDEST DUP1 PUSH2 0x8BD DUP5 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8CE SWAP3 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x9B3 DUP3 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xA5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0xADC PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBEA DUP4 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC58 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xC96 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC7E DUP5 PUSH2 0x403 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCBE DUP3 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xDCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0xDDC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11DD JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDFC DUP3 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1077 DUP5 DUP5 DUP5 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x1083 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A10 PUSH1 0x36 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1122 DUP4 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1142 JUMPI PUSH2 0x1142 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x116C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x11D0 JUMPI PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x1176 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x878 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0x123D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1237 SWAP1 DUP5 SWAP1 PUSH2 0x18B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x878 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x128E SWAP1 DUP5 SWAP1 PUSH2 0x189B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1310 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x183F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1378 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1375 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1428 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x13A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP PUSH2 0xC96 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14C7 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14F3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1511 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1529 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x153D JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x154F JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x36B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8DE DUP3 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C0 DUP4 PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CE PUSH1 0x20 DUP5 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F5 DUP5 PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP PUSH2 0x1603 PUSH1 0x20 DUP6 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1632 DUP6 PUSH2 0x1560 JUMP JUMPDEST SWAP4 POP PUSH2 0x1640 PUSH1 0x20 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x168A JUMPI PUSH2 0x168A PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16D0 JUMPI PUSH2 0x16D0 PUSH2 0x19B2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x16E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1729 DUP4 PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x175C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1765 DUP4 PUSH2 0x1560 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8DE DUP2 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8DE DUP2 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x17DE DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1822 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x18CA JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1836 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x18CA JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x187E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x17C6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8DE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18AE JUMPI PUSH2 0x18AE PUSH2 0x1983 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C5 PUSH2 0x1983 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x878 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x190A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1944 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x197C JUMPI PUSH2 0x197C PUSH2 0x1983 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT INVALID PUSH10 0x7066733A2F2F516D6571 DIFFICULTY SLOAD BASEFEE PUSH23 0x556F4B6A694B7652436E76633366583962357150516331 PUSH4 0x3339394A CHAINID CODESIZE PUSH20 0x4557355257346E2FA26469706673582212203C9E EXTCODESIZE PUSH13 0xA78791149D9F301814749BC2CD 0xA9 0xB9 DIV MUL CODECOPY STOP PUSH7 0xF69AEBCB354E29 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "50315:493:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34865:300;;;;;;:::i;:::-;;:::i;:::-;;;5214:14:1;;5207:22;5189:41;;5177:2;5162:18;34865:300:0;;;;;;;;35766:98;;;:::i;:::-;;;;;;;:::i;37230:167::-;;;;;;:::i;:::-;;:::i;:::-;;;4478:42:1;4466:55;;;4448:74;;4436:2;4421:18;37230:167:0;4302:226:1;36763:406:0;;;;;;:::i;:::-;;:::i;:::-;;50483:170;;;:::i;37907:326::-;;;;;;:::i;:::-;;:::i;50352:39::-;;50389:2;50352:39;;;;;10279:25:1;;;10267:2;10252:18;50352:39:0;10133:177:1;38299:179:0;;;;;;:::i;:::-;;:::i;35485:219::-;;;;;;:::i;:::-;;:::i;35224:204::-;;;;;;:::i;:::-;;:::i;50397:26::-;;;;;;35928:102;;;:::i;37464:153::-;;;;;;:::i;:::-;;:::i;38544:314::-;;;;;;:::i;:::-;;:::i;36096:276::-;;;;;;:::i;:::-;;:::i;37683:162::-;;;;;;:::i;:::-;37803:25;;;;37780:4;37803:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;37683:162;34865:300;34967:4;35002:40;;;35017:25;35002:40;;:104;;-1:-1:-1;35058:48:0;;;35073:33;35058:48;35002:104;:156;;;-1:-1:-1;12954:25:0;12939:40;;;;35122:36;34983:175;34865:300;-1:-1:-1;;34865:300:0:o;35766:98::-;35820:13;35852:5;35845:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35766:98;:::o;37230:167::-;37306:7;37325:23;37340:7;37325:14;:23::i;:::-;-1:-1:-1;37366:24:0;;;;:15;:24;;;;;;;;;37230:167::o;36763:406::-;36843:13;36859:23;36874:7;36859:14;:23::i;:::-;36843:39;;36906:5;36900:11;;:2;:11;;;;36892:57;;;;-1:-1:-1;;;36892:57:0;;9503:2:1;36892:57:0;;;9485:21:1;9542:2;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;9652:3;9632:18;;;9625:31;9673:19;;36892:57:0;;;;;;;;;772:10;36981:21;;;;;:62;;-1:-1:-1;37006:37:0;37023:5;772:10;37683:162;:::i;37006:37::-;36960:170;;;;-1:-1:-1;;;36960:170:0;;9905:2:1;36960:170:0;;;9887:21:1;9944:2;9924:18;;;9917:30;9983:34;9963:18;;;9956:62;10054:31;10034:18;;;10027:59;10103:19;;36960:170:0;9703:425:1;36960:170:0;37141:21;37150:2;37154:7;37141:8;:21::i;:::-;36833:336;36763:406;;:::o;50483:170::-;50389:2;50526:11;;:24;50518:65;;;;-1:-1:-1;;;50518:65:0;;8432:2:1;50518:65:0;;;8414:21:1;8471:2;8451:18;;;8444:30;8510;8490:18;;;8483:58;8558:18;;50518:65:0;8230:352:1;50518:65:0;50593:30;50599:10;50611:11;;50593:5;:30::i;:::-;50633:11;:13;;;:11;:13;;;:::i;:::-;;;;;;50483:170::o;37907:326::-;38096:41;772:10;38129:7;38096:18;:41::i;:::-;38088:99;;;;-1:-1:-1;;;38088:99:0;;5667:2:1;38088:99:0;;;5649:21:1;5706:2;5686:18;;;5679:30;5745:34;5725:18;;;5718:62;5816:15;5796:18;;;5789:43;5849:19;;38088:99:0;5465:409:1;38088:99:0;38198:28;38208:4;38214:2;38218:7;38198:9;:28::i;38299:179::-;38432:39;38449:4;38455:2;38459:7;38432:39;;;;;;;;;;;;:16;:39::i;35485:219::-;35557:7;40225:16;;;:7;:16;;;;;;;;;35619:56;;;;-1:-1:-1;;;35619:56:0;;9150:2:1;35619:56:0;;;9132:21:1;9189:2;9169:18;;;9162:30;9228:26;9208:18;;;9201:54;9272:18;;35619:56:0;8948:348:1;35224:204:0;35296:7;35323:19;;;35315:73;;;;-1:-1:-1;;;35315:73:0;;8022:2:1;35315:73:0;;;8004:21:1;8061:2;8041:18;;;8034:30;8100:34;8080:18;;;8073:62;8171:11;8151:18;;;8144:39;8200:19;;35315:73:0;7820:405:1;35315:73:0;-1:-1:-1;35405:16:0;;;;;;:9;:16;;;;;;;35224:204::o;35928:102::-;35984:13;36016:7;36009:14;;;;;:::i;37464:153::-;37558:52;772:10;37591:8;37601;37558:18;:52::i;:::-;37464:153;;:::o;38544:314::-;38712:41;772:10;38745:7;38712:18;:41::i;:::-;38704:99;;;;-1:-1:-1;;;38704:99:0;;5667:2:1;38704:99:0;;;5649:21:1;5706:2;5686:18;;;5679:30;5745:34;5725:18;;;5718:62;5816:15;5796:18;;;5789:43;5849:19;;38704:99:0;5465:409:1;38704:99:0;38813:38;38827:4;38833:2;38837:7;38846:4;38813:13;:38::i;:::-;38544:314;;;;:::o;36096:276::-;36169:13;36194:23;36209:7;36194:14;:23::i;:::-;36228:21;36252:10;:8;:10::i;:::-;36228:34;;36303:1;36285:7;36279:21;:25;:86;;;;;;;;;;;;;;;;;36331:7;36340:18;:7;:16;:18::i;:::-;36314:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;36279:86;36272:93;36096:276;-1:-1:-1;;;36096:276:0:o;46761:133::-;40616:4;40225:16;;;:7;:16;;;;;;;;46834:53;;;;-1:-1:-1;;;46834:53:0;;9150:2:1;46834:53:0;;;9132:21:1;9189:2;9169:18;;;9162:30;9228:26;9208:18;;;9201:54;9272:18;;46834:53:0;8948:348:1;46834:53:0;46761:133;:::o;46063:171::-;46137:24;;;;:15;:24;;;;;:29;;;;;;;;;;;;;:24;;46190:23;46137:24;46190:14;:23::i;:::-;46181:46;;;;;;;;;;;;46063:171;;:::o;42386:920::-;42465:16;;;42457:61;;;;-1:-1:-1;;;42457:61:0;;8789:2:1;42457:61:0;;;8771:21:1;;;8808:18;;;8801:30;8867:34;8847:18;;;8840:62;8919:18;;42457:61:0;8587:356:1;42457:61:0;40616:4;40225:16;;;:7;:16;;;;;;;;40639:31;42528:58;;;;-1:-1:-1;;;42528:58:0;;6906:2:1;42528:58:0;;;6888:21:1;6945:2;6925:18;;;6918:30;6984;6964:18;;;6957:58;7032:18;;42528:58:0;6704:352:1;42528:58:0;42597:48;42626:1;42630:2;42634:7;42643:1;42597:20;:48::i;:::-;40616:4;40225:16;;;:7;:16;;;;;;;;40639:31;42732:58;;;;-1:-1:-1;;;42732:58:0;;6906:2:1;42732:58:0;;;6888:21:1;6945:2;6925:18;;;6918:30;6984;6964:18;;;6957:58;7032:18;;42732:58:0;6704:352:1;42732:58:0;43132:13;;;;;;;:9;:13;;;;;;;;:18;;43149:1;43132:18;;;43171:16;;;:7;:16;;;;;;:21;;;;;;;;43208:33;43179:7;;43132:13;;43208:33;;43132:13;;43208:33;37464:153;;:::o;40835:261::-;40928:4;40944:13;40960:23;40975:7;40960:14;:23::i;:::-;40944:39;;41012:5;41001:16;;:7;:16;;;:52;;;-1:-1:-1;37803:25:0;;;;37780:4;37803:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;41021:32;41001:87;;;;41081:7;41057:31;;:20;41069:7;41057:11;:20::i;:::-;:31;;;41001:87;40993:96;40835:261;-1:-1:-1;;;;40835:261:0:o;44718:1233::-;44872:4;44845:31;;:23;44860:7;44845:14;:23::i;:::-;:31;;;44837:81;;;;-1:-1:-1;;;44837:81:0;;6500:2:1;44837:81:0;;;6482:21:1;6539:2;6519:18;;;6512:30;6578:34;6558:18;;;6551:62;6649:7;6629:18;;;6622:35;6674:19;;44837:81:0;6298:401:1;44837:81:0;44936:16;;;44928:65;;;;-1:-1:-1;;;44928:65:0;;7263:2:1;44928:65:0;;;7245:21:1;7302:2;7282:18;;;7275:30;7341:34;7321:18;;;7314:62;7412:6;7392:18;;;7385:34;7436:19;;44928:65:0;7061:400:1;44928:65:0;45004:42;45025:4;45031:2;45035:7;45044:1;45004:20;:42::i;:::-;45173:4;45146:31;;:23;45161:7;45146:14;:23::i;:::-;:31;;;45138:81;;;;-1:-1:-1;;;45138:81:0;;6500:2:1;45138:81:0;;;6482:21:1;6539:2;6519:18;;;6512:30;6578:34;6558:18;;;6551:62;6649:7;6629:18;;;6622:35;6674:19;;45138:81:0;6298:401:1;45138:81:0;45288:24;;;;:15;:24;;;;;;;;45281:31;;;;;;;;;;45756:15;;;;;;:9;:15;;;;;:20;;;;;;45790:13;;;;;;;;;:18;;45281:31;45790:18;;;45828:16;;;:7;:16;;;;;;:21;;;;;;;;;;45865:27;;45304:7;;45865:27;;;36833:336;36763:406;;:::o;46370:307::-;46520:8;46511:17;;:5;:17;;;;46503:55;;;;-1:-1:-1;;;46503:55:0;;7668:2:1;46503:55:0;;;7650:21:1;7707:2;7687:18;;;7680:30;7746:27;7726:18;;;7719:55;7791:18;;46503:55:0;7466:349:1;46503:55:0;46568:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;46629:41;;5189::1;;;46629::0;;5162:18:1;46629:41:0;;;;;;;46370:307;;;:::o;39719:305::-;39869:28;39879:4;39885:2;39889:7;39869:9;:28::i;:::-;39915:47;39938:4;39944:2;39948:7;39957:4;39915:22;:47::i;:::-;39907:110;;;;-1:-1:-1;;;39907:110:0;;6081:2:1;39907:110:0;;;6063:21:1;6120:2;6100:18;;;6093:30;6159:34;6139:18;;;6132:62;6230:20;6210:18;;;6203:48;6268:19;;39907:110:0;5879:414:1;50659:147:0;50711:13;50736:63;;;;;;;;;;;;;;;;;;;50659:147;:::o;31670:696::-;31726:13;31775:14;31792:17;31803:5;31792:10;:17::i;:::-;31812:1;31792:21;31775:38;;31827:20;31861:6;31850:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31850:18:0;-1:-1:-1;31827:41:0;-1:-1:-1;31988:28:0;;;32004:2;31988:28;32043:280;32074:5;;32213:8;32208:2;32197:14;;32192:30;32074:5;32179:44;32267:2;32258:11;;;-1:-1:-1;32291:10:0;32287:21;;32303:5;;32287:21;32043:280;;;-1:-1:-1;32343:6:0;31670:696;-1:-1:-1;;;31670:696:0:o;48993:396::-;49177:1;49165:9;:13;49161:222;;;49198:18;;;;49194:85;;49236:15;;;;;;;:9;:15;;;;;:28;;49255:9;;49236:15;:28;;49255:9;;49236:28;:::i;:::-;;;;-1:-1:-1;;49194:85:0;49296:16;;;;49292:81;;49332:13;;;;;;;:9;:13;;;;;:26;;49349:9;;49332:13;:26;;49349:9;;49332:26;:::i;:::-;;;;-1:-1:-1;;48993:396:0;;;;:::o;47446:831::-;47595:4;47615:13;;;2384:19;:23;47611:660;;47650:71;;;;;:36;;;;;;:71;;772:10;;47701:4;;47707:7;;47716:4;;47650:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47650:71:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;47646:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47888:13:0;;47884:321;;47930:60;;-1:-1:-1;;;47930:60:0;;6081:2:1;47930:60:0;;;6063:21:1;6120:2;6100:18;;;6093:30;6159:34;6139:18;;;6132:62;6230:20;6210:18;;;6203:48;6268:19;;47930:60:0;5879:414:1;47884:321:0;48157:6;48151:13;48142:6;48138:2;48134:15;48127:38;47646:573;47771:51;;47781:41;47771:51;;-1:-1:-1;47764:58:0;;47611:660;-1:-1:-1;48256:4:0;47446:831;;;;;;:::o;28643:890::-;28696:7;;28780:6;28771:15;;28767:99;;28815:6;28806:15;;;-1:-1:-1;28849:2:0;28839:12;28767:99;28892:6;28883:5;:15;28879:99;;28927:6;28918:15;;;-1:-1:-1;28961:2:0;28951:12;28879:99;29004:6;28995:5;:15;28991:99;;29039:6;29030:15;;;-1:-1:-1;29073:2:0;29063:12;28991:99;29116:5;29107;:14;29103:96;;29150:5;29141:14;;;-1:-1:-1;29183:1:0;29173:11;29103:96;29225:5;29216;:14;29212:96;;29259:5;29250:14;;;-1:-1:-1;29292:1:0;29282:11;29212:96;29334:5;29325;:14;29321:96;;29368:5;29359:14;;;-1:-1:-1;29401:1:0;29391:11;29321:96;29443:5;29434;:14;29430:64;;29478:1;29468:11;29520:6;28643:890;-1:-1:-1;;28643:890:0:o;14:196:1:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:52;;;551:1;548;541:12;503:52;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;406:260;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;671:328;;;;;:::o;1004:1197::-;1099:6;1107;1115;1123;1176:3;1164:9;1155:7;1151:23;1147:33;1144:53;;;1193:1;1190;1183:12;1144:53;1216:29;1235:9;1216:29;:::i;:::-;1206:39;;1264:38;1298:2;1287:9;1283:18;1264:38;:::i;:::-;1254:48;;1349:2;1338:9;1334:18;1321:32;1311:42;;1404:2;1393:9;1389:18;1376:32;1427:18;1468:2;1460:6;1457:14;1454:34;;;1484:1;1481;1474:12;1454:34;1522:6;1511:9;1507:22;1497:32;;1567:7;1560:4;1556:2;1552:13;1548:27;1538:55;;1589:1;1586;1579:12;1538:55;1625:2;1612:16;1647:2;1643;1640:10;1637:36;;;1653:18;;:::i;:::-;1787:2;1781:9;1849:4;1841:13;;1692:66;1837:22;;;1861:2;1833:31;1829:40;1817:53;;;1885:18;;;1905:22;;;1882:46;1879:72;;;1931:18;;:::i;:::-;1971:10;1967:2;1960:22;2006:2;1998:6;1991:18;2046:7;2041:2;2036;2032;2028:11;2024:20;2021:33;2018:53;;;2067:1;2064;2057:12;2018:53;2123:2;2118;2114;2110:11;2105:2;2097:6;2093:15;2080:46;2168:1;2163:2;2158;2150:6;2146:15;2142:24;2135:35;2189:6;2179:16;;;;;;;1004:1197;;;;;;;:::o;2206:347::-;2271:6;2279;2332:2;2320:9;2311:7;2307:23;2303:32;2300:52;;;2348:1;2345;2338:12;2300:52;2371:29;2390:9;2371:29;:::i;:::-;2361:39;;2450:2;2439:9;2435:18;2422:32;2497:5;2490:13;2483:21;2476:5;2473:32;2463:60;;2519:1;2516;2509:12;2463:60;2542:5;2532:15;;;2206:347;;;;;:::o;2558:254::-;2626:6;2634;2687:2;2675:9;2666:7;2662:23;2658:32;2655:52;;;2703:1;2700;2693:12;2655:52;2726:29;2745:9;2726:29;:::i;:::-;2716:39;2802:2;2787:18;;;;2774:32;;-1:-1:-1;;;2558:254:1:o;2817:245::-;2875:6;2928:2;2916:9;2907:7;2903:23;2899:32;2896:52;;;2944:1;2941;2934:12;2896:52;2983:9;2970:23;3002:30;3026:5;3002:30;:::i;3067:249::-;3136:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:52;;;3205:1;3202;3195:12;3157:52;3237:9;3231:16;3256:30;3280:5;3256:30;:::i;3321:180::-;3380:6;3433:2;3421:9;3412:7;3408:23;3404:32;3401:52;;;3449:1;3446;3439:12;3401:52;-1:-1:-1;3472:23:1;;3321:180;-1:-1:-1;3321:180:1:o;3506:316::-;3547:3;3585:5;3579:12;3612:6;3607:3;3600:19;3628:63;3684:6;3677:4;3672:3;3668:14;3661:4;3654:5;3650:16;3628:63;:::i;:::-;3736:2;3724:15;3741:66;3720:88;3711:98;;;;3811:4;3707:109;;3506:316;-1:-1:-1;;3506:316:1:o;3827:470::-;4006:3;4044:6;4038:13;4060:53;4106:6;4101:3;4094:4;4086:6;4082:17;4060:53;:::i;:::-;4176:13;;4135:16;;;;4198:57;4176:13;4135:16;4232:4;4220:17;;4198:57;:::i;:::-;4271:20;;3827:470;-1:-1:-1;;;;3827:470:1:o;4533:511::-;4727:4;4756:42;4837:2;4829:6;4825:15;4814:9;4807:34;4889:2;4881:6;4877:15;4872:2;4861:9;4857:18;4850:43;;4929:6;4924:2;4913:9;4909:18;4902:34;4972:3;4967:2;4956:9;4952:18;4945:31;4993:45;5033:3;5022:9;5018:19;5010:6;4993:45;:::i;:::-;4985:53;4533:511;-1:-1:-1;;;;;;4533:511:1:o;5241:219::-;5390:2;5379:9;5372:21;5353:4;5410:44;5450:2;5439:9;5435:18;5427:6;5410:44;:::i;10315:128::-;10355:3;10386:1;10382:6;10379:1;10376:13;10373:39;;;10392:18;;:::i;:::-;-1:-1:-1;10428:9:1;;10315:128::o;10448:125::-;10488:4;10516:1;10513;10510:8;10507:34;;;10521:18;;:::i;:::-;-1:-1:-1;10558:9:1;;10448:125::o;10578:258::-;10650:1;10660:113;10674:6;10671:1;10668:13;10660:113;;;10750:11;;;10744:18;10731:11;;;10724:39;10696:2;10689:10;10660:113;;;10791:6;10788:1;10785:13;10782:48;;;-1:-1:-1;;10826:1:1;10808:16;;10801:27;10578:258::o;10841:437::-;10920:1;10916:12;;;;10963;;;10984:61;;11038:4;11030:6;11026:17;11016:27;;10984:61;11091:2;11083:6;11080:14;11060:18;11057:38;11054:218;;;11128:77;11125:1;11118:88;11229:4;11226:1;11219:15;11257:4;11254:1;11247:15;11054:218;;10841:437;;;:::o;11283:195::-;11322:3;11353:66;11346:5;11343:77;11340:103;;;11423:18;;:::i;:::-;-1:-1:-1;11470:1:1;11459:13;;11283:195::o;11483:184::-;11535:77;11532:1;11525:88;11632:4;11629:1;11622:15;11656:4;11653:1;11646:15;11861:184;11913:77;11910:1;11903:88;12010:4;12007:1;12000:15;12034:4;12031:1;12024:15;12050:177;12135:66;12128:5;12124:78;12117:5;12114:89;12104:117;;12217:1;12214;12207:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1355800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_SUPPLY()": "262",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2598",
								"getApproved(uint256)": "4756",
								"isApprovedForAll(address,address)": "infinite",
								"mint()": "83677",
								"name()": "infinite",
								"ownerOf(uint256)": "2543",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26657",
								"supportsInterface(bytes4)": "456",
								"symbol()": "infinite",
								"tokenSupply()": "2362",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50430,
									"end": 50477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E424120546F64646C657273"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13909055"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 34751,
									"end": 34764,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34781,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34774,
									"end": 34781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34774,
									"end": 34791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34685,
									"end": 34798,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50315,
									"end": 50808,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c9e3b6ca78791149d9f301814749bc2cda9b90402390066f69aebcb354e292064736f6c63430008070033",
									".code": [
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "7824407F"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50315,
											"end": 50808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 5229,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4466,
											"end": 4521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4302,
											"end": 4528,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 50483,
											"end": 50653,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50483,
											"end": 50653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50483,
											"end": 50653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 50483,
											"end": 50653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 50483,
											"end": 50653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 50389,
											"end": 50391,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10279,
											"end": 10304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10279,
											"end": 10304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10279,
											"end": 10304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10252,
											"end": 10270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50352,
											"end": 50391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10133,
											"end": 10310,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50397,
											"end": 50423,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50397,
											"end": 50423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50397,
											"end": 50423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 50397,
											"end": 50423,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50397,
											"end": 50423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50397,
											"end": 50423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50397,
											"end": 50423,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37780,
											"end": 37784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37821,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34967,
											"end": 34971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35017,
											"end": 35042,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 35002,
											"end": 35106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35058,
											"end": 35106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35058,
											"end": 35106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35058,
											"end": 35106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35073,
											"end": 35106,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35058,
											"end": 35106,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35106,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 35002,
											"end": 35106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35002,
											"end": 35158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 35002,
											"end": 35158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12954,
											"end": 12979,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12939,
											"end": 12979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12939,
											"end": 12979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12939,
											"end": 12979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12939,
											"end": 12979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35122,
											"end": 35158,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 35122,
											"end": 35158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34983,
											"end": 35158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34865,
											"end": 35165,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35820,
											"end": 35833,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35852,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35845,
											"end": 35857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35864,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37306,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37340,
											"end": 37347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37325,
											"end": 37339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37366,
											"end": 37390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36843,
											"end": 36856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36859,
											"end": 36882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 36874,
											"end": 36881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36859,
											"end": 36873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 36859,
											"end": 36882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36859,
											"end": 36882,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 36859,
											"end": 36882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36843,
											"end": 36882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36843,
											"end": 36882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36906,
											"end": 36911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36900,
											"end": 36911,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9544,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9554,
											"end": 9616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9655,
											"name": "PUSH",
											"source": 1,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9625,
											"end": 9656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9673,
											"end": 9692,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9673,
											"end": 9692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 36892,
											"end": 36949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 36981,
											"end": 37043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37006,
											"end": 37043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 37023,
											"end": 37028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 37683,
											"end": 37845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37006,
											"end": 37043,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 37006,
											"end": 37043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9907,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9887,
											"end": 9908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9946,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9917,
											"end": 9947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 10018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10054,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 10034,
											"end": 10052,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10034,
											"end": 10052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10027,
											"end": 10086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10122,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10103,
											"end": 10122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9703,
											"end": 10128,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 36960,
											"end": 37130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37141,
											"end": 37162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 37150,
											"end": 37152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37154,
											"end": 37161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37141,
											"end": 37149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 37141,
											"end": 37162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37141,
											"end": 37162,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 37141,
											"end": 37162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36833,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50483,
											"end": 50653,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 50483,
											"end": 50653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50389,
											"end": 50391,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 50526,
											"end": 50537,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50526,
											"end": 50537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50526,
											"end": 50550,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8432,
											"end": 8434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8473,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8510,
											"end": 8540,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20616C6C204E46547320617265206D696E7465642E00000000"
										},
										{
											"begin": 8490,
											"end": 8508,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8490,
											"end": 8508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8490,
											"end": 8508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8483,
											"end": 8541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8576,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8558,
											"end": 8576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 8230,
											"end": 8582,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 50518,
											"end": 50583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50593,
											"end": 50623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 50599,
											"end": 50609,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 50611,
											"end": 50622,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50611,
											"end": 50622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50593,
											"end": 50598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 50593,
											"end": 50623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50593,
											"end": 50623,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 50593,
											"end": 50623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50644,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50633,
											"end": 50646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50483,
											"end": 50653,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 37907,
											"end": 38233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38096,
											"end": 38137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38129,
											"end": 38136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38096,
											"end": 38114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38096,
											"end": 38137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38096,
											"end": 38137,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 38096,
											"end": 38137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "2D"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5465,
											"end": 5874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 38088,
											"end": 38187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 38208,
											"end": 38212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38214,
											"end": 38216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38218,
											"end": 38225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 38198,
											"end": 38226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 38299,
											"end": 38478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 38449,
											"end": 38453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38455,
											"end": 38457,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38459,
											"end": 38466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 38432,
											"end": 38471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35485,
											"end": 35704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35557,
											"end": 35564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9132,
											"end": 9153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9169,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9169,
											"end": 9187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9169,
											"end": 9187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9254,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35619,
											"end": 35675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 8948,
											"end": 9296,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35296,
											"end": 35303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35323,
											"end": 35342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35323,
											"end": 35342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8022,
											"end": 8024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8061,
											"end": 8063,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8034,
											"end": 8064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8134,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8182,
											"name": "PUSH",
											"source": 1,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8151,
											"end": 8169,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8151,
											"end": 8169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8219,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8200,
											"end": 8219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7820,
											"end": 8225,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 35315,
											"end": 35388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35414,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35224,
											"end": 35428,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 35928,
											"end": 36030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35984,
											"end": 35997,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36016,
											"end": 36023,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 36009,
											"end": 36023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37558,
											"end": 37610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37591,
											"end": 37599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37601,
											"end": 37609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37558,
											"end": 37576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 37558,
											"end": 37610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37558,
											"end": 37610,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 37558,
											"end": 37610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38745,
											"end": 38752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38712,
											"end": 38753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38712,
											"end": 38753,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 38712,
											"end": 38753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "2D"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5465,
											"end": 5874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 38704,
											"end": 38803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 38851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 38827,
											"end": 38831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38833,
											"end": 38835,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38837,
											"end": 38844,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38846,
											"end": 38850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 38826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 38813,
											"end": 38851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38813,
											"end": 38851,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 38813,
											"end": 38851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38544,
											"end": 38858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36169,
											"end": 36182,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36194,
											"end": 36217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 36209,
											"end": 36216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36194,
											"end": 36208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 36194,
											"end": 36217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36194,
											"end": 36217,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 36194,
											"end": 36217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36228,
											"end": 36249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36252,
											"end": 36262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 36252,
											"end": 36260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 36252,
											"end": 36262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36252,
											"end": 36262,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 36252,
											"end": 36262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36228,
											"end": 36262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36228,
											"end": 36262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36303,
											"end": 36304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36285,
											"end": 36292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36340,
											"end": 36358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 36340,
											"end": 36347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36340,
											"end": 36356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 36340,
											"end": 36358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36340,
											"end": 36358,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 36340,
											"end": 36358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36314,
											"end": 36359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 36279,
											"end": 36365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36096,
											"end": 36372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46761,
											"end": 46894,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 46761,
											"end": 46894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40616,
											"end": 40620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9132,
											"end": 9153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9169,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9169,
											"end": 9187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9169,
											"end": 9187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9254,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 8948,
											"end": 9296,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 46834,
											"end": 46887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46761,
											"end": 46894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46761,
											"end": 46894,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46166,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46190,
											"end": 46213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 46137,
											"end": 46161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46190,
											"end": 46204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 46190,
											"end": 46213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46190,
											"end": 46213,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 46190,
											"end": 46213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46227,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46063,
											"end": 46234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42386,
											"end": 43306,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42386,
											"end": 43306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42465,
											"end": 42481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42465,
											"end": 42481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42465,
											"end": 42481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8771,
											"end": 8792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8867,
											"end": 8901,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 8847,
											"end": 8865,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8847,
											"end": 8865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8840,
											"end": 8902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 8587,
											"end": 8943,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42457,
											"end": 42518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40616,
											"end": 40620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40639,
											"end": 40670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7014,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6704,
											"end": 7056,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 42528,
											"end": 42586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42597,
											"end": 42645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 42626,
											"end": 42627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42630,
											"end": 42632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42634,
											"end": 42641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42643,
											"end": 42644,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42597,
											"end": 42617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 42597,
											"end": 42645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42597,
											"end": 42645,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 42597,
											"end": 42645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40616,
											"end": 40620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40225,
											"end": 40241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40639,
											"end": 40670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7014,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6704,
											"end": 7056,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 42732,
											"end": 42790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43141,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43149,
											"end": 43150,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43132,
											"end": 43150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43178,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 43171,
											"end": 43192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43192,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43192,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 43192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43208,
											"end": 43241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43179,
											"end": 43186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43179,
											"end": 43186,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43208,
											"end": 43241,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 43208,
											"end": 43241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43132,
											"end": 43145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43208,
											"end": 43241,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37464,
											"end": 37617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40835,
											"end": 41096,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 40835,
											"end": 41096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40928,
											"end": 40932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40944,
											"end": 40957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40960,
											"end": 40983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 40975,
											"end": 40982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40960,
											"end": 40974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 40960,
											"end": 40983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40960,
											"end": 40983,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 40960,
											"end": 40983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40944,
											"end": 40983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40944,
											"end": 40983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 41001,
											"end": 41053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37780,
											"end": 37784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37821,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37803,
											"end": 37838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41021,
											"end": 41053,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 41021,
											"end": 41053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41081,
											"end": 41088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 41069,
											"end": 41076,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41057,
											"end": 41077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41057,
											"end": 41077,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 41057,
											"end": 41077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41057,
											"end": 41088,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 41001,
											"end": 41088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40993,
											"end": 41089,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 40835,
											"end": 41096,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40835,
											"end": 41096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44718,
											"end": 45951,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 44718,
											"end": 45951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44872,
											"end": 44876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 44860,
											"end": 44867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 44845,
											"end": 44868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44845,
											"end": 44868,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 44845,
											"end": 44868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6482,
											"end": 6503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6541,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6612,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6656,
											"name": "PUSH",
											"source": 1,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6674,
											"end": 6693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6298,
											"end": 6699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 44837,
											"end": 44918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44936,
											"end": 44952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7263,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7304,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7282,
											"end": 7300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7375,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7314,
											"end": 7376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7418,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7436,
											"end": 7455,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7436,
											"end": 7455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7061,
											"end": 7461,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 44928,
											"end": 44993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45004,
											"end": 45046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 45025,
											"end": 45029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45031,
											"end": 45033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45035,
											"end": 45042,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45044,
											"end": 45045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45004,
											"end": 45024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 45004,
											"end": 45046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45004,
											"end": 45046,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 45004,
											"end": 45046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45173,
											"end": 45177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 45161,
											"end": 45168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 45146,
											"end": 45169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45146,
											"end": 45169,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 45146,
											"end": 45169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45177,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6482,
											"end": 6503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6541,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6612,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6656,
											"name": "PUSH",
											"source": 1,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6674,
											"end": 6693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6298,
											"end": 6699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 45138,
											"end": 45219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45765,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45771,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45756,
											"end": 45776,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45803,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45281,
											"end": 45312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45790,
											"end": 45808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45835,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45844,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45828,
											"end": 45849,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45304,
											"end": 45311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45304,
											"end": 45311,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45892,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 36833,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36763,
											"end": 37169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46520,
											"end": 46528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46511,
											"end": 46528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7687,
											"end": 7705,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7687,
											"end": 7705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7773,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 7726,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7726,
											"end": 7744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7466,
											"end": 7815,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 46503,
											"end": 46558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46603,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46568,
											"end": 46614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46629,
											"end": 46670,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46370,
											"end": 46677,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39719,
											"end": 40024,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 39719,
											"end": 40024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39869,
											"end": 39897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 39879,
											"end": 39883,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39885,
											"end": 39887,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39889,
											"end": 39896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39869,
											"end": 39878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 39869,
											"end": 39897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39869,
											"end": 39897,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 39869,
											"end": 39897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39915,
											"end": 39962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 39938,
											"end": 39942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39948,
											"end": 39955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39957,
											"end": 39961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39915,
											"end": 39937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 39915,
											"end": 39962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39915,
											"end": 39962,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 39915,
											"end": 39962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6250,
											"name": "PUSH",
											"source": 1,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6203,
											"end": 6251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39907,
											"end": 40017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5879,
											"end": 6293,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50659,
											"end": 50806,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 50659,
											"end": 50806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50711,
											"end": 50724,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "PUSH data",
											"source": 0,
											"value": "87106076E8BCE6DE62544573C671674DC843D1E318D288926E15452E9A37F1D2"
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50736,
											"end": 50799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50659,
											"end": 50806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50659,
											"end": 50806,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31670,
											"end": 32366,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 31670,
											"end": 32366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31739,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31775,
											"end": 31789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31792,
											"end": 31809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 31803,
											"end": 31808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31792,
											"end": 31802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 31792,
											"end": 31809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31792,
											"end": 31809,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 31792,
											"end": 31809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31792,
											"end": 31813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 31813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 31813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31827,
											"end": 31847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31861,
											"end": 31867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31850,
											"end": 31868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31827,
											"end": 31868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31988,
											"end": 32016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31988,
											"end": 32016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31988,
											"end": 32016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32004,
											"end": 32006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31988,
											"end": 32016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32074,
											"end": 32079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32221,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 32208,
											"end": 32210,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32197,
											"end": 32211,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32197,
											"end": 32211,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 32192,
											"end": 32222,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32179,
											"end": 32223,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32269,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32258,
											"end": 32269,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32269,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32269,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32291,
											"end": 32301,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 32287,
											"end": 32308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32303,
											"end": 32308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 32303,
											"end": 32308,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32308,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 32287,
											"end": 32308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 32043,
											"end": 32323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32343,
											"end": 32349,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31670,
											"end": 32366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31670,
											"end": 32366,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49177,
											"end": 49178,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49165,
											"end": 49174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49178,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49161,
											"end": 49383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49161,
											"end": 49383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 49161,
											"end": 49383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49198,
											"end": 49216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49198,
											"end": 49216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49198,
											"end": 49216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49198,
											"end": 49216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 49194,
											"end": 49279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49245,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49194,
											"end": 49279,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 49194,
											"end": 49279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49296,
											"end": 49312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49296,
											"end": 49312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49296,
											"end": 49312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49296,
											"end": 49312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49292,
											"end": 49373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 49292,
											"end": 49373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49341,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49349,
											"end": 49358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49349,
											"end": 49358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49349,
											"end": 49358,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49349,
											"end": 49358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49332,
											"end": 49358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48993,
											"end": 49389,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47595,
											"end": 47599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47615,
											"end": 47628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47615,
											"end": 47628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47615,
											"end": 47628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2403,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47611,
											"end": 48271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 47611,
											"end": 48271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 47650,
											"end": 47686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47705,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47707,
											"end": 47714,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47707,
											"end": 47714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47720,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 47650,
											"end": 47721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47888,
											"end": 47901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47888,
											"end": 47901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47884,
											"end": 48205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 47884,
											"end": 48205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6250,
											"name": "PUSH",
											"source": 1,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6203,
											"end": 6251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47930,
											"end": 47990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5879,
											"end": 6293,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47884,
											"end": 48205,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 47884,
											"end": 48205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48157,
											"end": 48163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48151,
											"end": 48164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48142,
											"end": 48148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48138,
											"end": 48140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48134,
											"end": 48149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48127,
											"end": 48165,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 47646,
											"end": 48219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47771,
											"end": 47822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47771,
											"end": 47822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47781,
											"end": 47822,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47771,
											"end": 47822,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47771,
											"end": 47822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47764,
											"end": 47822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 47764,
											"end": 47822,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47611,
											"end": 48271,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 47611,
											"end": 48271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48256,
											"end": 48260,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47446,
											"end": 48277,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28643,
											"end": 29533,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 28643,
											"end": 29533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28696,
											"end": 28703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28696,
											"end": 28703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28780,
											"end": 28786,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 28771,
											"end": 28786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 28767,
											"end": 28866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28815,
											"end": 28821,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 28806,
											"end": 28821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 28821,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 28821,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28849,
											"end": 28851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28839,
											"end": 28851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28866,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 28767,
											"end": 28866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 28898,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 28883,
											"end": 28888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28883,
											"end": 28898,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28879,
											"end": 28978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 28879,
											"end": 28978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28927,
											"end": 28933,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 28918,
											"end": 28933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28918,
											"end": 28933,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28918,
											"end": 28933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28961,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28951,
											"end": 28963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28879,
											"end": 28978,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 28879,
											"end": 28978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29004,
											"end": 29010,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 28995,
											"end": 29000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28995,
											"end": 29010,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28991,
											"end": 29090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 28991,
											"end": 29090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29039,
											"end": 29045,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 29030,
											"end": 29045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29045,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29073,
											"end": 29075,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29063,
											"end": 29075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28991,
											"end": 29090,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 28991,
											"end": 29090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29121,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 29107,
											"end": 29112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29107,
											"end": 29121,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 29103,
											"end": 29199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29150,
											"end": 29155,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 29141,
											"end": 29155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29141,
											"end": 29155,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29141,
											"end": 29155,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29183,
											"end": 29184,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29173,
											"end": 29184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29199,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 29103,
											"end": 29199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29225,
											"end": 29230,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 29216,
											"end": 29221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29216,
											"end": 29230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29212,
											"end": 29308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 29212,
											"end": 29308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29259,
											"end": 29264,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 29250,
											"end": 29264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29250,
											"end": 29264,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29250,
											"end": 29264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29292,
											"end": 29293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29282,
											"end": 29293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29212,
											"end": 29308,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 29212,
											"end": 29308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29334,
											"end": 29339,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29325,
											"end": 29330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29325,
											"end": 29339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29321,
											"end": 29417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 29321,
											"end": 29417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29368,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29359,
											"end": 29373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29359,
											"end": 29373,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29359,
											"end": 29373,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29401,
											"end": 29402,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29391,
											"end": 29402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29321,
											"end": 29417,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 29321,
											"end": 29417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29443,
											"end": 29448,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29434,
											"end": 29439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29434,
											"end": 29448,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29430,
											"end": 29494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 29430,
											"end": 29494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29478,
											"end": 29479,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29468,
											"end": 29479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 29526,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28643,
											"end": 29533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28643,
											"end": 29533,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 474,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 510,
											"end": 533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 506,
											"end": 538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 503,
											"end": 555,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 503,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 503,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 564,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 612,
											"end": 660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 612,
											"end": 660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 894,
											"end": 942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 951,
											"end": 993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 951,
											"end": 993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1164,
											"end": 1173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1180,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 1144,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 1216,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1245,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1298,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1264,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1353,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1471,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1520,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1574,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1556,
											"end": 1558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1575,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1628,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1650,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1637,
											"end": 1673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1853,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1841,
											"end": 1854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1833,
											"end": 1864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1903,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1927,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1951,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 1879,
											"end": 1951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2054,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2069,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 2201,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2330,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2505,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2463,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2463,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2558,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2673,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2705,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 2745,
											"end": 2754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2755,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2806,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2806,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2558,
											"end": 2812,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2817,
											"end": 3062,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2817,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2931,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2946,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3067,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3067,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3192,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3207,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 3157,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3280,
											"end": 3285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 3256,
											"end": 3286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3321,
											"end": 3501,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3321,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3436,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3451,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 3401,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3472,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3321,
											"end": 3501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3506,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3506,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3610,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3659,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3724,
											"end": 3739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3720,
											"end": 3808,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3707,
											"end": 3816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3822,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3827,
											"end": 4297,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3827,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4051,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 4106,
											"end": 4112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4094,
											"end": 4098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4092,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 4176,
											"end": 4189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4220,
											"end": 4237,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 4198,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4291,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 4297,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3827,
											"end": 4297,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4533,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4533,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4798,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4837,
											"end": 4839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4835,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4823,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4887,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4861,
											"end": 4870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4967,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 4970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 4993,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5038,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 5044,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 5044,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5241,
											"end": 5460,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5241,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5410,
											"end": 5454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10315,
											"end": 10443,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10315,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10382,
											"end": 10388,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10376,
											"end": 10389,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10373,
											"end": 10412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10373,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10373,
											"end": 10412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10392,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 10392,
											"end": 10410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10392,
											"end": 10410,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10392,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10428,
											"end": 10437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10315,
											"end": 10443,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10448,
											"end": 10573,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 10448,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10513,
											"end": 10514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10518,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 10507,
											"end": 10541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10573,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10578,
											"end": 10836,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 10578,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10650,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10674,
											"end": 10680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10671,
											"end": 10672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10681,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 10761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 10761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 10761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10731,
											"end": 10742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10731,
											"end": 10742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10731,
											"end": 10742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10696,
											"end": 10698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 10699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 10660,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10797,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10830,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10782,
											"end": 10830,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10826,
											"end": 10827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10808,
											"end": 10824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10801,
											"end": 10828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10578,
											"end": 10836,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10841,
											"end": 11278,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10841,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10921,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10984,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 10984,
											"end": 11045,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11042,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11030,
											"end": 11036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11016,
											"end": 11043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11016,
											"end": 11043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10984,
											"end": 11045,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 10984,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11083,
											"end": 11089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11094,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11057,
											"end": 11095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 11054,
											"end": 11272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11205,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11125,
											"end": 11126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11118,
											"end": 11206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11226,
											"end": 11227,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11219,
											"end": 11234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 11261,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11254,
											"end": 11255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11262,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11272,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 11054,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 11278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 11278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 11278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 11278,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11283,
											"end": 11478,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 11283,
											"end": 11478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11322,
											"end": 11325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11353,
											"end": 11419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11346,
											"end": 11351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11343,
											"end": 11420,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11443,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 11340,
											"end": 11443,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11470,
											"end": 11471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11459,
											"end": 11472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11283,
											"end": 11478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11483,
											"end": 11667,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 11483,
											"end": 11667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11535,
											"end": 11612,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11532,
											"end": 11533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11632,
											"end": 11636,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11629,
											"end": 11630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11622,
											"end": 11637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11656,
											"end": 11660,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11653,
											"end": 11654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11646,
											"end": 11661,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 12045,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 11861,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11913,
											"end": 11990,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11910,
											"end": 11911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11903,
											"end": 11991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12010,
											"end": 12014,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12038,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12031,
											"end": 12032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12024,
											"end": 12039,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12050,
											"end": 12227,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 12050,
											"end": 12227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12201,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12128,
											"end": 12133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12124,
											"end": 12202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12114,
											"end": 12203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 12104,
											"end": 12221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12219,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"87106076E8BCE6DE62544573C671674DC843D1E318D288926E15452E9A37F1D2": "697066733a2f2f516d657144544876556f4b6a694b7652436e76633366583962357150516331633339394a4638734557355257346e2f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"MAX_SUPPLY()": "32cb6b0c",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint()": "1249c58b",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenSupply()": "7824407f",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"NbaToddlers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1594,
								"contract": "NbaToddlers_flat.sol:NbaToddlers",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1596,
								"contract": "NbaToddlers_flat.sol:NbaToddlers",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1600,
								"contract": "NbaToddlers_flat.sol:NbaToddlers",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1604,
								"contract": "NbaToddlers_flat.sol:NbaToddlers",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1608,
								"contract": "NbaToddlers_flat.sol:NbaToddlers",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1614,
								"contract": "NbaToddlers_flat.sol:NbaToddlers",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2521,
								"contract": "NbaToddlers_flat.sol:NbaToddlers",
								"label": "tokenSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NbaToddlers_flat.sol\":31443:33508  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NbaToddlers_flat.sol\":31443:33508  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fae1be7eb1f4e9fdbc4fb5bcfe6a22a3b762b46bf0399a86c3f4f8e84eaf37da64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fae1be7eb1f4e9fdbc4fb5bcfe6a22a3b762b46bf0399a86c3f4f8e84eaf37da64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xE1 0xBE PUSH31 0xB1F4E9FDBC4FB5BCFE6A22A3B762B46BF0399A86C3F4F8E84EAF37DA64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "31443:2065:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;31443:2065:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fae1be7eb1f4e9fdbc4fb5bcfe6a22a3b762b46bf0399a86c3f4f8e84eaf37da64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xE1 0xBE PUSH31 0xB1F4E9FDBC4FB5BCFE6A22A3B762B46BF0399A86C3F4F8E84EAF37DA64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "31443:2065:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31443,
									"end": 33508,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fae1be7eb1f4e9fdbc4fb5bcfe6a22a3b762b46bf0399a86c3f4f8e84eaf37da64736f6c63430008070033",
									".code": [
										{
											"begin": 31443,
											"end": 33508,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 33508,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 33508,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 33508,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31443,
											"end": 33508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31443,
											"end": 33508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 33508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31443,
											"end": 33508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 33508,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NbaToddlers_flat.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"NbaToddlers_flat.sol\":{\"keccak256\":\"0xe3983d4089b310b49f960ece710d8fc468f0af47d1db2d815bcaf5f8d5fc706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://277408ef90b101b28159d72ef33974356417b69f1af73f5606a9718685056993\",\"dweb:/ipfs/QmSrTuwiuPjVAAmGa1fPrjih4FKz72qtVetHEPLNAyyWD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"NbaToddlers_flat.sol": {
				"ast": {
					"absolutePath": "NbaToddlers_flat.sol",
					"exportedSymbols": {
						"Address": [
							350
						],
						"Context": [
							21
						],
						"ERC165": [
							400
						],
						"ERC721": [
							2513
						],
						"IERC165": [
							378
						],
						"IERC721": [
							514
						],
						"IERC721Metadata": [
							539
						],
						"IERC721Receiver": [
							367
						],
						"Math": [
							1403
						],
						"NbaToddlers": [
							2559
						],
						"Strings": [
							1576
						]
					},
					"id": 2560,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "139:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "164:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "679:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "755:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "772:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "765:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "702:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "746:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:9:0"
									},
									"scope": 21,
									"src": "693:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "862:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "879:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "879:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "872:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "804:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "846:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "846:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:16:0"
									},
									"scope": 21,
									"src": "795:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2560,
							"src": "661:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "1020:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "1045:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 350,
							"linearizedBaseContracts": [
								350
							],
							"name": "Address",
							"nameLocation": "1121:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2160:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 31,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2384:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2384:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2384:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2384:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 30,
												"id": 36,
												"nodeType": "Return",
												"src": "2377:30:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "1135:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "2103:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2114:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 28,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 350,
									"src": "2094:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "3402:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 49,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3428:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$350",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$350",
																				"typeString": "library Address"
																			}
																		],
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3420:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 47,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3420:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3420:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3420:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 52,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "3445:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3420:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3453:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 46,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "3412:73:0"
											},
											{
												"assignments": [
													58,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3502:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "3497:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 57,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3497:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 65,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3545:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 59,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "3515:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3515:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 61,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "3537:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3515:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3496:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 67,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3566:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3575:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3558:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "3558:78:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2420:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "3340:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3366:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "3350:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3350:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3385:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "3377:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:43:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3402:0:0"
									},
									"scope": 350,
									"src": "3331:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "4474:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "4521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4527:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4530:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															130,
															174
														],
														"referencedDeclaration": 174,
														"src": "4491:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4491:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "4484:79:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "3649:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4394:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4415:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4407:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4423:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4406:35:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4460:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4460:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4459:14:0"
									},
									"scope": 350,
									"src": "4385:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4939:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4978:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4986:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4992:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 106,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4995:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															130,
															174
														],
														"referencedDeclaration": 174,
														"src": "4956:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4949:59:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4576:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4801:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4831:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4823:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4860:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4847:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4847:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4888:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4874:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 96,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4874:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4813:93:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4925:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4925:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4924:14:0"
									},
									"scope": 350,
									"src": "4792:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "5520:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5559:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 124,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 125,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5573:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5580:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 122,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															130,
															174
														],
														"referencedDeclaration": 174,
														"src": "5537:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 128,
												"nodeType": "Return",
												"src": "5530:94:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "5021:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5386:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5425:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5454:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5441:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5441:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5476:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5407:80:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5506:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5506:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5505:14:0"
									},
									"scope": 350,
									"src": "5377:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "6058:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 147,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6084:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$350",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$350",
																				"typeString": "library Address"
																			}
																		],
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6076:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 145,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6076:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6076:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "6076:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 150,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "6101:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6076:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6108:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6068:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "6068:81:0"
											},
											{
												"assignments": [
													156,
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6165:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "6160:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 155,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6160:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6187:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "6174:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 157,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6174:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"arguments": [
														{
															"id": 163,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "6227:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 159,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "6201:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6201:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 161,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "6220:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6201:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6159:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "6276:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "6284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 169,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "6293:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 170,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "6305:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 166,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6249:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6249:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 143,
												"id": 172,
												"nodeType": "Return",
												"src": "6242:76:0"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "5637:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5888:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5927:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5919:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5956:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5943:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5943:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6007:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5993:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5993:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5909:116:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6044:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6044:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:14:0"
									},
									"scope": 350,
									"src": "5879:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "6602:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6638:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6652:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 184,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															191,
															220
														],
														"referencedDeclaration": 220,
														"src": "6619:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6619:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 183,
												"id": 189,
												"nodeType": "Return",
												"src": "6612:80:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "6331:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6511:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6538:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "6530:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6559:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "6546:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6546:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6529:35:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "6588:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6588:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:14:0"
									},
									"scope": 350,
									"src": "6502:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "7041:168:0",
										"statements": [
											{
												"assignments": [
													204,
													206
												],
												"declarations": [
													{
														"constant": false,
														"id": 204,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7057:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "7052:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 203,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7052:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7079:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "7066:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 205,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7066:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"id": 209,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "7111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 207,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "7093:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7093:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7093:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7051:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "7160:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "7168:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 215,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "7177:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 216,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "7189:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 212,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "7133:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7133:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 202,
												"id": 218,
												"nodeType": "Return",
												"src": "7126:76:0"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "6705:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6892:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6928:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "6920:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6957:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "6944:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6944:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6985:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "6971:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6971:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6910:93:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "7027:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7027:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7026:14:0"
									},
									"scope": 350,
									"src": "6883:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "7485:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "7523:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "7531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7537:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 230,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															237,
															266
														],
														"referencedDeclaration": 266,
														"src": "7502:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7502:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 229,
												"id": 235,
												"nodeType": "Return",
												"src": "7495:84:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "7215:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7397:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7426:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7418:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7434:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7417:35:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7471:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7471:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:14:0"
									},
									"scope": 350,
									"src": "7388:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "7927:170:0",
										"statements": [
											{
												"assignments": [
													250,
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7943:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "7938:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 249,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7938:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7965:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "7952:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 251,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7952:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"arguments": [
														{
															"id": 255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 253,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "7979:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7979:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7979:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7937:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 259,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8048:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "8056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 261,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8065:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 262,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "8077:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 258,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "8021:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8021:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 248,
												"id": 264,
												"nodeType": "Return",
												"src": "8014:76:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "7592:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7781:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7819:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "7811:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "7835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7876:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "7862:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7862:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7801:93:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7913:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:14:0"
									},
									"scope": 350,
									"src": "7772:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "8579:434:0",
										"statements": [
											{
												"condition": {
													"id": 280,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 271,
													"src": "8593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 302,
													"nodeType": "Block",
													"src": "8949:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 298,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "8971:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 299,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "8983:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 297,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8963:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8963:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 301,
															"nodeType": "ExpressionStatement",
															"src": "8963:33:0"
														}
													]
												},
												"id": 303,
												"nodeType": "IfStatement",
												"src": "8589:418:0",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "8602:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 281,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "8620:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8620:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8641:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8620:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 293,
															"nodeType": "IfStatement",
															"src": "8616:286:0",
															"trueBody": {
																"id": 292,
																"nodeType": "Block",
																"src": "8644:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 287,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 269,
																							"src": "8846:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 286,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 38,
																						"src": "8835:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8835:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 289,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8855:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 285,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8827:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8827:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 291,
																		"nodeType": "ExpressionStatement",
																		"src": "8827:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 294,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "8922:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 279,
															"id": 295,
															"nodeType": "Return",
															"src": "8915:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "8103:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "8394:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "8430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8459:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "8454:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8454:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8489:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "8476:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8476:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8523:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "8509:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8509:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8420:121:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "8565:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8564:14:0"
									},
									"scope": 350,
									"src": "8385:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "9394:135:0",
										"statements": [
											{
												"condition": {
													"id": 317,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 308,
													"src": "9408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 326,
													"nodeType": "Block",
													"src": "9465:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 322,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "9487:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 323,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "9499:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 321,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "9479:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9479:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "9479:33:0"
														}
													]
												},
												"id": 327,
												"nodeType": "IfStatement",
												"src": "9404:119:0",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "9417:42:0",
													"statements": [
														{
															"expression": {
																"id": 318,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "9438:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 316,
															"id": 319,
															"nodeType": "Return",
															"src": "9431:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "9019:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "9243:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "9274:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "9269:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9269:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "9304:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "9291:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9291:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9338:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "9324:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9324:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9259:97:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "9380:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9380:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9379:14:0"
									},
									"scope": 350,
									"src": "9234:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "9618:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "9694:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9694:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9714:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9694:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 346,
													"nodeType": "Block",
													"src": "10024:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 343,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "10045:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 342,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "10038:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10038:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "10038:20:0"
														}
													]
												},
												"id": 347,
												"nodeType": "IfStatement",
												"src": "9690:379:0",
												"trueBody": {
													"id": 341,
													"nodeType": "Block",
													"src": "9717:301:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9875:133:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9893:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9922:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9916:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9916:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9897:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9961:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9965:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9957:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9957:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9978:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9950:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9950:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9950:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 331,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9922:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 331,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9965:10:0",
																	"valueSize": 1
																}
															],
															"id": 340,
															"nodeType": "InlineAssembly",
															"src": "9866:142:0"
														}
													]
												}
											}
										]
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "9544:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "9565:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9552:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9552:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9591:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9577:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9551:53:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9618:0:0"
									},
									"scope": 350,
									"src": "9535:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2560,
							"src": "1113:8964:0",
							"usedErrors": []
						},
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "10231:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 352,
								"nodeType": "StructuredDocumentation",
								"src": "10256:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 367,
							"linearizedBaseContracts": [
								367
							],
							"name": "IERC721Receiver",
							"nameLocation": "10419:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "10441:493:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "10948:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10982:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "10974:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11008:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "11000:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11030:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "11022:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11062:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "11047:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10964:108:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "11091:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 363,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "11091:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11090:8:0"
									},
									"scope": 367,
									"src": "10939:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2560,
							"src": "10409:692:0",
							"usedErrors": []
						},
						{
							"id": 368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11238:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 369,
								"nodeType": "StructuredDocumentation",
								"src": "11263:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IERC165",
							"nameLocation": "11553:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "11567:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "11921:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "11946:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "11939:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 371,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "11939:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11938:20:0"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "11982:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11982:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11981:6:0"
									},
									"scope": 378,
									"src": "11912:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2560,
							"src": "11543:447:0",
							"usedErrors": []
						},
						{
							"id": 379,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12125:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 381,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "12756:7:0"
									},
									"id": 382,
									"nodeType": "InheritanceSpecifier",
									"src": "12756:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 380,
								"nodeType": "StructuredDocumentation",
								"src": "12151:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 400,
							"linearizedBaseContracts": [
								400,
								378
							],
							"name": "ERC165",
							"nameLocation": "12746:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "12922:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "12939:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 393,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "12959:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$378_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$378_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 392,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12954:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12954:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$378",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "12954:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "12939:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 390,
												"id": 397,
												"nodeType": "Return",
												"src": "12932:47:0"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "12770:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "12840:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 387,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12898:8:0"
									},
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "12865:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "12858:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 384,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "12858:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12857:20:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "12916:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12916:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12915:6:0"
									},
									"scope": 400,
									"src": "12831:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2560,
							"src": "12728:260:0",
							"usedErrors": []
						},
						{
							"id": 401,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13126:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 403,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "13241:7:0"
									},
									"id": 404,
									"nodeType": "InheritanceSpecifier",
									"src": "13241:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 402,
								"nodeType": "StructuredDocumentation",
								"src": "13152:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								378
							],
							"name": "IERC721",
							"nameLocation": "13230:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "13255:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 413,
									"name": "Transfer",
									"nameLocation": "13354:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13379:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13363:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13401:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13385:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13421:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13405:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13362:67:0"
									},
									"src": "13348:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "13436:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 422,
									"name": "Approval",
									"nameLocation": "13541:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13566:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "13550:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13589:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "13573:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13615:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "13599:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13549:74:0"
									},
									"src": "13535:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "13630:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 431,
									"name": "ApprovalForAll",
									"nameLocation": "13758:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13789:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "13773:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13812:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "13796:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13827:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "13822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13822:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13772:64:0"
									},
									"src": "13752:85:0"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "13843:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13933:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13951:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "13943:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13942:15:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "13989:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "13981:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13980:17:0"
									},
									"scope": 514,
									"src": "13924:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "14004:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "14149:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14165:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "14157:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14156:17:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14205:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "14197:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14196:15:0"
									},
									"scope": 514,
									"src": "14140:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "14218:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14788:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14822:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "14814:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14844:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "14836:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "14856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14896:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "14881:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14881:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14804:102:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14915:0:0"
									},
									"scope": 514,
									"src": "14779:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "14922:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15623:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15657:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "15649:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15679:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "15671:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15699:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "15691:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15639:73:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15721:0:0"
									},
									"scope": 514,
									"src": "15614:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "15728:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16474:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16504:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "16496:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16526:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "16518:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16546:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "16538:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16486:73:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16568:0:0"
									},
									"scope": 514,
									"src": "16465:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "16575:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "17041:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17057:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "17049:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17069:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "17061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17048:29:0"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17086:0:0"
									},
									"scope": 514,
									"src": "17032:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "17093:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17416:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17442:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "17434:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17434:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "17457:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "17452:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17452:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17433:34:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17476:0:0"
									},
									"scope": 514,
									"src": "17407:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "17483:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "17636:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17656:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "17648:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17647:17:0"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17696:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "17688:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17687:18:0"
									},
									"scope": 514,
									"src": "17627:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "17712:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17864:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17889:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17881:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17904:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17896:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17880:33:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17937:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17936:6:0"
									},
									"scope": 514,
									"src": "17855:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2560,
							"src": "13220:4725:0",
							"usedErrors": []
						},
						{
							"id": 515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 517,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 514,
										"src": "18295:7:0"
									},
									"id": 518,
									"nodeType": "InheritanceSpecifier",
									"src": "18295:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 516,
								"nodeType": "StructuredDocumentation",
								"src": "18132:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 539,
							"linearizedBaseContracts": [
								539,
								514,
								378
							],
							"name": "IERC721Metadata",
							"nameLocation": "18276:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "18309:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "18381:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18385:2:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "18411:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18411:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18410:15:0"
									},
									"scope": 539,
									"src": "18372:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "18432:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "18506:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18512:2:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "18538:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18538:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18537:15:0"
									},
									"scope": 539,
									"src": "18497:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "18559:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "18663:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18680:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "18672:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18671:17:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "18712:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18711:15:0"
									},
									"scope": 539,
									"src": "18654:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2560,
							"src": "18266:463:0",
							"usedErrors": []
						},
						{
							"id": 540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18857:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 541,
								"nodeType": "StructuredDocumentation",
								"src": "18882:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1403,
							"linearizedBaseContracts": [
								1403
							],
							"name": "Math",
							"nameLocation": "18964:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 545,
									"members": [
										{
											"id": 542,
											"name": "Down",
											"nameLocation": "18999:4:0",
											"nodeType": "EnumValue",
											"src": "18999:4:0"
										},
										{
											"id": 543,
											"name": "Up",
											"nameLocation": "19041:2:0",
											"nodeType": "EnumValue",
											"src": "19041:2:0"
										},
										{
											"id": 544,
											"name": "Zero",
											"nameLocation": "19072:4:0",
											"nodeType": "EnumValue",
											"src": "19072:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "18980:8:0",
									"nodeType": "EnumDefinition",
									"src": "18975:122:0"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "19234:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 555,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "19251:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 556,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "19255:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19251:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 559,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "19263:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19251:13:0",
													"trueExpression": {
														"id": 558,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "19259:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 561,
												"nodeType": "Return",
												"src": "19244:20:0"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "19103:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "19176:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19188:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "19180:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19199:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "19191:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19179:22:0"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "19225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19224:9:0"
									},
									"scope": 1403,
									"src": "19167:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "19409:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 573,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "19426:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 574,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "19430:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19426:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 577,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "19438:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19426:13:0",
													"trueExpression": {
														"id": 576,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "19434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 572,
												"id": 579,
												"nodeType": "Return",
												"src": "19419:20:0"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "19277:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "19351:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "19355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "19366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19354:22:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "19400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19399:9:0"
									},
									"scope": 1403,
									"src": "19342:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "19630:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 591,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "19685:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 592,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "19689:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19685:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 594,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 595,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "19695:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 596,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "19699:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19695:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 598,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "19694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19704:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "19694:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19684:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 590,
												"id": 602,
												"nodeType": "Return",
												"src": "19677:28:0"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "19452:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "19568:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19584:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "19576:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19595:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "19587:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19575:22:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "19621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19620:9:0"
									},
									"scope": 1403,
									"src": "19559:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "19982:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 614,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "20070:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20075:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20070:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 618,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "20084:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20088:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20084:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20083:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 622,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "20093:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20083:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "20083:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "20070:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20079:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 613,
												"id": 627,
												"nodeType": "Return",
												"src": "20063:35:0"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "19718:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "19920:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19936:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "19928:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19947:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "19939:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19927:22:0"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "19973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19972:9:0"
									},
									"scope": 1403,
									"src": "19911:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "20549:3797:0",
										"statements": [
											{
												"id": 749,
												"nodeType": "UncheckedBlock",
												"src": "20559:3781:0",
												"statements": [
													{
														"assignments": [
															642
														],
														"declarations": [
															{
																"constant": false,
																"id": 642,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "20888:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 749,
																"src": "20880:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 641,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20880:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 643,
														"nodeType": "VariableDeclarationStatement",
														"src": "20880:13:0"
													},
													{
														"assignments": [
															645
														],
														"declarations": [
															{
																"constant": false,
																"id": 645,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "20960:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 749,
																"src": "20952:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 644,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20952:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 646,
														"nodeType": "VariableDeclarationStatement",
														"src": "20952:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "21032:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21050:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "21067:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21070:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21077:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "21073:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21073:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "21060:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21060:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "21054:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21097:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "21110:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21113:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "21106:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21106:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21097:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21132:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "21149:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "21153:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "21145:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21145:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "21164:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "21168:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "21161:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21161:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21141:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21141:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "21132:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 642,
																"isOffset": false,
																"isSlot": false,
																"src": "21097:5:0",
																"valueSize": 1
															},
															{
																"declaration": 642,
																"isOffset": false,
																"isSlot": false,
																"src": "21153:5:0",
																"valueSize": 1
															},
															{
																"declaration": 642,
																"isOffset": false,
																"isSlot": false,
																"src": "21168:5:0",
																"valueSize": 1
															},
															{
																"declaration": 645,
																"isOffset": false,
																"isSlot": false,
																"src": "21132:5:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "21067:1:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "21110:1:0",
																"valueSize": 1
															},
															{
																"declaration": 634,
																"isOffset": false,
																"isSlot": false,
																"src": "21070:1:0",
																"valueSize": 1
															},
															{
																"declaration": 634,
																"isOffset": false,
																"isSlot": false,
																"src": "21113:1:0",
																"valueSize": 1
															}
														],
														"id": 647,
														"nodeType": "InlineAssembly",
														"src": "21023:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 648,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "21270:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21279:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21270:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 656,
														"nodeType": "IfStatement",
														"src": "21266:75:0",
														"trueBody": {
															"id": 655,
															"nodeType": "Block",
															"src": "21282:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 651,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "21307:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 652,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "21315:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21307:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 640,
																	"id": 654,
																	"nodeType": "Return",
																	"src": "21300:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 658,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "21451:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 659,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "21465:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21451:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 657,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "21443:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21443:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 662,
														"nodeType": "ExpressionStatement",
														"src": "21443:28:0"
													},
													{
														"assignments": [
															664
														],
														"declarations": [
															{
																"constant": false,
																"id": 664,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "21735:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 749,
																"src": "21727:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 663,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21727:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 665,
														"nodeType": "VariableDeclarationStatement",
														"src": "21727:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "21767:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "21836:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "21856:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21859:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "21862:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "21849:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21849:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "21836:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21956:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "21969:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "21979:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "21990:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "21976:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21976:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21965:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21965:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "21956:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "22014:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "22027:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "22034:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22023:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22023:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "22014:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 636,
																"isOffset": false,
																"isSlot": false,
																"src": "21862:11:0",
																"valueSize": 1
															},
															{
																"declaration": 642,
																"isOffset": false,
																"isSlot": false,
																"src": "21990:5:0",
																"valueSize": 1
															},
															{
																"declaration": 642,
																"isOffset": false,
																"isSlot": false,
																"src": "22014:5:0",
																"valueSize": 1
															},
															{
																"declaration": 642,
																"isOffset": false,
																"isSlot": false,
																"src": "22027:5:0",
																"valueSize": 1
															},
															{
																"declaration": 645,
																"isOffset": false,
																"isSlot": false,
																"src": "21956:5:0",
																"valueSize": 1
															},
															{
																"declaration": 645,
																"isOffset": false,
																"isSlot": false,
																"src": "21969:5:0",
																"valueSize": 1
															},
															{
																"declaration": 664,
																"isOffset": false,
																"isSlot": false,
																"src": "21836:9:0",
																"valueSize": 1
															},
															{
																"declaration": 664,
																"isOffset": false,
																"isSlot": false,
																"src": "21979:9:0",
																"valueSize": 1
															},
															{
																"declaration": 664,
																"isOffset": false,
																"isSlot": false,
																"src": "22034:9:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "21856:1:0",
																"valueSize": 1
															},
															{
																"declaration": 634,
																"isOffset": false,
																"isSlot": false,
																"src": "21859:1:0",
																"valueSize": 1
															}
														],
														"id": 666,
														"nodeType": "InlineAssembly",
														"src": "21758:300:0"
													},
													{
														"assignments": [
															668
														],
														"declarations": [
															{
																"constant": false,
																"id": 668,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "22373:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 749,
																"src": "22365:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 667,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22365:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 676,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 669,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "22380:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "22395:12:0",
																			"subExpression": {
																				"id": 670,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "22396:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22410:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22395:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 674,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22394:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22380:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22365:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "22435:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "22500:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "22519:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "22532:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "22515:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22515:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "22500:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "22604:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "22617:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "22624:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "22613:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22613:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "22604:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "22744:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "22764:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "22767:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "22760:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22760:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "22774:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "22756:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22756:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22781:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22752:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22752:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "22744:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 636,
																"isOffset": false,
																"isSlot": false,
																"src": "22500:11:0",
																"valueSize": 1
															},
															{
																"declaration": 636,
																"isOffset": false,
																"isSlot": false,
																"src": "22519:11:0",
																"valueSize": 1
															},
															{
																"declaration": 642,
																"isOffset": false,
																"isSlot": false,
																"src": "22604:5:0",
																"valueSize": 1
															},
															{
																"declaration": 642,
																"isOffset": false,
																"isSlot": false,
																"src": "22617:5:0",
																"valueSize": 1
															},
															{
																"declaration": 668,
																"isOffset": false,
																"isSlot": false,
																"src": "22532:4:0",
																"valueSize": 1
															},
															{
																"declaration": 668,
																"isOffset": false,
																"isSlot": false,
																"src": "22624:4:0",
																"valueSize": 1
															},
															{
																"declaration": 668,
																"isOffset": false,
																"isSlot": false,
																"src": "22744:4:0",
																"valueSize": 1
															},
															{
																"declaration": 668,
																"isOffset": false,
																"isSlot": false,
																"src": "22767:4:0",
																"valueSize": 1
															},
															{
																"declaration": 668,
																"isOffset": false,
																"isSlot": false,
																"src": "22774:4:0",
																"valueSize": 1
															}
														],
														"id": 677,
														"nodeType": "InlineAssembly",
														"src": "22426:371:0"
													},
													{
														"expression": {
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 678,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "22863:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 679,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "22872:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 680,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "22880:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22872:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22863:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 683,
														"nodeType": "ExpressionStatement",
														"src": "22863:21:0"
													},
													{
														"assignments": [
															685
														],
														"declarations": [
															{
																"constant": false,
																"id": 685,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "23210:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 749,
																"src": "23202:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 684,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23202:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 692,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23221:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 687,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "23225:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23221:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 689,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23220:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23240:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "23220:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23202:39:0"
													},
													{
														"expression": {
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 693,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "23458:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23469:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 695,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "23473:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 696,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "23487:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23473:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23469:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23458:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 700,
														"nodeType": "ExpressionStatement",
														"src": "23458:36:0"
													},
													{
														"expression": {
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 701,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "23527:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23538:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 703,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "23542:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 704,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "23556:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23542:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23538:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23527:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 708,
														"nodeType": "ExpressionStatement",
														"src": "23527:36:0"
													},
													{
														"expression": {
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 709,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "23597:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23608:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 711,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "23612:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 712,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "23626:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23612:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23608:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23597:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 716,
														"nodeType": "ExpressionStatement",
														"src": "23597:36:0"
													},
													{
														"expression": {
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 717,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "23667:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23678:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 719,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "23682:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 720,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "23696:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23682:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23678:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23667:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 724,
														"nodeType": "ExpressionStatement",
														"src": "23667:36:0"
													},
													{
														"expression": {
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 725,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "23737:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23748:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 727,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "23752:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 728,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "23766:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23752:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23748:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23737:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 732,
														"nodeType": "ExpressionStatement",
														"src": "23737:36:0"
													},
													{
														"expression": {
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 733,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "23808:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23819:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 735,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "23823:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 736,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "23837:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23823:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23819:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23808:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 740,
														"nodeType": "ExpressionStatement",
														"src": "23808:36:0"
													},
													{
														"expression": {
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 741,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "24278:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 742,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "24287:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 743,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "24295:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24287:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24278:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 746,
														"nodeType": "ExpressionStatement",
														"src": "24278:24:0"
													},
													{
														"expression": {
															"id": 747,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "24323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 640,
														"id": 748,
														"nodeType": "Return",
														"src": "24316:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "20111:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "20430:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "20454:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "20446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "20473:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "20465:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "20492:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "20484:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20436:73:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "20541:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "20533:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20532:16:0"
									},
									"scope": 1403,
									"src": "20421:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "24626:189:0",
										"statements": [
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24644:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "24636:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24636:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"arguments": [
														{
															"id": 769,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "24660:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 770,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "24663:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 771,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "24666:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															751,
															795
														],
														"referencedDeclaration": 751,
														"src": "24653:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24653:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24636:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$545",
															"typeString": "enum Math.Rounding"
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 774,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "24692:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$545",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 775,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "24704:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$545_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 543,
															"src": "24704:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$545",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "24692:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 779,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "24726:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 780,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "24729:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 781,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "24732:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 778,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "24719:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24719:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24747:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "24719:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24692:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "24688:98:0",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "24750:36:0",
													"statements": [
														{
															"expression": {
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 786,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "24764:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24774:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24764:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "24764:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 792,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 767,
													"src": "24802:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 765,
												"id": 793,
												"nodeType": "Return",
												"src": "24795:13:0"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "24352:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "24487:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "24511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "24503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "24530:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "24522:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "24549:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "24541:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24579:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "24570:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$545",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 759,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 545,
														"src": "24570:8:0"
													},
													"referencedDeclaration": 545,
													"src": "24570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$545",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24493:100:0"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "24617:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24616:9:0"
									},
									"scope": 1403,
									"src": "24478:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "25091:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "25105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25105:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 809,
												"nodeType": "IfStatement",
												"src": "25101:45:0",
												"trueBody": {
													"id": 808,
													"nodeType": "Block",
													"src": "25113:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25134:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 802,
															"id": 807,
															"nodeType": "Return",
															"src": "25127:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25833:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "25825:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 810,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25842:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 814,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "25853:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 813,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1075,
																			1111
																		],
																		"referencedDeclaration": 1075,
																		"src": "25848:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25848:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25859:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25848:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 818,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "25847:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25842:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25825:36:0"
											},
											{
												"id": 905,
												"nodeType": "UncheckedBlock",
												"src": "26262:408:0",
												"statements": [
													{
														"expression": {
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 821,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "26286:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 822,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "26296:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 823,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "26305:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 824,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "26309:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26305:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26296:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 827,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26295:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26320:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26295:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26286:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 831,
														"nodeType": "ExpressionStatement",
														"src": "26286:35:0"
													},
													{
														"expression": {
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 832,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "26335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 833,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "26345:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 834,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "26354:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 835,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "26358:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26354:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26345:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 838,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26344:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26369:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26344:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26335:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 842,
														"nodeType": "ExpressionStatement",
														"src": "26335:35:0"
													},
													{
														"expression": {
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 843,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "26384:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 844,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "26394:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 845,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "26403:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 846,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "26407:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26403:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26394:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 849,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26393:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26418:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26393:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26384:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 853,
														"nodeType": "ExpressionStatement",
														"src": "26384:35:0"
													},
													{
														"expression": {
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 854,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "26433:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 855,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "26443:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 856,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "26452:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 857,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "26456:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26452:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26443:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 860,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26442:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26467:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26442:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26433:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 864,
														"nodeType": "ExpressionStatement",
														"src": "26433:35:0"
													},
													{
														"expression": {
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 865,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "26482:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 866,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "26492:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 867,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "26501:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 868,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "26505:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26501:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26492:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 871,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26491:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26491:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26482:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 875,
														"nodeType": "ExpressionStatement",
														"src": "26482:35:0"
													},
													{
														"expression": {
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 876,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "26531:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 877,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "26541:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 878,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "26550:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 879,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "26554:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26550:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26541:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 882,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26540:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26565:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26540:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26531:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 886,
														"nodeType": "ExpressionStatement",
														"src": "26531:35:0"
													},
													{
														"expression": {
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 887,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "26580:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 888,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "26590:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 889,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "26599:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 890,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "26603:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26599:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26590:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 893,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26589:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26614:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26589:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26580:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 897,
														"nodeType": "ExpressionStatement",
														"src": "26580:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 899,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "26640:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 900,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "26648:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 901,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "26652:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26648:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 898,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "26636:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26636:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 802,
														"id": 904,
														"nodeType": "Return",
														"src": "26629:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "24821:208:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25043:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25056:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "25048:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25047:11:0"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "25082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25081:9:0"
									},
									"scope": 1403,
									"src": "25034:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "26852:161:0",
										"statements": [
											{
												"id": 941,
												"nodeType": "UncheckedBlock",
												"src": "26862:145:0",
												"statements": [
													{
														"assignments": [
															919
														],
														"declarations": [
															{
																"constant": false,
																"id": 919,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26894:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 941,
																"src": "26886:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 918,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26886:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 923,
														"initialValue": {
															"arguments": [
																{
																	"id": 921,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "26908:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 920,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	907,
																	943
																],
																"referencedDeclaration": 907,
																"src": "26903:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26903:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26886:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 924,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "26931:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$545",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 925,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 913,
																					"src": "26941:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$545",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 926,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 545,
																						"src": "26953:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$545_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 543,
																					"src": "26953:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$545",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "26941:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 929,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 919,
																						"src": "26968:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 930,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 919,
																						"src": "26977:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26968:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 932,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "26986:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26968:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26941:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26994:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26941:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26990:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 938,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26940:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26931:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 917,
														"id": 940,
														"nodeType": "Return",
														"src": "26924:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "26682:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "26785:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "26790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "26801:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$545",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 911,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 545,
														"src": "26801:8:0"
													},
													"referencedDeclaration": 545,
													"src": "26801:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$545",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26789:30:0"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "26843:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26842:9:0"
									},
									"scope": 1403,
									"src": "26776:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "27198:922:0",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "27216:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1074,
														"src": "27208:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27208:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"hexValue": "30",
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27225:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27208:18:0"
											},
											{
												"id": 1071,
												"nodeType": "UncheckedBlock",
												"src": "27236:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 955,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "27264:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27273:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27264:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27279:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27264:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 969,
														"nodeType": "IfStatement",
														"src": "27260:99:0",
														"trueBody": {
															"id": 968,
															"nodeType": "Block",
															"src": "27282:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 960,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "27300:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27310:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "27300:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 963,
																	"nodeType": "ExpressionStatement",
																	"src": "27300:13:0"
																},
																{
																	"expression": {
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 964,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "27331:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27341:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "27331:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 967,
																	"nodeType": "ExpressionStatement",
																	"src": "27331:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 970,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "27376:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27385:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27376:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27390:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27376:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 984,
														"nodeType": "IfStatement",
														"src": "27372:96:0",
														"trueBody": {
															"id": 983,
															"nodeType": "Block",
															"src": "27393:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 975,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "27411:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27421:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "27411:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 978,
																	"nodeType": "ExpressionStatement",
																	"src": "27411:12:0"
																},
																{
																	"expression": {
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 979,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "27441:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27451:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "27441:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 982,
																	"nodeType": "ExpressionStatement",
																	"src": "27441:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 985,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "27485:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27494:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27485:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27499:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27485:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 999,
														"nodeType": "IfStatement",
														"src": "27481:96:0",
														"trueBody": {
															"id": 998,
															"nodeType": "Block",
															"src": "27502:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 990,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "27520:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27530:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "27520:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 993,
																	"nodeType": "ExpressionStatement",
																	"src": "27520:12:0"
																},
																{
																	"expression": {
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 994,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "27550:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27560:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "27550:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 997,
																	"nodeType": "ExpressionStatement",
																	"src": "27550:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1000,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "27594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27603:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27594:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27608:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27594:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1014,
														"nodeType": "IfStatement",
														"src": "27590:96:0",
														"trueBody": {
															"id": 1013,
															"nodeType": "Block",
															"src": "27611:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1005,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "27629:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27639:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "27629:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1008,
																	"nodeType": "ExpressionStatement",
																	"src": "27629:12:0"
																},
																{
																	"expression": {
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1009,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "27659:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27669:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "27659:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1012,
																	"nodeType": "ExpressionStatement",
																	"src": "27659:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1015,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "27703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27712:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27703:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27703:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1029,
														"nodeType": "IfStatement",
														"src": "27699:93:0",
														"trueBody": {
															"id": 1028,
															"nodeType": "Block",
															"src": "27719:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1020,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "27737:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27747:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "27737:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1023,
																	"nodeType": "ExpressionStatement",
																	"src": "27737:11:0"
																},
																{
																	"expression": {
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1024,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "27766:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27776:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "27766:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1027,
																	"nodeType": "ExpressionStatement",
																	"src": "27766:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1030,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "27809:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27818:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27809:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27809:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1044,
														"nodeType": "IfStatement",
														"src": "27805:93:0",
														"trueBody": {
															"id": 1043,
															"nodeType": "Block",
															"src": "27825:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1035,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "27843:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27853:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27843:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "27843:11:0"
																},
																{
																	"expression": {
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1039,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "27872:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27882:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27872:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1042,
																	"nodeType": "ExpressionStatement",
																	"src": "27872:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1045,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "27915:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27924:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27915:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27928:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27915:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1059,
														"nodeType": "IfStatement",
														"src": "27911:93:0",
														"trueBody": {
															"id": 1058,
															"nodeType": "Block",
															"src": "27931:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "27949:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27959:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27949:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1053,
																	"nodeType": "ExpressionStatement",
																	"src": "27949:11:0"
																},
																{
																	"expression": {
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1054,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "27978:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27988:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27978:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1057,
																	"nodeType": "ExpressionStatement",
																	"src": "27978:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1060,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "28021:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28030:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "28021:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28034:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28021:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1070,
														"nodeType": "IfStatement",
														"src": "28017:64:0",
														"trueBody": {
															"id": 1069,
															"nodeType": "Block",
															"src": "28037:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1065,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "28055:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28065:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "28055:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1068,
																	"nodeType": "ExpressionStatement",
																	"src": "28055:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1072,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 952,
													"src": "28107:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 950,
												"id": 1073,
												"nodeType": "Return",
												"src": "28100:13:0"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "27019:113:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "27146:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27159:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27151:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27150:15:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27189:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27188:9:0"
									},
									"scope": 1403,
									"src": "27137:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "28353:165:0",
										"statements": [
											{
												"id": 1109,
												"nodeType": "UncheckedBlock",
												"src": "28363:149:0",
												"statements": [
													{
														"assignments": [
															1087
														],
														"declarations": [
															{
																"constant": false,
																"id": 1087,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "28395:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1109,
																"src": "28387:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1086,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28387:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1091,
														"initialValue": {
															"arguments": [
																{
																	"id": 1089,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "28409:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1088,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1075,
																	1111
																],
																"referencedDeclaration": 1075,
																"src": "28404:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28404:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28387:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1092,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "28436:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$545",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1093,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "28446:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$545",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1094,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 545,
																						"src": "28458:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$545_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1095,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 543,
																					"src": "28458:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$545",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "28446:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1099,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1097,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "28473:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1098,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1087,
																						"src": "28478:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "28473:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1100,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1078,
																					"src": "28487:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28473:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "28446:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28499:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "28446:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28495:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1106,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "28445:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "28436:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1085,
														"id": 1108,
														"nodeType": "Return",
														"src": "28429:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "28126:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "28282:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28295:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "28287:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28311:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "28302:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$545",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1079,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 545,
														"src": "28302:8:0"
													},
													"referencedDeclaration": 545,
													"src": "28302:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$545",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28286:34:0"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "28344:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28343:9:0"
									},
									"scope": 1403,
									"src": "28273:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "28705:828:0",
										"statements": [
											{
												"assignments": [
													1120
												],
												"declarations": [
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "28723:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "28715:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1119,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"hexValue": "30",
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28732:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28715:18:0"
											},
											{
												"id": 1236,
												"nodeType": "UncheckedBlock",
												"src": "28743:761:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1123,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "28771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28780:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28784:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "28780:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "28771:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1139,
														"nodeType": "IfStatement",
														"src": "28767:99:0",
														"trueBody": {
															"id": 1138,
															"nodeType": "Block",
															"src": "28788:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1128,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "28806:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28815:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28819:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "28815:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "28806:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1133,
																	"nodeType": "ExpressionStatement",
																	"src": "28806:15:0"
																},
																{
																	"expression": {
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1134,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "28839:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28849:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "28839:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1137,
																	"nodeType": "ExpressionStatement",
																	"src": "28839:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "28883:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28892:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28896:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28892:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "28883:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1156,
														"nodeType": "IfStatement",
														"src": "28879:99:0",
														"trueBody": {
															"id": 1155,
															"nodeType": "Block",
															"src": "28900:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1145,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "28918:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28927:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28931:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "28927:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "28918:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1150,
																	"nodeType": "ExpressionStatement",
																	"src": "28918:15:0"
																},
																{
																	"expression": {
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1151,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "28951:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28961:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "28951:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1154,
																	"nodeType": "ExpressionStatement",
																	"src": "28951:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "28995:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29004:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29008:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "28995:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1173,
														"nodeType": "IfStatement",
														"src": "28991:99:0",
														"trueBody": {
															"id": 1172,
															"nodeType": "Block",
															"src": "29012:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1162,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "29030:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29039:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29043:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "29039:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "29030:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1167,
																	"nodeType": "ExpressionStatement",
																	"src": "29030:15:0"
																},
																{
																	"expression": {
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1168,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "29063:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29073:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29063:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"nodeType": "ExpressionStatement",
																	"src": "29063:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1174,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "29107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29116:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29120:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "29116:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "29107:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1190,
														"nodeType": "IfStatement",
														"src": "29103:96:0",
														"trueBody": {
															"id": 1189,
															"nodeType": "Block",
															"src": "29123:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1179,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "29141:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1180,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29150:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29154:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "29150:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "29141:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1184,
																	"nodeType": "ExpressionStatement",
																	"src": "29141:14:0"
																},
																{
																	"expression": {
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1185,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "29173:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29183:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29173:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1188,
																	"nodeType": "ExpressionStatement",
																	"src": "29173:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "29216:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29225:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29225:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "29216:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1207,
														"nodeType": "IfStatement",
														"src": "29212:96:0",
														"trueBody": {
															"id": 1206,
															"nodeType": "Block",
															"src": "29232:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1196,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "29250:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29259:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29263:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "29259:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "29250:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1201,
																	"nodeType": "ExpressionStatement",
																	"src": "29250:14:0"
																},
																{
																	"expression": {
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1202,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "29282:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29292:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29282:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"nodeType": "ExpressionStatement",
																	"src": "29282:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1208,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "29325:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29334:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29338:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "29334:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "29325:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1224,
														"nodeType": "IfStatement",
														"src": "29321:96:0",
														"trueBody": {
															"id": 1223,
															"nodeType": "Block",
															"src": "29341:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1213,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "29359:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29368:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29372:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "29368:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "29359:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1218,
																	"nodeType": "ExpressionStatement",
																	"src": "29359:14:0"
																},
																{
																	"expression": {
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1219,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "29391:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29401:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29391:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1222,
																	"nodeType": "ExpressionStatement",
																	"src": "29391:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1225,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "29434:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29443:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29447:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29443:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "29434:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1235,
														"nodeType": "IfStatement",
														"src": "29430:64:0",
														"trueBody": {
															"id": 1234,
															"nodeType": "Block",
															"src": "29450:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1230,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "29468:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29478:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "29468:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1233,
																	"nodeType": "ExpressionStatement",
																	"src": "29468:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1237,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1120,
													"src": "29520:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1118,
												"id": 1238,
												"nodeType": "Return",
												"src": "29513:13:0"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "28524:114:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "28652:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28666:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "28658:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28657:15:0"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "28696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28695:9:0"
									},
									"scope": 1403,
									"src": "28643:890:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "29768:165:0",
										"statements": [
											{
												"id": 1274,
												"nodeType": "UncheckedBlock",
												"src": "29778:149:0",
												"statements": [
													{
														"assignments": [
															1252
														],
														"declarations": [
															{
																"constant": false,
																"id": 1252,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "29810:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1274,
																"src": "29802:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1251,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29802:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1256,
														"initialValue": {
															"arguments": [
																{
																	"id": 1254,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "29825:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1253,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1240,
																	1276
																],
																"referencedDeclaration": 1240,
																"src": "29819:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29819:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29802:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1257,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "29852:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$545",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1258,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1246,
																					"src": "29862:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$545",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1259,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 545,
																						"src": "29874:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$545_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 543,
																					"src": "29874:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$545",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "29862:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1262,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "29889:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1263,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "29893:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "29889:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1265,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1243,
																					"src": "29902:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29889:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "29862:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29914:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "29862:53:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29910:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29861:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "29852:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1250,
														"id": 1273,
														"nodeType": "Return",
														"src": "29845:71:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "29539:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "29696:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "29702:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "29726:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "29717:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$545",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1245,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1244,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 545,
														"src": "29717:8:0"
													},
													"referencedDeclaration": 545,
													"src": "29717:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$545",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29701:34:0"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "29759:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29758:9:0"
									},
									"scope": 1403,
									"src": "29687:246:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "30247:600:0",
										"statements": [
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "30265:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1362,
														"src": "30257:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1284,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30257:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1287,
												"initialValue": {
													"hexValue": "30",
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30274:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30257:18:0"
											},
											{
												"id": 1359,
												"nodeType": "UncheckedBlock",
												"src": "30285:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1288,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "30313:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30322:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "30313:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30328:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30313:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1302,
														"nodeType": "IfStatement",
														"src": "30309:98:0",
														"trueBody": {
															"id": 1301,
															"nodeType": "Block",
															"src": "30331:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1293,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "30349:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30359:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "30349:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1296,
																	"nodeType": "ExpressionStatement",
																	"src": "30349:13:0"
																},
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1297,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "30380:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30390:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "30380:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "30380:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1303,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "30424:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30433:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "30424:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30438:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30424:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1317,
														"nodeType": "IfStatement",
														"src": "30420:95:0",
														"trueBody": {
															"id": 1316,
															"nodeType": "Block",
															"src": "30441:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1308,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "30459:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30469:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "30459:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1311,
																	"nodeType": "ExpressionStatement",
																	"src": "30459:12:0"
																},
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "30489:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30499:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "30489:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "30489:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1318,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "30532:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30541:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "30532:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30546:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30532:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1332,
														"nodeType": "IfStatement",
														"src": "30528:95:0",
														"trueBody": {
															"id": 1331,
															"nodeType": "Block",
															"src": "30549:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1323,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "30567:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30577:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "30567:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1326,
																	"nodeType": "ExpressionStatement",
																	"src": "30567:12:0"
																},
																{
																	"expression": {
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1327,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "30597:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30607:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "30597:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1330,
																	"nodeType": "ExpressionStatement",
																	"src": "30597:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "30640:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30649:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "30640:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30654:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30640:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1347,
														"nodeType": "IfStatement",
														"src": "30636:95:0",
														"trueBody": {
															"id": 1346,
															"nodeType": "Block",
															"src": "30657:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1338,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "30675:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30685:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "30675:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1341,
																	"nodeType": "ExpressionStatement",
																	"src": "30675:12:0"
																},
																{
																	"expression": {
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1342,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "30705:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30715:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "30705:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1345,
																	"nodeType": "ExpressionStatement",
																	"src": "30705:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1348,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "30748:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30757:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "30748:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30748:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1358,
														"nodeType": "IfStatement",
														"src": "30744:64:0",
														"trueBody": {
															"id": 1357,
															"nodeType": "Block",
															"src": "30764:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "30782:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30792:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30782:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "30782:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1360,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1285,
													"src": "30834:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1283,
												"id": 1361,
												"nodeType": "Return",
												"src": "30827:13:0"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "29939:240:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30193:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30208:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "30200:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30199:15:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "30238:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30237:9:0"
									},
									"scope": 1403,
									"src": "30184:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "31083:173:0",
										"statements": [
											{
												"id": 1400,
												"nodeType": "UncheckedBlock",
												"src": "31093:157:0",
												"statements": [
													{
														"assignments": [
															1375
														],
														"declarations": [
															{
																"constant": false,
																"id": 1375,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "31125:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1400,
																"src": "31117:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31117:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1379,
														"initialValue": {
															"arguments": [
																{
																	"id": 1377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "31141:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1376,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1363,
																	1402
																],
																"referencedDeclaration": 1363,
																"src": "31134:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31134:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31117:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "31168:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$545",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1381,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1369,
																					"src": "31178:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$545",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1382,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 545,
																						"src": "31190:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$545_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1383,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 543,
																					"src": "31190:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$545",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "31178:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "31205:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1388,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1386,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1375,
																									"src": "31211:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1387,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "31220:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "31211:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1389,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "31210:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "31205:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1391,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1366,
																					"src": "31225:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31205:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "31178:52:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31237:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "31178:60:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31233:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "31177:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "31168:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1373,
														"id": 1399,
														"nodeType": "Return",
														"src": "31161:78:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "30853:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "31010:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31025:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "31017:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "31041:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "31032:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$545",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1367,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 545,
														"src": "31032:8:0"
													},
													"referencedDeclaration": 545,
													"src": "31032:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$545",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31016:34:0"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "31074:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31073:9:0"
									},
									"scope": 1403,
									"src": "31001:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2560,
							"src": "18956:12302:0",
							"usedErrors": []
						},
						{
							"id": 1404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31382:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1405,
								"nodeType": "StructuredDocumentation",
								"src": "31408:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1576,
							"linearizedBaseContracts": [
								1576
							],
							"name": "Strings",
							"nameLocation": "31451:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1408,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "31490:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "31465:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1406,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "31465:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "31501:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1411,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "31548:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "31525:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1409,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "31525:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1410,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "31566:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "31741:625:0",
										"statements": [
											{
												"id": 1457,
												"nodeType": "UncheckedBlock",
												"src": "31751:609:0",
												"statements": [
													{
														"assignments": [
															1420
														],
														"declarations": [
															{
																"constant": false,
																"id": 1420,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "31783:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1457,
																"src": "31775:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1419,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31775:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1427,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1423,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1414,
																		"src": "31803:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1421,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "31792:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1403_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1240,
																	"src": "31792:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31792:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31812:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "31792:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31775:38:0"
													},
													{
														"assignments": [
															1429
														],
														"declarations": [
															{
																"constant": false,
																"id": 1429,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "31841:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1457,
																"src": "31827:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1428,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "31827:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1434,
														"initialValue": {
															"arguments": [
																{
																	"id": 1432,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "31861:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "31850:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1430,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "31854:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31850:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31827:41:0"
													},
													{
														"assignments": [
															1436
														],
														"declarations": [
															{
																"constant": false,
																"id": 1436,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "31890:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1457,
																"src": "31882:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1435,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31882:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1437,
														"nodeType": "VariableDeclarationStatement",
														"src": "31882:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "31963:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "31981:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "31992:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "32004:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "32008:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "32000:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32000:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31988:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31988:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "31981:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1429,
																"isOffset": false,
																"isSlot": false,
																"src": "31992:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1420,
																"isOffset": false,
																"isSlot": false,
																"src": "32008:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1436,
																"isOffset": false,
																"isSlot": false,
																"src": "31981:3:0",
																"valueSize": 1
															}
														],
														"id": 1438,
														"nodeType": "InlineAssembly",
														"src": "31954:76:0"
													},
													{
														"body": {
															"id": 1453,
															"nodeType": "Block",
															"src": "32056:267:0",
															"statements": [
																{
																	"expression": {
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "32074:5:0",
																		"subExpression": {
																			"id": 1440,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "32074:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1442,
																	"nodeType": "ExpressionStatement",
																	"src": "32074:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "32157:84:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "32187:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "32201:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "32208:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "32197:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "32197:14:0"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "32213:8:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "32192:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "32192:30:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "32179:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32179:44:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "32179:44:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1408,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32213:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1436,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32187:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1414,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32201:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1443,
																	"nodeType": "InlineAssembly",
																	"src": "32148:93:0"
																},
																{
																	"expression": {
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1444,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1414,
																			"src": "32258:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32267:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "32258:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1447,
																	"nodeType": "ExpressionStatement",
																	"src": "32258:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1448,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1414,
																			"src": "32291:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32300:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "32291:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1452,
																	"nodeType": "IfStatement",
																	"src": "32287:21:0",
																	"trueBody": {
																		"id": 1451,
																		"nodeType": "Break",
																		"src": "32303:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32050:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1454,
														"nodeType": "WhileStatement",
														"src": "32043:280:0"
													},
													{
														"expression": {
															"id": 1455,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "32343:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1418,
														"id": 1456,
														"nodeType": "Return",
														"src": "32336:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "31575:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "31679:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31696:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "31688:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31687:15:0"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "31726:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31726:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31725:15:0"
									},
									"scope": 1576,
									"src": "31670:696:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "32545:100:0",
										"statements": [
											{
												"id": 1477,
												"nodeType": "UncheckedBlock",
												"src": "32555:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1468,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "32598:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1471,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1462,
																				"src": "32617:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1469,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1403,
																				"src": "32605:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1403_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1363,
																			"src": "32605:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32605:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32626:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32605:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1467,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1479,
																	1555,
																	1575
																],
																"referencedDeclaration": 1555,
																"src": "32586:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32586:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1466,
														"id": 1476,
														"nodeType": "Return",
														"src": "32579:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "32372:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "32480:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32500:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "32492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32491:15:0"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "32530:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "32530:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32529:15:0"
									},
									"scope": 1576,
									"src": "32471:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "32858:347:0",
										"statements": [
											{
												"assignments": [
													1490
												],
												"declarations": [
													{
														"constant": false,
														"id": 1490,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "32881:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1554,
														"src": "32868:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "32868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32900:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1494,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "32904:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32900:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32913:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "32900:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "32890:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1491,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "32894:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32890:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32868:47:0"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1500,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "32925:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1502,
														"indexExpression": {
															"hexValue": "30",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32932:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32925:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32937:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "32925:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "32925:15:0"
											},
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1506,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "32950:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1508,
														"indexExpression": {
															"hexValue": "31",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32957:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32950:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32962:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "32950:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "32950:15:0"
											},
											{
												"body": {
													"id": 1540,
													"nodeType": "Block",
													"src": "33020:83:0",
													"statements": [
														{
															"expression": {
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1526,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "33034:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1528,
																	"indexExpression": {
																		"id": 1527,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "33041:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "33034:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1529,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "33046:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1533,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1482,
																			"src": "33055:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33063:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "33055:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33046:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "33034:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1535,
															"nodeType": "ExpressionStatement",
															"src": "33034:33:0"
														},
														{
															"expression": {
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1536,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "33081:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33091:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "33081:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1539,
															"nodeType": "ExpressionStatement",
															"src": "33081:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1520,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "33008:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33012:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "33008:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1541,
												"initializationExpression": {
													"assignments": [
														1513
													],
													"declarations": [
														{
															"constant": false,
															"id": 1513,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "32988:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1541,
															"src": "32980:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1512,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32980:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1519,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32992:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1515,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1484,
																"src": "32996:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32992:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33005:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "32992:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "32980:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "33015:3:0",
														"subExpression": {
															"id": 1523,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "33017:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1525,
													"nodeType": "ExpressionStatement",
													"src": "33015:3:0"
												},
												"nodeType": "ForStatement",
												"src": "32975:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1543,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "33120:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33129:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33120:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33132:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33112:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33112:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "33112:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1551,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "33191:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "33184:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1549,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "33184:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33184:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1488,
												"id": 1553,
												"nodeType": "Return",
												"src": "33177:21:0"
											}
										]
									},
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "32651:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "32777:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32797:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "32789:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "32812:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "32804:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32788:31:0"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "32843:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "32843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32842:15:0"
									},
									"scope": 1576,
									"src": "32768:437:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "33430:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1568,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "33475:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "33467:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1566,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "33467:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33467:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33459:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1564,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "33459:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33459:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1571,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "33483:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1563,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1479,
															1555,
															1575
														],
														"referencedDeclaration": 1555,
														"src": "33447:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33447:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1562,
												"id": 1573,
												"nodeType": "Return",
												"src": "33440:59:0"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "33211:141:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "33366:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "33386:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "33378:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33377:14:0"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "33415:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33415:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33414:15:0"
									},
									"scope": 1576,
									"src": "33357:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2560,
							"src": "31443:2065:0",
							"usedErrors": []
						},
						{
							"id": 1577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33644:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1579,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "33942:7:0"
									},
									"id": 1580,
									"nodeType": "InheritanceSpecifier",
									"src": "33942:7:0"
								},
								{
									"baseName": {
										"id": 1581,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 400,
										"src": "33951:6:0"
									},
									"id": 1582,
									"nodeType": "InheritanceSpecifier",
									"src": "33951:6:0"
								},
								{
									"baseName": {
										"id": 1583,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 514,
										"src": "33959:7:0"
									},
									"id": 1584,
									"nodeType": "InheritanceSpecifier",
									"src": "33959:7:0"
								},
								{
									"baseName": {
										"id": 1585,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 539,
										"src": "33968:15:0"
									},
									"id": 1586,
									"nodeType": "InheritanceSpecifier",
									"src": "33968:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1578,
								"nodeType": "StructuredDocumentation",
								"src": "33676:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2513,
							"linearizedBaseContracts": [
								2513,
								539,
								514,
								400,
								378,
								21
							],
							"name": "ERC721",
							"nameLocation": "33932:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1589,
									"libraryName": {
										"id": 1587,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 350,
										"src": "33996:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "33990:26:0",
									"typeName": {
										"id": 1588,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "34008:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 1592,
									"libraryName": {
										"id": 1590,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1576,
										"src": "34027:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "34021:26:0",
									"typeName": {
										"id": 1591,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "34039:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1594,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "34086:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2513,
									"src": "34071:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1593,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "34071:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1596,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "34133:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2513,
									"src": "34118:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1595,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "34118:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1600,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "34229:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2513,
									"src": "34193:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1599,
										"keyType": {
											"id": 1597,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34201:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "34193:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1598,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "34212:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1604,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "34323:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2513,
									"src": "34287:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1603,
										"keyType": {
											"id": 1601,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "34295:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "34287:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1602,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34306:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1608,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "34424:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2513,
									"src": "34388:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1607,
										"keyType": {
											"id": 1605,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34396:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "34388:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1606,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "34407:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1614,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "34547:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2513,
									"src": "34494:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1613,
										"keyType": {
											"id": 1609,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "34502:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "34494:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1612,
											"keyType": {
												"id": 1610,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "34521:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "34513:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1611,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "34532:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "34741:57:0",
										"statements": [
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1622,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "34751:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1623,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "34759:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "34751:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "34751:13:0"
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1626,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "34774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1627,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "34784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "34774:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "34774:17:0"
											}
										]
									},
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "34572:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1631,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "34711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "34697:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "34732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "34718:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34718:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34696:44:0"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34741:0:0"
									},
									"scope": 2513,
									"src": "34685:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377,
										399
									],
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "34973:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1642,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "35002:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1644,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "35022:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$514_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$514_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1643,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "35017:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35017:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$514",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "35017:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "35002:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1648,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "35058:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1650,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "35078:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$539_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$539_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1649,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "35073:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35073:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$539",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "35073:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "35058:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "35002:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1657,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "35146:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1655,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "35122:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2513_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "35122:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35122:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35002:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1660,
												"nodeType": "Return",
												"src": "34983:175:0"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "34804:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "34874:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1638,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1636,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 400,
												"src": "34941:6:0"
											},
											{
												"id": 1637,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 378,
												"src": "34949:7:0"
											}
										],
										"src": "34932:25:0"
									},
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "34899:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "34892:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1633,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "34892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34891:20:0"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "34967:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34966:6:0"
									},
									"scope": 2513,
									"src": "34865:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										439
									],
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "35305:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1672,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1665,
																"src": "35323:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35340:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35332:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1673,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35332:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35332:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "35323:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35344:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 1671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35315:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "35315:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1681,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "35405:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1683,
													"indexExpression": {
														"id": 1682,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "35415:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35405:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1684,
												"nodeType": "Return",
												"src": "35398:23:0"
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "35171:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "35233:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35278:8:0"
									},
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "35251:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "35243:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35242:15:0"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "35296:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35295:9:0"
									},
									"scope": 2513,
									"src": "35224:204:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										447
									],
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "35566:138:0",
										"statements": [
											{
												"assignments": [
													1696
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "35584:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "35576:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1695,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35576:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1700,
												"initialValue": {
													"arguments": [
														{
															"id": 1698,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "35601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1697,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "35592:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35592:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35576:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1702,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "35627:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35644:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1703,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35636:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35636:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "35627:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35648:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 1701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35619:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "35619:56:0"
											},
											{
												"expression": {
													"id": 1711,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1696,
													"src": "35692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1712,
												"nodeType": "Return",
												"src": "35685:12:0"
											}
										]
									},
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "35434:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "35494:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1691,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35539:8:0"
									},
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35510:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "35502:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35501:17:0"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "35557:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35556:9:0"
									},
									"scope": 2513,
									"src": "35485:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										524
									],
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "35835:29:0",
										"statements": [
											{
												"expression": {
													"id": 1721,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1594,
													"src": "35852:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1722,
												"nodeType": "Return",
												"src": "35845:12:0"
											}
										]
									},
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "35710:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "35775:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35802:8:0"
									},
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35779:2:0"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "35820:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35820:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35819:15:0"
									},
									"scope": 2513,
									"src": "35766:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										530
									],
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "35999:31:0",
										"statements": [
											{
												"expression": {
													"id": 1731,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1596,
													"src": "36016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1732,
												"nodeType": "Return",
												"src": "36009:14:0"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "35870:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "35937:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1727,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35966:8:0"
									},
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35943:2:0"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "35984:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1728,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35984:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35983:15:0"
									},
									"scope": 2513,
									"src": "35928:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										538
									],
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "36184:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "36209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1743,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2391,
														"src": "36194:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36194:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "36194:23:0"
											},
											{
												"assignments": [
													1748
												],
												"declarations": [
													{
														"constant": false,
														"id": 1748,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "36242:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "36228:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1747,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "36228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1751,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1749,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "36252:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36252:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36228:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1754,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "36285:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36279:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1752,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "36279:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36279:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "36279:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36303:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "36279:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36363:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "36279:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1763,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "36331:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1764,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1737,
																				"src": "36340:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1459,
																			"src": "36340:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36340:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1761,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "36314:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "36314:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36314:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36307:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1759,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "36307:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36307:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1771,
												"nodeType": "Return",
												"src": "36272:93:0"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "36036:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "36105:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1739,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36151:8:0"
									},
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "36114:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36113:17:0"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "36169:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36169:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36168:15:0"
									},
									"scope": 2513,
									"src": "36096:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "36680:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "36697:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1778,
												"id": 1780,
												"nodeType": "Return",
												"src": "36690:9:0"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "36378:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "36623:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36631:2:0"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "36665:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36665:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36664:15:0"
									},
									"scope": 2513,
									"src": "36614:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										487
									],
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "36833:336:0",
										"statements": [
											{
												"assignments": [
													1792
												],
												"declarations": [
													{
														"constant": false,
														"id": 1792,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "36851:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1824,
														"src": "36843:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1791,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36843:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1797,
												"initialValue": {
													"arguments": [
														{
															"id": 1795,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "36874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1793,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "36859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2513_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1714,
														"src": "36859:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36859:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36843:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1799,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "36900:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1800,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1792,
																"src": "36906:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "36900:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36913:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 1798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36892:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "36892:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1806,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "36981:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36981:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1808,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1792,
																	"src": "36997:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "36981:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1811,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1792,
																		"src": "37023:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1812,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "37030:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37030:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1810,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "37006:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37006:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "36981:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37057:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 1805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36960:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "36960:170:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "37150:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1821,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "37154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1819,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2345,
														"src": "37141:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37141:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1823,
												"nodeType": "ExpressionStatement",
												"src": "37141:21:0"
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "36712:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "36772:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1789,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36824:8:0"
									},
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36788:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "36780:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "36792:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36779:29:0"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36833:0:0"
									},
									"scope": 2513,
									"src": "36763:406:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										503
									],
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "37315:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1835,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "37340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1834,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2391,
														"src": "37325:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37325:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "37325:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1838,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "37366:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1840,
													"indexExpression": {
														"id": 1839,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "37382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37366:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1841,
												"nodeType": "Return",
												"src": "37359:31:0"
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "37175:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "37239:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1830,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37288:8:0"
									},
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37259:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "37251:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37250:17:0"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "37306:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37305:9:0"
									},
									"scope": 2513,
									"src": "37230:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										495
									],
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "37548:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1853,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "37577:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37577:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1855,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "37591:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1856,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "37601:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1852,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "37558:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37558:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1858,
												"nodeType": "ExpressionStatement",
												"src": "37558:52:0"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "37403:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "37473:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1850,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37539:8:0"
									},
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37499:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "37491:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "37514:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "37509:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37509:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37490:33:0"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37548:0:0"
									},
									"scope": 2513,
									"src": "37464:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										513
									],
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "37786:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1871,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "37803:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1873,
														"indexExpression": {
															"id": 1872,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "37822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "37803:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1875,
													"indexExpression": {
														"id": 1874,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "37829:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37803:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1870,
												"id": 1876,
												"nodeType": "Return",
												"src": "37796:42:0"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "37623:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "37692:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1867,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37762:8:0"
									},
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "37709:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37732:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "37724:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37708:33:0"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "37780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1868,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37779:6:0"
									},
									"scope": 2513,
									"src": "37683:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										479
									],
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "38026:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1891,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "38115:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38115:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1893,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "38129:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1890,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "38096:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38096:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38139:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 1889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38088:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "38088:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1899,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "38208:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "38214:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1901,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "38218:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1898,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "38198:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38198:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "38198:28:0"
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "37851:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "37916:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1887,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38017:8:0"
									},
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37946:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "37938:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37968:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "37960:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37988:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "37980:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37928:73:0"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38026:0:0"
									},
									"scope": 2513,
									"src": "37907:326:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										469
									],
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "38422:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "38449:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "38455:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "38459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38468:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1916,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1924,
															1954
														],
														"referencedDeclaration": 1954,
														"src": "38432:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38432:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1922,
												"nodeType": "ExpressionStatement",
												"src": "38432:39:0"
											}
										]
									},
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "38239:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "38308:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1914,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38413:8:0"
									},
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38342:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "38334:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38364:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "38356:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38384:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "38376:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38324:73:0"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38422:0:0"
									},
									"scope": 2513,
									"src": "38299:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										459
									],
									"body": {
										"id": 1953,
										"nodeType": "Block",
										"src": "38694:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1939,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "38731:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38731:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1941,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "38745:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1938,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "38712:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38712:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38755:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 1937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38704:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38704:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "38704:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1947,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "38827:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "38833:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1949,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "38837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1950,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "38846:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1946,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "38813:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38813:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "38813:38:0"
											}
										]
									},
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "38484:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "38553:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1935,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38685:8:0"
									},
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38587:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "38579:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38609:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "38601:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "38621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38659:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "38646:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1932,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38646:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38569:100:0"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38694:0:0"
									},
									"scope": 2513,
									"src": "38544:314:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "39859:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1967,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "39879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1968,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "39885:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1969,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "39889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1966,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "39869:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39869:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "39869:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1974,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "39938:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1975,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "39944:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1976,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1961,
																	"src": "39948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1977,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "39957:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1973,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2453,
																"src": "39915:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39915:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39964:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39907:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "39907:110:0"
											}
										]
									},
									"documentation": {
										"id": 1955,
										"nodeType": "StructuredDocumentation",
										"src": "38864:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "39728:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "39751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39781:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "39773:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39801:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "39793:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39831:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "39818:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39741:100:0"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39859:0:0"
									},
									"scope": 2513,
									"src": "39719:305:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "40208:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1991,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "40225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1993,
													"indexExpression": {
														"id": 1992,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1986,
														"src": "40233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40225:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1990,
												"id": 1994,
												"nodeType": "Return",
												"src": "40218:23:0"
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "40030:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "40142:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40159:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "40151:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40150:17:0"
									},
									"returnParameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "40199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40198:9:0"
									},
									"scope": 2513,
									"src": "40133:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "40622:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2005,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1999,
																"src": "40648:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2004,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "40639:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40639:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2007,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40660:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40660:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40639:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2003,
												"id": 2012,
												"nodeType": "Return",
												"src": "40632:38:0"
											}
										]
									},
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "40254:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "40560:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40576:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "40568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40567:17:0"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "40616:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40615:6:0"
									},
									"scope": 2513,
									"src": "40551:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "40934:162:0",
										"statements": [
											{
												"assignments": [
													2025
												],
												"declarations": [
													{
														"constant": false,
														"id": 2025,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "40952:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "40944:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2024,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40944:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2030,
												"initialValue": {
													"arguments": [
														{
															"id": 2028,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "40975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2026,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "40960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2513_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1714,
														"src": "40960:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40960:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40944:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2031,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "41001:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2032,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "41012:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "41001:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2035,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2025,
																			"src": "41038:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2036,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2017,
																			"src": "41045:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2034,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1878,
																		"src": "41021:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41021:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "41001:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2040,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2019,
																			"src": "41069:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2039,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1843,
																		"src": "41057:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41057:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2042,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "41081:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "41057:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "41001:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2045,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "41000:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2023,
												"id": 2046,
												"nodeType": "Return",
												"src": "40993:96:0"
											}
										]
									},
									"documentation": {
										"id": 2015,
										"nodeType": "StructuredDocumentation",
										"src": "40683:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "40844:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "40871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "40863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40888:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "40880:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40862:34:0"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "40928:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40928:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40927:6:0"
									},
									"scope": 2513,
									"src": "40835:261:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "41491:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2057,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "41511:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2058,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "41515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41524:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2056,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2063,
															2092
														],
														"referencedDeclaration": 2092,
														"src": "41501:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41501:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "41501:26:0"
											}
										]
									},
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "41102:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "41435:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41453:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "41445:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41465:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "41457:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41444:29:0"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41491:0:0"
									},
									"scope": 2513,
									"src": "41426:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "41869:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2074,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "41885:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2075,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "41889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2073,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "41879:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41879:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "41879:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "41959:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "41951:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2080,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "41951:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41951:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2084,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2066,
																	"src": "41963:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2085,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "41967:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2086,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "41976:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2079,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2453,
																"src": "41928:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41928:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41995:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 2078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41907:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "41907:150:0"
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "41540:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "41764:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41791:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "41783:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "41803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "41841:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "41828:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2069,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41828:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41773:78:0"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41869:0:0"
									},
									"scope": 2513,
									"src": "41755:309:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "42447:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2101,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "42465:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42479:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42471:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "42471:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42471:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "42465:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42483:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 2100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42457:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "42457:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "42536:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2112,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "42545:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2111,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "42537:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42537:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42555:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42528:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42528:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "42528:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42626:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42618:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "42618:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42618:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2123,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "42630:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2124,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "42634:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42643:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2118,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "42597:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42597:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "42597:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "42740:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2130,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "42749:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2129,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "42741:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42741:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42759:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 2128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42732:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2135,
												"nodeType": "ExpressionStatement",
												"src": "42732:58:0"
											},
											{
												"id": 2142,
												"nodeType": "UncheckedBlock",
												"src": "42801:360:0",
												"statements": [
													{
														"expression": {
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2136,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "43132:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2138,
																"indexExpression": {
																	"id": 2137,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "43142:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "43132:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43149:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "43132:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2141,
														"nodeType": "ExpressionStatement",
														"src": "43132:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2143,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "43171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2145,
														"indexExpression": {
															"id": 2144,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "43179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "43171:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2146,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "43190:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43171:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2148,
												"nodeType": "ExpressionStatement",
												"src": "43171:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2150,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43217:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43217:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2154,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "43229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2155,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "43233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2149,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "43208:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43208:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2157,
												"nodeType": "EmitStatement",
												"src": "43203:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43280:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2159,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43272:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43272:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2163,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "43284:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2164,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "43288:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43297:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2158,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "43252:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43252:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2167,
												"nodeType": "ExpressionStatement",
												"src": "43252:47:0"
											}
										]
									},
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "42070:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "42395:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42409:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "42401:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42421:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "42413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42400:29:0"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42447:0:0"
									},
									"scope": 2513,
									"src": "42386:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "43681:713:0",
										"statements": [
											{
												"assignments": [
													2176
												],
												"declarations": [
													{
														"constant": false,
														"id": 2176,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "43699:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "43691:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2175,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43691:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2181,
												"initialValue": {
													"arguments": [
														{
															"id": 2179,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "43722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2177,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "43707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2513_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1714,
														"src": "43707:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43707:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43691:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2183,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "43762:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43777:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43769:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43769:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "43781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43790:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2182,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "43741:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43741:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "43741:51:0"
											},
											{
												"expression": {
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2192,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "43894:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2195,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "43917:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2193,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "43902:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$2513_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1714,
															"src": "43902:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "43902:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43894:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "43894:31:0"
											},
											{
												"expression": {
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "43963:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 2199,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "43970:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2201,
														"indexExpression": {
															"id": 2200,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "43986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "43970:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "43963:31:0"
											},
											{
												"id": 2210,
												"nodeType": "UncheckedBlock",
												"src": "44005:237:0",
												"statements": [
													{
														"expression": {
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2204,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "44210:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2206,
																"indexExpression": {
																	"id": 2205,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "44220:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "44210:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "44210:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2209,
														"nodeType": "ExpressionStatement",
														"src": "44210:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "44251:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 2211,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "44258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2213,
														"indexExpression": {
															"id": 2212,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "44266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "44258:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "44251:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2217,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "44299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44306:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44306:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44306:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2222,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "44318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2216,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "44290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44290:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2224,
												"nodeType": "EmitStatement",
												"src": "44285:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2226,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "44357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44372:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44364:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2227,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44364:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44364:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2231,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "44376:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44385:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2225,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "44337:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44337:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2234,
												"nodeType": "ExpressionStatement",
												"src": "44337:50:0"
											}
										]
									},
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "43312:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "43641:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43655:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "43647:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43646:17:0"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43681:0:0"
									},
									"scope": 2513,
									"src": "43632:762:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "44827:1124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2249,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "44860:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2247,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "44845:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2513_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1714,
																	"src": "44845:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44845:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2251,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "44872:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "44845:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44878:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 2246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44837:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "44837:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2257,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "44936:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44950:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44942:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2258,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "44942:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44942:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "44936:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44954:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 2256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44928:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "44928:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2267,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "45025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2268,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "45031:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2269,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "45035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45044:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2266,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "45004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45004:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2272,
												"nodeType": "ExpressionStatement",
												"src": "45004:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2276,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "45161:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2274,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "45146:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2513_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1714,
																	"src": "45146:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45146:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2278,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "45173:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "45146:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45179:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 2273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45138:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2282,
												"nodeType": "ExpressionStatement",
												"src": "45138:81:0"
											},
											{
												"expression": {
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "45281:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 2283,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "45288:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2285,
														"indexExpression": {
															"id": 2284,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "45304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "45288:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2287,
												"nodeType": "ExpressionStatement",
												"src": "45281:31:0"
											},
											{
												"id": 2300,
												"nodeType": "UncheckedBlock",
												"src": "45323:496:0",
												"statements": [
													{
														"expression": {
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2288,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "45756:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2290,
																"indexExpression": {
																	"id": 2289,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "45766:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "45756:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "45756:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2293,
														"nodeType": "ExpressionStatement",
														"src": "45756:20:0"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2294,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "45790:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2296,
																"indexExpression": {
																	"id": 2295,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "45800:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "45790:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45807:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "45790:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "45790:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2301,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "45828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2303,
														"indexExpression": {
															"id": 2302,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "45836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "45828:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2304,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "45847:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45828:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2306,
												"nodeType": "ExpressionStatement",
												"src": "45828:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2308,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "45874:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2309,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "45880:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2310,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "45884:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2307,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "45865:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45865:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2312,
												"nodeType": "EmitStatement",
												"src": "45860:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2314,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "45923:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2315,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "45929:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2316,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "45933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45942:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2313,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "45903:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45903:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "45903:41:0"
											}
										]
									},
									"documentation": {
										"id": 2237,
										"nodeType": "StructuredDocumentation",
										"src": "44400:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "44727:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44754:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "44746:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44776:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "44768:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44796:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "44788:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44736:73:0"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44827:0:0"
									},
									"scope": 2513,
									"src": "44718:1233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2344,
										"nodeType": "Block",
										"src": "46127:107:0",
										"statements": [
											{
												"expression": {
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2329,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "46137:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2331,
														"indexExpression": {
															"id": 2330,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "46153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46137:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2332,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2324,
														"src": "46164:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46137:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2334,
												"nodeType": "ExpressionStatement",
												"src": "46137:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2338,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "46205:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2336,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2513,
																	"src": "46190:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$2513_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1714,
																"src": "46190:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46190:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2340,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "46215:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2341,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "46219:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2335,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "46181:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46181:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2343,
												"nodeType": "EmitStatement",
												"src": "46176:51:0"
											}
										]
									},
									"documentation": {
										"id": 2322,
										"nodeType": "StructuredDocumentation",
										"src": "45957:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 2345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "46072:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46089:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "46081:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "46093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46080:29:0"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46127:0:0"
									},
									"scope": 2513,
									"src": "46063:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2376,
										"nodeType": "Block",
										"src": "46493:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2356,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2348,
																"src": "46511:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2357,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "46520:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "46511:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46530:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 2355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46503:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2361,
												"nodeType": "ExpressionStatement",
												"src": "46503:55:0"
											},
											{
												"expression": {
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2362,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "46568:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2365,
															"indexExpression": {
																"id": 2363,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2348,
																"src": "46587:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46568:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2366,
														"indexExpression": {
															"id": 2364,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "46594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46568:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2367,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2352,
														"src": "46606:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "46568:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2369,
												"nodeType": "ExpressionStatement",
												"src": "46568:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2371,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "46644:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2372,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "46651:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2373,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "46661:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2370,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "46629:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46629:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2375,
												"nodeType": "EmitStatement",
												"src": "46624:46:0"
											}
										]
									},
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "46240:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 2377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "46379:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "46415:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "46407:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "46438:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "46430:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "46461:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "46456:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "46456:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46397:78:0"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46493:0:0"
									},
									"scope": 2513,
									"src": "46370:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "46824:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2385,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "46850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2384,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "46842:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46842:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46860:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 2383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46834:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "46834:53:0"
											}
										]
									},
									"documentation": {
										"id": 2378,
										"nodeType": "StructuredDocumentation",
										"src": "46683:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 2391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "46770:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46793:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "46785:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46784:17:0"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46824:0:0"
									},
									"scope": 2513,
									"src": "46761:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "47601:676:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2405,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "47615:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "47615:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47615:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2450,
													"nodeType": "Block",
													"src": "48235:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48256:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2404,
															"id": 2449,
															"nodeType": "Return",
															"src": "48249:11:0"
														}
													]
												},
												"id": 2451,
												"nodeType": "IfStatement",
												"src": "47611:660:0",
												"trueBody": {
													"id": 2447,
													"nodeType": "Block",
													"src": "47632:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2427,
																		"nodeType": "Block",
																		"src": "47746:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2425,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2421,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2419,
																						"src": "47771:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2422,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 367,
																								"src": "47781:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$367_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2423,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 366,
																							"src": "47781:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2424,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "47781:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "47771:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 2404,
																				"id": 2426,
																				"nodeType": "Return",
																				"src": "47764:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2428,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2420,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2419,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "47738:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2428,
																				"src": "47731:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2418,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "47731:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "47730:15:0"
																	},
																	"src": "47722:115:0"
																},
																{
																	"block": {
																		"id": 2444,
																		"nodeType": "Block",
																		"src": "47866:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2432,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2430,
																							"src": "47888:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2433,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "47888:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2434,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "47905:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "47888:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2442,
																					"nodeType": "Block",
																					"src": "48015:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "48101:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "48138:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "48142:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "48134:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "48134:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "48157:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "48151:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "48151:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "48127:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "48127:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "48127:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 2430,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "48142:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2430,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "48157:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2441,
																							"nodeType": "InlineAssembly",
																							"src": "48092:95:0"
																						}
																					]
																				},
																				"id": 2443,
																				"nodeType": "IfStatement",
																				"src": "47884:321:0",
																				"trueBody": {
																					"id": 2440,
																					"nodeType": "Block",
																					"src": "47908:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 2437,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "47937:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 2436,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "47930:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 2438,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "47930:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2439,
																							"nodeType": "ExpressionStatement",
																							"src": "47930:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2445,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2431,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2430,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "47858:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2445,
																				"src": "47845:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2429,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "47845:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "47844:21:0"
																	},
																	"src": "47838:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2412,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "47687:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47687:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2414,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "47701:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2415,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2398,
																		"src": "47707:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2416,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2400,
																		"src": "47716:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2409,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2396,
																				"src": "47666:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2408,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "47650:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$367_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47650:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$367",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 366,
																	"src": "47650:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47650:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2446,
															"nodeType": "TryStatement",
															"src": "47646:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2392,
										"nodeType": "StructuredDocumentation",
										"src": "46900:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "47455:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47495:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "47487:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47517:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "47509:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47537:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "47529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "47567:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "47554:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47554:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47477:100:0"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "47595:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47594:6:0"
									},
									"scope": 2513,
									"src": "47446:831:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "49151:238:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2465,
														"name": "batchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2462,
														"src": "49165:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49177:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "49165:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2497,
												"nodeType": "IfStatement",
												"src": "49161:222:0",
												"trueBody": {
													"id": 2496,
													"nodeType": "Block",
													"src": "49180:203:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2468,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "49198:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49214:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "49206:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2469,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "49206:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "49206:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "49198:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2481,
															"nodeType": "IfStatement",
															"src": "49194:85:0",
															"trueBody": {
																"id": 2480,
																"nodeType": "Block",
																"src": "49218:61:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2474,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1604,
																					"src": "49236:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2476,
																				"indexExpression": {
																					"id": 2475,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "49246:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "49236:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2477,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2462,
																				"src": "49255:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49236:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2479,
																		"nodeType": "ExpressionStatement",
																		"src": "49236:28:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2482,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2458,
																	"src": "49296:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49310:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "49302:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2483,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "49302:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "49302:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "49296:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2495,
															"nodeType": "IfStatement",
															"src": "49292:81:0",
															"trueBody": {
																"id": 2494,
																"nodeType": "Block",
																"src": "49314:59:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2488,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1604,
																					"src": "49332:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2490,
																				"indexExpression": {
																					"id": 2489,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "49342:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "49332:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2491,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2462,
																				"src": "49349:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49332:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2493,
																		"nodeType": "ExpressionStatement",
																		"src": "49332:26:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "48283:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "49002:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49040:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "49032:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49062:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "49054:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "49074:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "49118:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "49110:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49022:111:0"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49151:0:0"
									},
									"scope": 2513,
									"src": "48993:396:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2511,
										"nodeType": "Block",
										"src": "50246:2:0",
										"statements": []
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "49395:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "50104:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50141:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "50133:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50163:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "50155:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "50183:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "50175:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "50213:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "50205:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50123:105:0"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50246:0:0"
									},
									"scope": 2513,
									"src": "50095:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2560,
							"src": "33923:16327:0",
							"usedErrors": []
						},
						{
							"id": 2514,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "50289:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2515,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2513,
										"src": "50339:6:0"
									},
									"id": 2516,
									"nodeType": "InheritanceSpecifier",
									"src": "50339:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2559,
							"linearizedBaseContracts": [
								2559,
								2513,
								539,
								514,
								400,
								378,
								21
							],
							"name": "NbaToddlers",
							"nameLocation": "50324:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 2519,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "50376:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2559,
									"src": "50352:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2517,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "50352:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 2518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "50389:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7824407f",
									"id": 2521,
									"mutability": "mutable",
									"name": "tokenSupply",
									"nameLocation": "50412:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2559,
									"src": "50397:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2520,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "50397:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2528,
										"nodeType": "Block",
										"src": "50475:2:0",
										"statements": []
									},
									"id": 2529,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e424120546f64646c657273",
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50451:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d1fcb5fcca63118181491c32cb3b4523b930d276e95022c11f272df62685890e",
														"typeString": "literal_string \"NBA Toddlers\""
													},
													"value": "NBA Toddlers"
												},
												{
													"hexValue": "4e424154",
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50467:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7249d3ab90a9148cad59801e139e7b17812fcbd13554ff69c23780cf3344a2e8",
														"typeString": "literal_string \"NBAT\""
													},
													"value": "NBAT"
												}
											],
											"id": 2526,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2523,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2513,
												"src": "50444:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50444:30:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50441:2:0"
									},
									"returnParameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50475:0:0"
									},
									"scope": 2559,
									"src": "50430:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2548,
										"nodeType": "Block",
										"src": "50508:145:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2533,
																"name": "tokenSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "50526:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2534,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "50540:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "50526:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20616c6c204e46547320617265206d696e7465642e",
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50552:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81c704de177478ab9a2166dee4b9b1fe3bc1784fbcb22599b3de7421be1b607e",
																"typeString": "literal_string \"ERC721: all NFTs are minted.\""
															},
															"value": "ERC721: all NFTs are minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_81c704de177478ab9a2166dee4b9b1fe3bc1784fbcb22599b3de7421be1b607e",
																"typeString": "literal_string \"ERC721: all NFTs are minted.\""
															}
														],
														"id": 2532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50518:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2538,
												"nodeType": "ExpressionStatement",
												"src": "50518:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "50599:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "50599:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2542,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2521,
															"src": "50611:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2539,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "50593:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50593:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2544,
												"nodeType": "ExpressionStatement",
												"src": "50593:30:0"
											},
											{
												"expression": {
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "50633:13:0",
													"subExpression": {
														"id": 2545,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "50633:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2547,
												"nodeType": "ExpressionStatement",
												"src": "50633:13:0"
											}
										]
									},
									"functionSelector": "1249c58b",
									"id": 2549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "50492:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50496:2:0"
									},
									"returnParameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50508:0:0"
									},
									"scope": 2559,
									"src": "50483:170:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1782
									],
									"body": {
										"id": 2557,
										"nodeType": "Block",
										"src": "50726:80:0",
										"statements": [
											{
												"expression": {
													"hexValue": "697066733a2f2f516d657144544876556f4b6a694b7652436e76633366583962357150516331633339394a4638734557355257346e2f",
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50743:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_87106076e8bce6de62544573c671674dc843d1e318d288926e15452e9a37f1d2",
														"typeString": "literal_string \"ipfs://QmeqDTHvUoKjiKvRCnvc3fX9b5qPQc1c399JF8sEW5RW4n/\""
													},
													"value": "ipfs://QmeqDTHvUoKjiKvRCnvc3fX9b5qPQc1c399JF8sEW5RW4n/"
												},
												"functionReturnParameters": 2554,
												"id": 2556,
												"nodeType": "Return",
												"src": "50736:63:0"
											}
										]
									},
									"id": 2558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "50668:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2551,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "50693:8:0"
									},
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50676:2:0"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "50711:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "50711:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50710:15:0"
									},
									"scope": 2559,
									"src": "50659:147:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2560,
							"src": "50315:493:0",
							"usedErrors": []
						}
					],
					"src": "139:50669:0"
				},
				"id": 0
			}
		}
	}
}